{
  "version": 3,
  "sources": ["../../../../../node_modules/@mori2003/jsimgui/build/jsimgui-webgpu-ft-demos.js"],
  "sourcesContent": ["async function MainExport(moduleArg = {}) {\n    var moduleRtn;\n    var Module = moduleArg;\n    var ENVIRONMENT_IS_WEB = true;\n    var ENVIRONMENT_IS_WORKER = false;\n    var ENVIRONMENT_IS_NODE = false;\n    var ENVIRONMENT_IS_SHELL = false;\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = (status, toThrow) => {\n        throw toThrow;\n    };\n    var _scriptName = import.meta.url;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n        if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n        }\n        return scriptDirectory + path;\n    }\n    var readAsync, readBinary;\n    if (ENVIRONMENT_IS_SHELL) {\n        const isNode =\n            typeof process == \"object\" && process.versions?.node && process.type != \"renderer\";\n        if (isNode || typeof window == \"object\" || typeof WorkerGlobalScope != \"undefined\")\n            throw new Error(\n                \"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\",\n            );\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n        try {\n            scriptDirectory = new URL(\".\", _scriptName).href;\n        } catch {}\n        if (!(typeof window == \"object\" || typeof WorkerGlobalScope != \"undefined\"))\n            throw new Error(\n                \"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\",\n            );\n        {\n            readAsync = async (url) => {\n                assert(!isFileURI(url), \"readAsync does not work with file:// URLs\");\n                var response = await fetch(url, { credentials: \"same-origin\" });\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                throw new Error(response.status + \" : \" + response.url);\n            };\n        }\n    } else {\n        throw new Error(\"environment detection error\");\n    }\n    var out = console.log.bind(console);\n    var err = console.error.bind(console);\n    assert(\n        !ENVIRONMENT_IS_WORKER,\n        \"worker environment detected but not enabled at build time.  Add `worker` to `-sENVIRONMENT` to enable.\",\n    );\n    assert(\n        !ENVIRONMENT_IS_NODE,\n        \"node environment detected but not enabled at build time.  Add `node` to `-sENVIRONMENT` to enable.\",\n    );\n    assert(\n        !ENVIRONMENT_IS_SHELL,\n        \"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.\",\n    );\n    var wasmBinary;\n    if (typeof WebAssembly != \"object\") {\n        err(\"no native wasm support detected\");\n    }\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n        if (!condition) {\n            abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\n        }\n    }\n    var isFileURI = (filename) => filename.startsWith(\"file://\");\n    function writeStackCookie() {\n        var max = _emscripten_stack_get_end();\n        assert((max & 3) == 0);\n        if (max == 0) {\n            max += 4;\n        }\n        HEAPU32[max >> 2] = 34821223;\n        HEAPU32[(max + 4) >> 2] = 2310721022;\n        HEAPU32[0 >> 2] = 1668509029;\n    }\n    function checkStackCookie() {\n        if (ABORT) return;\n        var max = _emscripten_stack_get_end();\n        if (max == 0) {\n            max += 4;\n        }\n        var cookie1 = HEAPU32[max >> 2];\n        var cookie2 = HEAPU32[(max + 4) >> 2];\n        if (cookie1 != 34821223 || cookie2 != 2310721022) {\n            abort(\n                `Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`,\n            );\n        }\n        if (HEAPU32[0 >> 2] != 1668509029) {\n            abort(\n                \"Runtime error: The application has corrupted its heap memory area (address zero)!\",\n            );\n        }\n    }\n    var runtimeDebug = true;\n    (() => {\n        var h16 = new Int16Array(1);\n        var h8 = new Int8Array(h16.buffer);\n        h16[0] = 25459;\n        if (h8[0] !== 115 || h8[1] !== 99)\n            throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\n    })();\n    function consumedModuleProp(prop) {\n        if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n            Object.defineProperty(Module, prop, {\n                configurable: true,\n                set() {\n                    abort(\n                        `Attempt to set \\`Module.${prop}\\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`,\n                    );\n                },\n            });\n        }\n    }\n    function makeInvalidEarlyAccess(name) {\n        return () =>\n            assert(\n                false,\n                `call to '${name}' via reference taken before Wasm module initialization`,\n            );\n    }\n    function ignoredModuleProp(prop) {\n        if (Object.getOwnPropertyDescriptor(Module, prop)) {\n            abort(\n                `\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`,\n            );\n        }\n    }\n    function isExportedByForceFilesystem(name) {\n        return (\n            name === \"FS_createPath\" ||\n            name === \"FS_createDataFile\" ||\n            name === \"FS_createPreloadedFile\" ||\n            name === \"FS_unlink\" ||\n            name === \"addRunDependency\" ||\n            name === \"FS_createLazyFile\" ||\n            name === \"FS_createDevice\" ||\n            name === \"removeRunDependency\"\n        );\n    }\n    function hookGlobalSymbolAccess(sym, func) {\n        if (typeof globalThis != \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n            Object.defineProperty(globalThis, sym, {\n                configurable: true,\n                get() {\n                    func();\n                    return undefined;\n                },\n            });\n        }\n    }\n    function missingGlobal(sym, msg) {\n        hookGlobalSymbolAccess(sym, () => {\n            warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\n        });\n    }\n    missingGlobal(\"buffer\", \"Please use HEAP8.buffer or wasmMemory.buffer\");\n    missingGlobal(\"asm\", \"Please use wasmExports instead\");\n    function missingLibrarySymbol(sym) {\n        hookGlobalSymbolAccess(sym, () => {\n            var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\n            var librarySymbol = sym;\n            if (!librarySymbol.startsWith(\"_\")) {\n                librarySymbol = \"$\" + sym;\n            }\n            msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\n            if (isExportedByForceFilesystem(sym)) {\n                msg +=\n                    \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n            }\n            warnOnce(msg);\n        });\n        unexportedRuntimeSymbol(sym);\n    }\n    function unexportedRuntimeSymbol(sym) {\n        if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n            Object.defineProperty(Module, sym, {\n                configurable: true,\n                get() {\n                    var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\n                    if (isExportedByForceFilesystem(sym)) {\n                        msg +=\n                            \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n                    }\n                    abort(msg);\n                },\n            });\n        }\n    }\n    var readyPromiseResolve, readyPromiseReject;\n    var wasmMemory;\n    var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    var HEAP64, HEAPU64;\n    var runtimeInitialized = false;\n    function updateMemoryViews() {\n        var b = wasmMemory.buffer;\n        HEAP8 = new Int8Array(b);\n        HEAP16 = new Int16Array(b);\n        HEAPU8 = new Uint8Array(b);\n        HEAPU16 = new Uint16Array(b);\n        HEAP32 = new Int32Array(b);\n        HEAPU32 = new Uint32Array(b);\n        HEAPF32 = new Float32Array(b);\n        HEAPF64 = new Float64Array(b);\n        HEAP64 = new BigInt64Array(b);\n        HEAPU64 = new BigUint64Array(b);\n    }\n    assert(\n        typeof Int32Array != \"undefined\" &&\n            typeof Float64Array !== \"undefined\" &&\n            Int32Array.prototype.subarray != undefined &&\n            Int32Array.prototype.set != undefined,\n        \"JS engine does not provide full typed array support\",\n    );\n    function preRun() {\n        if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n                addOnPreRun(Module[\"preRun\"].shift());\n            }\n        }\n        consumedModuleProp(\"preRun\");\n        callRuntimeCallbacks(onPreRuns);\n    }\n    function initRuntime() {\n        assert(!runtimeInitialized);\n        runtimeInitialized = true;\n        checkStackCookie();\n        if (!Module[\"noFSInit\"] && !FS.initialized) FS.init();\n        TTY.init();\n        wasmExports[\"__wasm_call_ctors\"]();\n        FS.ignorePermissions = false;\n    }\n    function postRun() {\n        checkStackCookie();\n        if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n                addOnPostRun(Module[\"postRun\"].shift());\n            }\n        }\n        consumedModuleProp(\"postRun\");\n        callRuntimeCallbacks(onPostRuns);\n    }\n    var runDependencies = 0;\n    var dependenciesFulfilled = null;\n    var runDependencyTracking = {};\n    var runDependencyWatcher = null;\n    function addRunDependency(id) {\n        runDependencies++;\n        Module[\"monitorRunDependencies\"]?.(runDependencies);\n        if (id) {\n            assert(!runDependencyTracking[id]);\n            runDependencyTracking[id] = 1;\n            if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\n                runDependencyWatcher = setInterval(() => {\n                    if (ABORT) {\n                        clearInterval(runDependencyWatcher);\n                        runDependencyWatcher = null;\n                        return;\n                    }\n                    var shown = false;\n                    for (var dep in runDependencyTracking) {\n                        if (!shown) {\n                            shown = true;\n                            err(\"still waiting on run dependencies:\");\n                        }\n                        err(`dependency: ${dep}`);\n                    }\n                    if (shown) {\n                        err(\"(end of list)\");\n                    }\n                }, 1e4);\n            }\n        } else {\n            err(\"warning: run dependency added without ID\");\n        }\n    }\n    function removeRunDependency(id) {\n        runDependencies--;\n        Module[\"monitorRunDependencies\"]?.(runDependencies);\n        if (id) {\n            assert(runDependencyTracking[id]);\n            delete runDependencyTracking[id];\n        } else {\n            err(\"warning: run dependency removed without ID\");\n        }\n        if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n                clearInterval(runDependencyWatcher);\n                runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n                var callback = dependenciesFulfilled;\n                dependenciesFulfilled = null;\n                callback();\n            }\n        }\n    }\n    function abort(what) {\n        Module[\"onAbort\"]?.(what);\n        what = \"Aborted(\" + what + \")\";\n        err(what);\n        ABORT = true;\n        var e = new WebAssembly.RuntimeError(what);\n        readyPromiseReject?.(e);\n        throw e;\n    }\n    function createExportWrapper(name, nargs) {\n        return (...args) => {\n            assert(\n                runtimeInitialized,\n                `native function \\`${name}\\` called before runtime initialization`,\n            );\n            var f = wasmExports[name];\n            assert(f, `exported native function \\`${name}\\` not found`);\n            assert(\n                args.length <= nargs,\n                `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`,\n            );\n            return f(...args);\n        };\n    }\n    var wasmBinaryFile;\n    function findWasmBinary() {\n        if (Module[\"locateFile\"]) {\n            return locateFile(\"jsimgui-webgpu-ft-demos.wasm\");\n        }\n        return new URL(\"jsimgui-webgpu-ft-demos.wasm\", import.meta.url).href;\n    }\n    function getBinarySync(file) {\n        if (file == wasmBinaryFile && wasmBinary) {\n            return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n            return readBinary(file);\n        }\n        throw \"both async and sync fetching of the wasm failed\";\n    }\n    async function getWasmBinary(binaryFile) {\n        if (!wasmBinary) {\n            try {\n                var response = await readAsync(binaryFile);\n                return new Uint8Array(response);\n            } catch {}\n        }\n        return getBinarySync(binaryFile);\n    }\n    async function instantiateArrayBuffer(binaryFile, imports) {\n        try {\n            var binary = await getWasmBinary(binaryFile);\n            var instance = await WebAssembly.instantiate(binary, imports);\n            return instance;\n        } catch (reason) {\n            err(`failed to asynchronously prepare wasm: ${reason}`);\n            if (isFileURI(wasmBinaryFile)) {\n                err(\n                    `warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`,\n                );\n            }\n            abort(reason);\n        }\n    }\n    async function instantiateAsync(binary, binaryFile, imports) {\n        if (!binary && typeof WebAssembly.instantiateStreaming == \"function\") {\n            try {\n                var response = fetch(binaryFile, { credentials: \"same-origin\" });\n                var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\n                return instantiationResult;\n            } catch (reason) {\n                err(`wasm streaming compile failed: ${reason}`);\n                err(\"falling back to ArrayBuffer instantiation\");\n            }\n        }\n        return instantiateArrayBuffer(binaryFile, imports);\n    }\n    function getWasmImports() {\n        return { env: wasmImports, wasi_snapshot_preview1: wasmImports };\n    }\n    async function createWasm() {\n        function receiveInstance(instance, module) {\n            wasmExports = instance.exports;\n            wasmMemory = wasmExports[\"memory\"];\n            assert(wasmMemory, \"memory not found in wasm exports\");\n            updateMemoryViews();\n            wasmTable = wasmExports[\"__indirect_function_table\"];\n            assert(wasmTable, \"table not found in wasm exports\");\n            assignWasmExports(wasmExports);\n            removeRunDependency(\"wasm-instantiate\");\n            return wasmExports;\n        }\n        addRunDependency(\"wasm-instantiate\");\n        var trueModule = Module;\n        function receiveInstantiationResult(result) {\n            assert(\n                Module === trueModule,\n                \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\",\n            );\n            trueModule = null;\n            return receiveInstance(result[\"instance\"]);\n        }\n        var info = getWasmImports();\n        if (Module[\"instantiateWasm\"]) {\n            return new Promise((resolve, reject) => {\n                try {\n                    Module[\"instantiateWasm\"](info, (mod, inst) => {\n                        resolve(receiveInstance(mod, inst));\n                    });\n                } catch (e) {\n                    err(`Module.instantiateWasm callback failed with error: ${e}`);\n                    reject(e);\n                }\n            });\n        }\n        wasmBinaryFile ??= findWasmBinary();\n        var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\n        var exports = receiveInstantiationResult(result);\n        return exports;\n    }\n    class ExitStatus {\n        name = \"ExitStatus\";\n        constructor(status) {\n            this.message = `Program terminated with exit(${status})`;\n            this.status = status;\n        }\n    }\n    var callRuntimeCallbacks = (callbacks) => {\n        while (callbacks.length > 0) {\n            callbacks.shift()(Module);\n        }\n    };\n    var onPostRuns = [];\n    var addOnPostRun = (cb) => onPostRuns.push(cb);\n    var onPreRuns = [];\n    var addOnPreRun = (cb) => onPreRuns.push(cb);\n    var noExitRuntime = true;\n    var ptrToString = (ptr) => {\n        assert(typeof ptr === \"number\");\n        ptr >>>= 0;\n        return \"0x\" + ptr.toString(16).padStart(8, \"0\");\n    };\n    var stackRestore = (val) => __emscripten_stack_restore(val);\n    var stackSave = () => _emscripten_stack_get_current();\n    var warnOnce = (text) => {\n        warnOnce.shown ||= {};\n        if (!warnOnce.shown[text]) {\n            warnOnce.shown[text] = 1;\n            err(text);\n        }\n    };\n    var UTF8Decoder = new TextDecoder();\n    var findStringEnd = (heapOrArray, idx, maxBytesToRead, ignoreNul) => {\n        var maxIdx = idx + maxBytesToRead;\n        if (ignoreNul) return maxIdx;\n        while (heapOrArray[idx] && !(idx >= maxIdx)) ++idx;\n        return idx;\n    };\n    var UTF8ToString = (ptr, maxBytesToRead, ignoreNul) => {\n        assert(typeof ptr == \"number\", `UTF8ToString expects a number (got ${typeof ptr})`);\n        if (!ptr) return \"\";\n        var end = findStringEnd(HEAPU8, ptr, maxBytesToRead, ignoreNul);\n        return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));\n    };\n    var ___assert_fail = (condition, filename, line, func) =>\n        abort(\n            `Assertion failed: ${UTF8ToString(condition)}, at: ` +\n                [\n                    filename ? UTF8ToString(filename) : \"unknown filename\",\n                    line,\n                    func ? UTF8ToString(func) : \"unknown function\",\n                ],\n        );\n    class ExceptionInfo {\n        constructor(excPtr) {\n            this.excPtr = excPtr;\n            this.ptr = excPtr - 24;\n        }\n        set_type(type) {\n            HEAPU32[(this.ptr + 4) >> 2] = type;\n        }\n        get_type() {\n            return HEAPU32[(this.ptr + 4) >> 2];\n        }\n        set_destructor(destructor) {\n            HEAPU32[(this.ptr + 8) >> 2] = destructor;\n        }\n        get_destructor() {\n            return HEAPU32[(this.ptr + 8) >> 2];\n        }\n        set_caught(caught) {\n            caught = caught ? 1 : 0;\n            HEAP8[this.ptr + 12] = caught;\n        }\n        get_caught() {\n            return HEAP8[this.ptr + 12] != 0;\n        }\n        set_rethrown(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            HEAP8[this.ptr + 13] = rethrown;\n        }\n        get_rethrown() {\n            return HEAP8[this.ptr + 13] != 0;\n        }\n        init(type, destructor) {\n            this.set_adjusted_ptr(0);\n            this.set_type(type);\n            this.set_destructor(destructor);\n        }\n        set_adjusted_ptr(adjustedPtr) {\n            HEAPU32[(this.ptr + 16) >> 2] = adjustedPtr;\n        }\n        get_adjusted_ptr() {\n            return HEAPU32[(this.ptr + 16) >> 2];\n        }\n    }\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n    var ___cxa_throw = (ptr, type, destructor) => {\n        var info = new ExceptionInfo(ptr);\n        info.init(type, destructor);\n        exceptionLast = ptr;\n        uncaughtExceptionCount++;\n        assert(\n            false,\n            \"Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.\",\n        );\n    };\n    var syscallGetVarargI = () => {\n        assert(SYSCALLS.varargs != undefined);\n        var ret = HEAP32[+SYSCALLS.varargs >> 2];\n        SYSCALLS.varargs += 4;\n        return ret;\n    };\n    var syscallGetVarargP = syscallGetVarargI;\n    var PATH = {\n        isAbs: (path) => path.charAt(0) === \"/\",\n        splitPath: (filename) => {\n            var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n            return splitPathRe.exec(filename).slice(1);\n        },\n        normalizeArray: (parts, allowAboveRoot) => {\n            var up = 0;\n            for (var i = parts.length - 1; i >= 0; i--) {\n                var last = parts[i];\n                if (last === \".\") {\n                    parts.splice(i, 1);\n                } else if (last === \"..\") {\n                    parts.splice(i, 1);\n                    up++;\n                } else if (up) {\n                    parts.splice(i, 1);\n                    up--;\n                }\n            }\n            if (allowAboveRoot) {\n                for (; up; up--) {\n                    parts.unshift(\"..\");\n                }\n            }\n            return parts;\n        },\n        normalize: (path) => {\n            var isAbsolute = PATH.isAbs(path),\n                trailingSlash = path.slice(-1) === \"/\";\n            path = PATH.normalizeArray(\n                path.split(\"/\").filter((p) => !!p),\n                !isAbsolute,\n            ).join(\"/\");\n            if (!path && !isAbsolute) {\n                path = \".\";\n            }\n            if (path && trailingSlash) {\n                path += \"/\";\n            }\n            return (isAbsolute ? \"/\" : \"\") + path;\n        },\n        dirname: (path) => {\n            var result = PATH.splitPath(path),\n                root = result[0],\n                dir = result[1];\n            if (!root && !dir) {\n                return \".\";\n            }\n            if (dir) {\n                dir = dir.slice(0, -1);\n            }\n            return root + dir;\n        },\n        basename: (path) => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\n        join: (...paths) => PATH.normalize(paths.join(\"/\")),\n        join2: (l, r) => PATH.normalize(l + \"/\" + r),\n    };\n    var initRandomFill = () => (view) => crypto.getRandomValues(view);\n    var randomFill = (view) => {\n        (randomFill = initRandomFill())(view);\n    };\n    var PATH_FS = {\n        resolve: (...args) => {\n            var resolvedPath = \"\",\n                resolvedAbsolute = false;\n            for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                var path = i >= 0 ? args[i] : FS.cwd();\n                if (typeof path != \"string\") {\n                    throw new TypeError(\"Arguments to path.resolve must be strings\");\n                } else if (!path) {\n                    return \"\";\n                }\n                resolvedPath = path + \"/\" + resolvedPath;\n                resolvedAbsolute = PATH.isAbs(path);\n            }\n            resolvedPath = PATH.normalizeArray(\n                resolvedPath.split(\"/\").filter((p) => !!p),\n                !resolvedAbsolute,\n            ).join(\"/\");\n            return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        },\n        relative: (from, to) => {\n            from = PATH_FS.resolve(from).slice(1);\n            to = PATH_FS.resolve(to).slice(1);\n            function trim(arr) {\n                var start = 0;\n                for (; start < arr.length; start++) {\n                    if (arr[start] !== \"\") break;\n                }\n                var end = arr.length - 1;\n                for (; end >= 0; end--) {\n                    if (arr[end] !== \"\") break;\n                }\n                if (start > end) return [];\n                return arr.slice(start, end - start + 1);\n            }\n            var fromParts = trim(from.split(\"/\"));\n            var toParts = trim(to.split(\"/\"));\n            var length = Math.min(fromParts.length, toParts.length);\n            var samePartsLength = length;\n            for (var i = 0; i < length; i++) {\n                if (fromParts[i] !== toParts[i]) {\n                    samePartsLength = i;\n                    break;\n                }\n            }\n            var outputParts = [];\n            for (var i = samePartsLength; i < fromParts.length; i++) {\n                outputParts.push(\"..\");\n            }\n            outputParts = outputParts.concat(toParts.slice(samePartsLength));\n            return outputParts.join(\"/\");\n        },\n    };\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead, ignoreNul) => {\n        var endPtr = findStringEnd(heapOrArray, idx, maxBytesToRead, ignoreNul);\n        return UTF8Decoder.decode(\n            heapOrArray.buffer\n                ? heapOrArray.subarray(idx, endPtr)\n                : new Uint8Array(heapOrArray.slice(idx, endPtr)),\n        );\n    };\n    var FS_stdin_getChar_buffer = [];\n    var lengthBytesUTF8 = (str) => {\n        var len = 0;\n        for (var i = 0; i < str.length; ++i) {\n            var c = str.charCodeAt(i);\n            if (c <= 127) {\n                len++;\n            } else if (c <= 2047) {\n                len += 2;\n            } else if (c >= 55296 && c <= 57343) {\n                len += 4;\n                ++i;\n            } else {\n                len += 3;\n            }\n        }\n        return len;\n    };\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n        assert(typeof str === \"string\", `stringToUTF8Array expects a string (got ${typeof str})`);\n        if (!(maxBytesToWrite > 0)) return 0;\n        var startIdx = outIdx;\n        var endIdx = outIdx + maxBytesToWrite - 1;\n        for (var i = 0; i < str.length; ++i) {\n            var u = str.codePointAt(i);\n            if (u <= 127) {\n                if (outIdx >= endIdx) break;\n                heap[outIdx++] = u;\n            } else if (u <= 2047) {\n                if (outIdx + 1 >= endIdx) break;\n                heap[outIdx++] = 192 | (u >> 6);\n                heap[outIdx++] = 128 | (u & 63);\n            } else if (u <= 65535) {\n                if (outIdx + 2 >= endIdx) break;\n                heap[outIdx++] = 224 | (u >> 12);\n                heap[outIdx++] = 128 | ((u >> 6) & 63);\n                heap[outIdx++] = 128 | (u & 63);\n            } else {\n                if (outIdx + 3 >= endIdx) break;\n                if (u > 1114111)\n                    warnOnce(\n                        \"Invalid Unicode code point \" +\n                            ptrToString(u) +\n                            \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\",\n                    );\n                heap[outIdx++] = 240 | (u >> 18);\n                heap[outIdx++] = 128 | ((u >> 12) & 63);\n                heap[outIdx++] = 128 | ((u >> 6) & 63);\n                heap[outIdx++] = 128 | (u & 63);\n                i++;\n            }\n        }\n        heap[outIdx] = 0;\n        return outIdx - startIdx;\n    };\n    var intArrayFromString = (stringy, dontAddNull, length) => {\n        var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n        var u8array = new Array(len);\n        var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n        if (dontAddNull) u8array.length = numBytesWritten;\n        return u8array;\n    };\n    var FS_stdin_getChar = () => {\n        if (!FS_stdin_getChar_buffer.length) {\n            var result = null;\n            if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n                result = window.prompt(\"Input: \");\n                if (result !== null) {\n                    result += \"\\n\";\n                }\n            } else {\n            }\n            if (!result) {\n                return null;\n            }\n            FS_stdin_getChar_buffer = intArrayFromString(result, true);\n        }\n        return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n        ttys: [],\n        init() {},\n        shutdown() {},\n        register(dev, ops) {\n            TTY.ttys[dev] = { input: [], output: [], ops };\n            FS.registerDevice(dev, TTY.stream_ops);\n        },\n        stream_ops: {\n            open(stream) {\n                var tty = TTY.ttys[stream.node.rdev];\n                if (!tty) {\n                    throw new FS.ErrnoError(43);\n                }\n                stream.tty = tty;\n                stream.seekable = false;\n            },\n            close(stream) {\n                stream.tty.ops.fsync(stream.tty);\n            },\n            fsync(stream) {\n                stream.tty.ops.fsync(stream.tty);\n            },\n            read(stream, buffer, offset, length, pos) {\n                if (!stream.tty || !stream.tty.ops.get_char) {\n                    throw new FS.ErrnoError(60);\n                }\n                var bytesRead = 0;\n                for (var i = 0; i < length; i++) {\n                    var result;\n                    try {\n                        result = stream.tty.ops.get_char(stream.tty);\n                    } catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                    if (result === undefined && bytesRead === 0) {\n                        throw new FS.ErrnoError(6);\n                    }\n                    if (result === null || result === undefined) break;\n                    bytesRead++;\n                    buffer[offset + i] = result;\n                }\n                if (bytesRead) {\n                    stream.node.atime = Date.now();\n                }\n                return bytesRead;\n            },\n            write(stream, buffer, offset, length, pos) {\n                if (!stream.tty || !stream.tty.ops.put_char) {\n                    throw new FS.ErrnoError(60);\n                }\n                try {\n                    for (var i = 0; i < length; i++) {\n                        stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                    }\n                } catch (e) {\n                    throw new FS.ErrnoError(29);\n                }\n                if (length) {\n                    stream.node.mtime = stream.node.ctime = Date.now();\n                }\n                return i;\n            },\n        },\n        default_tty_ops: {\n            get_char(tty) {\n                return FS_stdin_getChar();\n            },\n            put_char(tty, val) {\n                if (val === null || val === 10) {\n                    out(UTF8ArrayToString(tty.output));\n                    tty.output = [];\n                } else {\n                    if (val != 0) tty.output.push(val);\n                }\n            },\n            fsync(tty) {\n                if (tty.output?.length > 0) {\n                    out(UTF8ArrayToString(tty.output));\n                    tty.output = [];\n                }\n            },\n            ioctl_tcgets(tty) {\n                return {\n                    c_iflag: 25856,\n                    c_oflag: 5,\n                    c_cflag: 191,\n                    c_lflag: 35387,\n                    c_cc: [\n                        3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0,\n                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                    ],\n                };\n            },\n            ioctl_tcsets(tty, optional_actions, data) {\n                return 0;\n            },\n            ioctl_tiocgwinsz(tty) {\n                return [24, 80];\n            },\n        },\n        default_tty1_ops: {\n            put_char(tty, val) {\n                if (val === null || val === 10) {\n                    err(UTF8ArrayToString(tty.output));\n                    tty.output = [];\n                } else {\n                    if (val != 0) tty.output.push(val);\n                }\n            },\n            fsync(tty) {\n                if (tty.output?.length > 0) {\n                    err(UTF8ArrayToString(tty.output));\n                    tty.output = [];\n                }\n            },\n        },\n    };\n    var zeroMemory = (ptr, size) => HEAPU8.fill(0, ptr, ptr + size);\n    var alignMemory = (size, alignment) => {\n        assert(alignment, \"alignment argument is required\");\n        return Math.ceil(size / alignment) * alignment;\n    };\n    var mmapAlloc = (size) => {\n        size = alignMemory(size, 65536);\n        var ptr = _emscripten_builtin_memalign(65536, size);\n        if (ptr) zeroMemory(ptr, size);\n        return ptr;\n    };\n    var MEMFS = {\n        ops_table: null,\n        mount(mount) {\n            return MEMFS.createNode(null, \"/\", 16895, 0);\n        },\n        createNode(parent, name, mode, dev) {\n            if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n                throw new FS.ErrnoError(63);\n            }\n            MEMFS.ops_table ||= {\n                dir: {\n                    node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        lookup: MEMFS.node_ops.lookup,\n                        mknod: MEMFS.node_ops.mknod,\n                        rename: MEMFS.node_ops.rename,\n                        unlink: MEMFS.node_ops.unlink,\n                        rmdir: MEMFS.node_ops.rmdir,\n                        readdir: MEMFS.node_ops.readdir,\n                        symlink: MEMFS.node_ops.symlink,\n                    },\n                    stream: { llseek: MEMFS.stream_ops.llseek },\n                },\n                file: {\n                    node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\n                    stream: {\n                        llseek: MEMFS.stream_ops.llseek,\n                        read: MEMFS.stream_ops.read,\n                        write: MEMFS.stream_ops.write,\n                        mmap: MEMFS.stream_ops.mmap,\n                        msync: MEMFS.stream_ops.msync,\n                    },\n                },\n                link: {\n                    node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        readlink: MEMFS.node_ops.readlink,\n                    },\n                    stream: {},\n                },\n                chrdev: {\n                    node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\n                    stream: FS.chrdev_stream_ops,\n                },\n            };\n            var node = FS.createNode(parent, name, mode, dev);\n            if (FS.isDir(node.mode)) {\n                node.node_ops = MEMFS.ops_table.dir.node;\n                node.stream_ops = MEMFS.ops_table.dir.stream;\n                node.contents = {};\n            } else if (FS.isFile(node.mode)) {\n                node.node_ops = MEMFS.ops_table.file.node;\n                node.stream_ops = MEMFS.ops_table.file.stream;\n                node.usedBytes = 0;\n                node.contents = null;\n            } else if (FS.isLink(node.mode)) {\n                node.node_ops = MEMFS.ops_table.link.node;\n                node.stream_ops = MEMFS.ops_table.link.stream;\n            } else if (FS.isChrdev(node.mode)) {\n                node.node_ops = MEMFS.ops_table.chrdev.node;\n                node.stream_ops = MEMFS.ops_table.chrdev.stream;\n            }\n            node.atime = node.mtime = node.ctime = Date.now();\n            if (parent) {\n                parent.contents[name] = node;\n                parent.atime = parent.mtime = parent.ctime = node.atime;\n            }\n            return node;\n        },\n        getFileDataAsTypedArray(node) {\n            if (!node.contents) return new Uint8Array(0);\n            if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n            return new Uint8Array(node.contents);\n        },\n        expandFileStorage(node, newCapacity) {\n            var prevCapacity = node.contents ? node.contents.length : 0;\n            if (prevCapacity >= newCapacity) return;\n            var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n            newCapacity = Math.max(\n                newCapacity,\n                (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0,\n            );\n            if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newCapacity);\n            if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n        },\n        resizeFileStorage(node, newSize) {\n            if (node.usedBytes == newSize) return;\n            if (newSize == 0) {\n                node.contents = null;\n                node.usedBytes = 0;\n            } else {\n                var oldContents = node.contents;\n                node.contents = new Uint8Array(newSize);\n                if (oldContents) {\n                    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n                }\n                node.usedBytes = newSize;\n            }\n        },\n        node_ops: {\n            getattr(node) {\n                var attr = {};\n                attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n                attr.ino = node.id;\n                attr.mode = node.mode;\n                attr.nlink = 1;\n                attr.uid = 0;\n                attr.gid = 0;\n                attr.rdev = node.rdev;\n                if (FS.isDir(node.mode)) {\n                    attr.size = 4096;\n                } else if (FS.isFile(node.mode)) {\n                    attr.size = node.usedBytes;\n                } else if (FS.isLink(node.mode)) {\n                    attr.size = node.link.length;\n                } else {\n                    attr.size = 0;\n                }\n                attr.atime = new Date(node.atime);\n                attr.mtime = new Date(node.mtime);\n                attr.ctime = new Date(node.ctime);\n                attr.blksize = 4096;\n                attr.blocks = Math.ceil(attr.size / attr.blksize);\n                return attr;\n            },\n            setattr(node, attr) {\n                for (const key of [\"mode\", \"atime\", \"mtime\", \"ctime\"]) {\n                    if (attr[key] != null) {\n                        node[key] = attr[key];\n                    }\n                }\n                if (attr.size !== undefined) {\n                    MEMFS.resizeFileStorage(node, attr.size);\n                }\n            },\n            lookup(parent, name) {\n                throw new FS.ErrnoError(44);\n            },\n            mknod(parent, name, mode, dev) {\n                return MEMFS.createNode(parent, name, mode, dev);\n            },\n            rename(old_node, new_dir, new_name) {\n                var new_node;\n                try {\n                    new_node = FS.lookupNode(new_dir, new_name);\n                } catch (e) {}\n                if (new_node) {\n                    if (FS.isDir(old_node.mode)) {\n                        for (var i in new_node.contents) {\n                            throw new FS.ErrnoError(55);\n                        }\n                    }\n                    FS.hashRemoveNode(new_node);\n                }\n                delete old_node.parent.contents[old_node.name];\n                new_dir.contents[new_name] = old_node;\n                old_node.name = new_name;\n                new_dir.ctime =\n                    new_dir.mtime =\n                    old_node.parent.ctime =\n                    old_node.parent.mtime =\n                        Date.now();\n            },\n            unlink(parent, name) {\n                delete parent.contents[name];\n                parent.ctime = parent.mtime = Date.now();\n            },\n            rmdir(parent, name) {\n                var node = FS.lookupNode(parent, name);\n                for (var i in node.contents) {\n                    throw new FS.ErrnoError(55);\n                }\n                delete parent.contents[name];\n                parent.ctime = parent.mtime = Date.now();\n            },\n            readdir(node) {\n                return [\".\", \"..\", ...Object.keys(node.contents)];\n            },\n            symlink(parent, newname, oldpath) {\n                var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n                node.link = oldpath;\n                return node;\n            },\n            readlink(node) {\n                if (!FS.isLink(node.mode)) {\n                    throw new FS.ErrnoError(28);\n                }\n                return node.link;\n            },\n        },\n        stream_ops: {\n            read(stream, buffer, offset, length, position) {\n                var contents = stream.node.contents;\n                if (position >= stream.node.usedBytes) return 0;\n                var size = Math.min(stream.node.usedBytes - position, length);\n                assert(size >= 0);\n                if (size > 8 && contents.subarray) {\n                    buffer.set(contents.subarray(position, position + size), offset);\n                } else {\n                    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n                }\n                return size;\n            },\n            write(stream, buffer, offset, length, position, canOwn) {\n                assert(!(buffer instanceof ArrayBuffer));\n                if (buffer.buffer === HEAP8.buffer) {\n                    canOwn = false;\n                }\n                if (!length) return 0;\n                var node = stream.node;\n                node.mtime = node.ctime = Date.now();\n                if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                    if (canOwn) {\n                        assert(\n                            position === 0,\n                            \"canOwn must imply no weird position inside the file\",\n                        );\n                        node.contents = buffer.subarray(offset, offset + length);\n                        node.usedBytes = length;\n                        return length;\n                    } else if (node.usedBytes === 0 && position === 0) {\n                        node.contents = buffer.slice(offset, offset + length);\n                        node.usedBytes = length;\n                        return length;\n                    } else if (position + length <= node.usedBytes) {\n                        node.contents.set(buffer.subarray(offset, offset + length), position);\n                        return length;\n                    }\n                }\n                MEMFS.expandFileStorage(node, position + length);\n                if (node.contents.subarray && buffer.subarray) {\n                    node.contents.set(buffer.subarray(offset, offset + length), position);\n                } else {\n                    for (var i = 0; i < length; i++) {\n                        node.contents[position + i] = buffer[offset + i];\n                    }\n                }\n                node.usedBytes = Math.max(node.usedBytes, position + length);\n                return length;\n            },\n            llseek(stream, offset, whence) {\n                var position = offset;\n                if (whence === 1) {\n                    position += stream.position;\n                } else if (whence === 2) {\n                    if (FS.isFile(stream.node.mode)) {\n                        position += stream.node.usedBytes;\n                    }\n                }\n                if (position < 0) {\n                    throw new FS.ErrnoError(28);\n                }\n                return position;\n            },\n            mmap(stream, length, position, prot, flags) {\n                if (!FS.isFile(stream.node.mode)) {\n                    throw new FS.ErrnoError(43);\n                }\n                var ptr;\n                var allocated;\n                var contents = stream.node.contents;\n                if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n                    allocated = false;\n                    ptr = contents.byteOffset;\n                } else {\n                    allocated = true;\n                    ptr = mmapAlloc(length);\n                    if (!ptr) {\n                        throw new FS.ErrnoError(48);\n                    }\n                    if (contents) {\n                        if (position > 0 || position + length < contents.length) {\n                            if (contents.subarray) {\n                                contents = contents.subarray(position, position + length);\n                            } else {\n                                contents = Array.prototype.slice.call(\n                                    contents,\n                                    position,\n                                    position + length,\n                                );\n                            }\n                        }\n                        HEAP8.set(contents, ptr);\n                    }\n                }\n                return { ptr, allocated };\n            },\n            msync(stream, buffer, offset, length, mmapFlags) {\n                MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n                return 0;\n            },\n        },\n    };\n    var asyncLoad = async (url) => {\n        var arrayBuffer = await readAsync(url);\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        return new Uint8Array(arrayBuffer);\n    };\n    var FS_createDataFile = (...args) => FS.createDataFile(...args);\n    var getUniqueRunDependency = (id) => {\n        var orig = id;\n        while (1) {\n            if (!runDependencyTracking[id]) return id;\n            id = orig + Math.random();\n        }\n    };\n    var preloadPlugins = [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n        if (typeof Browser != \"undefined\") Browser.init();\n        var handled = false;\n        preloadPlugins.forEach((plugin) => {\n            if (handled) return;\n            if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, onerror);\n                handled = true;\n            }\n        });\n        return handled;\n    };\n    var FS_createPreloadedFile = (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n    ) => {\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency(`cp ${fullname}`);\n        function processData(byteArray) {\n            function finish(byteArray) {\n                preFinish?.();\n                if (!dontCreateFile) {\n                    FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                }\n                onload?.();\n                removeRunDependency(dep);\n            }\n            if (\n                FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n                    onerror?.();\n                    removeRunDependency(dep);\n                })\n            ) {\n                return;\n            }\n            finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == \"string\") {\n            asyncLoad(url).then(processData, onerror);\n        } else {\n            processData(url);\n        }\n    };\n    var FS_modeStringToFlags = (str) => {\n        var flagModes = {\n            r: 0,\n            \"r+\": 2,\n            w: 512 | 64 | 1,\n            \"w+\": 512 | 64 | 2,\n            a: 1024 | 64 | 1,\n            \"a+\": 1024 | 64 | 2,\n        };\n        var flags = flagModes[str];\n        if (typeof flags == \"undefined\") {\n            throw new Error(`Unknown file open mode: ${str}`);\n        }\n        return flags;\n    };\n    var FS_getMode = (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n    };\n    var strError = (errno) => UTF8ToString(_strerror(errno));\n    var ERRNO_CODES = {\n        EPERM: 63,\n        ENOENT: 44,\n        ESRCH: 71,\n        EINTR: 27,\n        EIO: 29,\n        ENXIO: 60,\n        E2BIG: 1,\n        ENOEXEC: 45,\n        EBADF: 8,\n        ECHILD: 12,\n        EAGAIN: 6,\n        EWOULDBLOCK: 6,\n        ENOMEM: 48,\n        EACCES: 2,\n        EFAULT: 21,\n        ENOTBLK: 105,\n        EBUSY: 10,\n        EEXIST: 20,\n        EXDEV: 75,\n        ENODEV: 43,\n        ENOTDIR: 54,\n        EISDIR: 31,\n        EINVAL: 28,\n        ENFILE: 41,\n        EMFILE: 33,\n        ENOTTY: 59,\n        ETXTBSY: 74,\n        EFBIG: 22,\n        ENOSPC: 51,\n        ESPIPE: 70,\n        EROFS: 69,\n        EMLINK: 34,\n        EPIPE: 64,\n        EDOM: 18,\n        ERANGE: 68,\n        ENOMSG: 49,\n        EIDRM: 24,\n        ECHRNG: 106,\n        EL2NSYNC: 156,\n        EL3HLT: 107,\n        EL3RST: 108,\n        ELNRNG: 109,\n        EUNATCH: 110,\n        ENOCSI: 111,\n        EL2HLT: 112,\n        EDEADLK: 16,\n        ENOLCK: 46,\n        EBADE: 113,\n        EBADR: 114,\n        EXFULL: 115,\n        ENOANO: 104,\n        EBADRQC: 103,\n        EBADSLT: 102,\n        EDEADLOCK: 16,\n        EBFONT: 101,\n        ENOSTR: 100,\n        ENODATA: 116,\n        ETIME: 117,\n        ENOSR: 118,\n        ENONET: 119,\n        ENOPKG: 120,\n        EREMOTE: 121,\n        ENOLINK: 47,\n        EADV: 122,\n        ESRMNT: 123,\n        ECOMM: 124,\n        EPROTO: 65,\n        EMULTIHOP: 36,\n        EDOTDOT: 125,\n        EBADMSG: 9,\n        ENOTUNIQ: 126,\n        EBADFD: 127,\n        EREMCHG: 128,\n        ELIBACC: 129,\n        ELIBBAD: 130,\n        ELIBSCN: 131,\n        ELIBMAX: 132,\n        ELIBEXEC: 133,\n        ENOSYS: 52,\n        ENOTEMPTY: 55,\n        ENAMETOOLONG: 37,\n        ELOOP: 32,\n        EOPNOTSUPP: 138,\n        EPFNOSUPPORT: 139,\n        ECONNRESET: 15,\n        ENOBUFS: 42,\n        EAFNOSUPPORT: 5,\n        EPROTOTYPE: 67,\n        ENOTSOCK: 57,\n        ENOPROTOOPT: 50,\n        ESHUTDOWN: 140,\n        ECONNREFUSED: 14,\n        EADDRINUSE: 3,\n        ECONNABORTED: 13,\n        ENETUNREACH: 40,\n        ENETDOWN: 38,\n        ETIMEDOUT: 73,\n        EHOSTDOWN: 142,\n        EHOSTUNREACH: 23,\n        EINPROGRESS: 26,\n        EALREADY: 7,\n        EDESTADDRREQ: 17,\n        EMSGSIZE: 35,\n        EPROTONOSUPPORT: 66,\n        ESOCKTNOSUPPORT: 137,\n        EADDRNOTAVAIL: 4,\n        ENETRESET: 39,\n        EISCONN: 30,\n        ENOTCONN: 53,\n        ETOOMANYREFS: 141,\n        EUSERS: 136,\n        EDQUOT: 19,\n        ESTALE: 72,\n        ENOTSUP: 138,\n        ENOMEDIUM: 148,\n        EILSEQ: 25,\n        EOVERFLOW: 61,\n        ECANCELED: 11,\n        ENOTRECOVERABLE: 56,\n        EOWNERDEAD: 62,\n        ESTRPIPE: 135,\n    };\n    var FS = {\n        root: null,\n        mounts: [],\n        devices: {},\n        streams: [],\n        nextInode: 1,\n        nameTable: null,\n        currentPath: \"/\",\n        initialized: false,\n        ignorePermissions: true,\n        filesystems: null,\n        syncFSRequests: 0,\n        readFiles: {},\n        ErrnoError: class extends Error {\n            name = \"ErrnoError\";\n            constructor(errno) {\n                super(runtimeInitialized ? strError(errno) : \"\");\n                this.errno = errno;\n                for (var key in ERRNO_CODES) {\n                    if (ERRNO_CODES[key] === errno) {\n                        this.code = key;\n                        break;\n                    }\n                }\n            }\n        },\n        FSStream: class {\n            shared = {};\n            get object() {\n                return this.node;\n            }\n            set object(val) {\n                this.node = val;\n            }\n            get isRead() {\n                return (this.flags & 2097155) !== 1;\n            }\n            get isWrite() {\n                return (this.flags & 2097155) !== 0;\n            }\n            get isAppend() {\n                return this.flags & 1024;\n            }\n            get flags() {\n                return this.shared.flags;\n            }\n            set flags(val) {\n                this.shared.flags = val;\n            }\n            get position() {\n                return this.shared.position;\n            }\n            set position(val) {\n                this.shared.position = val;\n            }\n        },\n        FSNode: class {\n            node_ops = {};\n            stream_ops = {};\n            readMode = 292 | 73;\n            writeMode = 146;\n            mounted = null;\n            constructor(parent, name, mode, rdev) {\n                if (!parent) {\n                    parent = this;\n                }\n                this.parent = parent;\n                this.mount = parent.mount;\n                this.id = FS.nextInode++;\n                this.name = name;\n                this.mode = mode;\n                this.rdev = rdev;\n                this.atime = this.mtime = this.ctime = Date.now();\n            }\n            get read() {\n                return (this.mode & this.readMode) === this.readMode;\n            }\n            set read(val) {\n                val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\n            }\n            get write() {\n                return (this.mode & this.writeMode) === this.writeMode;\n            }\n            set write(val) {\n                val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\n            }\n            get isFolder() {\n                return FS.isDir(this.mode);\n            }\n            get isDevice() {\n                return FS.isChrdev(this.mode);\n            }\n        },\n        lookupPath(path, opts = {}) {\n            if (!path) {\n                throw new FS.ErrnoError(44);\n            }\n            opts.follow_mount ??= true;\n            if (!PATH.isAbs(path)) {\n                path = FS.cwd() + \"/\" + path;\n            }\n            linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\n                var parts = path.split(\"/\").filter((p) => !!p);\n                var current = FS.root;\n                var current_path = \"/\";\n                for (var i = 0; i < parts.length; i++) {\n                    var islast = i === parts.length - 1;\n                    if (islast && opts.parent) {\n                        break;\n                    }\n                    if (parts[i] === \".\") {\n                        continue;\n                    }\n                    if (parts[i] === \"..\") {\n                        current_path = PATH.dirname(current_path);\n                        if (FS.isRoot(current)) {\n                            path = current_path + \"/\" + parts.slice(i + 1).join(\"/\");\n                            nlinks--;\n                            continue linkloop;\n                        } else {\n                            current = current.parent;\n                        }\n                        continue;\n                    }\n                    current_path = PATH.join2(current_path, parts[i]);\n                    try {\n                        current = FS.lookupNode(current, parts[i]);\n                    } catch (e) {\n                        if (e?.errno === 44 && islast && opts.noent_okay) {\n                            return { path: current_path };\n                        }\n                        throw e;\n                    }\n                    if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\n                        current = current.mounted.root;\n                    }\n                    if (FS.isLink(current.mode) && (!islast || opts.follow)) {\n                        if (!current.node_ops.readlink) {\n                            throw new FS.ErrnoError(52);\n                        }\n                        var link = current.node_ops.readlink(current);\n                        if (!PATH.isAbs(link)) {\n                            link = PATH.dirname(current_path) + \"/\" + link;\n                        }\n                        path = link + \"/\" + parts.slice(i + 1).join(\"/\");\n                        continue linkloop;\n                    }\n                }\n                return { path: current_path, node: current };\n            }\n            throw new FS.ErrnoError(32);\n        },\n        getPath(node) {\n            var path;\n            while (true) {\n                if (FS.isRoot(node)) {\n                    var mount = node.mount.mountpoint;\n                    if (!path) return mount;\n                    return mount[mount.length - 1] !== \"/\" ? `${mount}/${path}` : mount + path;\n                }\n                path = path ? `${node.name}/${path}` : node.name;\n                node = node.parent;\n            }\n        },\n        hashName(parentid, name) {\n            var hash = 0;\n            for (var i = 0; i < name.length; i++) {\n                hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n            }\n            return ((parentid + hash) >>> 0) % FS.nameTable.length;\n        },\n        hashAddNode(node) {\n            var hash = FS.hashName(node.parent.id, node.name);\n            node.name_next = FS.nameTable[hash];\n            FS.nameTable[hash] = node;\n        },\n        hashRemoveNode(node) {\n            var hash = FS.hashName(node.parent.id, node.name);\n            if (FS.nameTable[hash] === node) {\n                FS.nameTable[hash] = node.name_next;\n            } else {\n                var current = FS.nameTable[hash];\n                while (current) {\n                    if (current.name_next === node) {\n                        current.name_next = node.name_next;\n                        break;\n                    }\n                    current = current.name_next;\n                }\n            }\n        },\n        lookupNode(parent, name) {\n            var errCode = FS.mayLookup(parent);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            var hash = FS.hashName(parent.id, name);\n            for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n                var nodeName = node.name;\n                if (node.parent.id === parent.id && nodeName === name) {\n                    return node;\n                }\n            }\n            return FS.lookup(parent, name);\n        },\n        createNode(parent, name, mode, rdev) {\n            assert(typeof parent == \"object\");\n            var node = new FS.FSNode(parent, name, mode, rdev);\n            FS.hashAddNode(node);\n            return node;\n        },\n        destroyNode(node) {\n            FS.hashRemoveNode(node);\n        },\n        isRoot(node) {\n            return node === node.parent;\n        },\n        isMountpoint(node) {\n            return !!node.mounted;\n        },\n        isFile(mode) {\n            return (mode & 61440) === 32768;\n        },\n        isDir(mode) {\n            return (mode & 61440) === 16384;\n        },\n        isLink(mode) {\n            return (mode & 61440) === 40960;\n        },\n        isChrdev(mode) {\n            return (mode & 61440) === 8192;\n        },\n        isBlkdev(mode) {\n            return (mode & 61440) === 24576;\n        },\n        isFIFO(mode) {\n            return (mode & 61440) === 4096;\n        },\n        isSocket(mode) {\n            return (mode & 49152) === 49152;\n        },\n        flagsToPermissionString(flag) {\n            var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n            if (flag & 512) {\n                perms += \"w\";\n            }\n            return perms;\n        },\n        nodePermissions(node, perms) {\n            if (FS.ignorePermissions) {\n                return 0;\n            }\n            if (perms.includes(\"r\") && !(node.mode & 292)) {\n                return 2;\n            } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n                return 2;\n            } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n                return 2;\n            }\n            return 0;\n        },\n        mayLookup(dir) {\n            if (!FS.isDir(dir.mode)) return 54;\n            var errCode = FS.nodePermissions(dir, \"x\");\n            if (errCode) return errCode;\n            if (!dir.node_ops.lookup) return 2;\n            return 0;\n        },\n        mayCreate(dir, name) {\n            if (!FS.isDir(dir.mode)) {\n                return 54;\n            }\n            try {\n                var node = FS.lookupNode(dir, name);\n                return 20;\n            } catch (e) {}\n            return FS.nodePermissions(dir, \"wx\");\n        },\n        mayDelete(dir, name, isdir) {\n            var node;\n            try {\n                node = FS.lookupNode(dir, name);\n            } catch (e) {\n                return e.errno;\n            }\n            var errCode = FS.nodePermissions(dir, \"wx\");\n            if (errCode) {\n                return errCode;\n            }\n            if (isdir) {\n                if (!FS.isDir(node.mode)) {\n                    return 54;\n                }\n                if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                    return 10;\n                }\n            } else {\n                if (FS.isDir(node.mode)) {\n                    return 31;\n                }\n            }\n            return 0;\n        },\n        mayOpen(node, flags) {\n            if (!node) {\n                return 44;\n            }\n            if (FS.isLink(node.mode)) {\n                return 32;\n            } else if (FS.isDir(node.mode)) {\n                if (FS.flagsToPermissionString(flags) !== \"r\" || flags & (512 | 64)) {\n                    return 31;\n                }\n            }\n            return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        },\n        checkOpExists(op, err) {\n            if (!op) {\n                throw new FS.ErrnoError(err);\n            }\n            return op;\n        },\n        MAX_OPEN_FDS: 4096,\n        nextfd() {\n            for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n                if (!FS.streams[fd]) {\n                    return fd;\n                }\n            }\n            throw new FS.ErrnoError(33);\n        },\n        getStreamChecked(fd) {\n            var stream = FS.getStream(fd);\n            if (!stream) {\n                throw new FS.ErrnoError(8);\n            }\n            return stream;\n        },\n        getStream: (fd) => FS.streams[fd],\n        createStream(stream, fd = -1) {\n            assert(fd >= -1);\n            stream = Object.assign(new FS.FSStream(), stream);\n            if (fd == -1) {\n                fd = FS.nextfd();\n            }\n            stream.fd = fd;\n            FS.streams[fd] = stream;\n            return stream;\n        },\n        closeStream(fd) {\n            FS.streams[fd] = null;\n        },\n        dupStream(origStream, fd = -1) {\n            var stream = FS.createStream(origStream, fd);\n            stream.stream_ops?.dup?.(stream);\n            return stream;\n        },\n        doSetAttr(stream, node, attr) {\n            var setattr = stream?.stream_ops.setattr;\n            var arg = setattr ? stream : node;\n            setattr ??= node.node_ops.setattr;\n            FS.checkOpExists(setattr, 63);\n            setattr(arg, attr);\n        },\n        chrdev_stream_ops: {\n            open(stream) {\n                var device = FS.getDevice(stream.node.rdev);\n                stream.stream_ops = device.stream_ops;\n                stream.stream_ops.open?.(stream);\n            },\n            llseek() {\n                throw new FS.ErrnoError(70);\n            },\n        },\n        major: (dev) => dev >> 8,\n        minor: (dev) => dev & 255,\n        makedev: (ma, mi) => (ma << 8) | mi,\n        registerDevice(dev, ops) {\n            FS.devices[dev] = { stream_ops: ops };\n        },\n        getDevice: (dev) => FS.devices[dev],\n        getMounts(mount) {\n            var mounts = [];\n            var check = [mount];\n            while (check.length) {\n                var m = check.pop();\n                mounts.push(m);\n                check.push(...m.mounts);\n            }\n            return mounts;\n        },\n        syncfs(populate, callback) {\n            if (typeof populate == \"function\") {\n                callback = populate;\n                populate = false;\n            }\n            FS.syncFSRequests++;\n            if (FS.syncFSRequests > 1) {\n                err(\n                    `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n                );\n            }\n            var mounts = FS.getMounts(FS.root.mount);\n            var completed = 0;\n            function doCallback(errCode) {\n                assert(FS.syncFSRequests > 0);\n                FS.syncFSRequests--;\n                return callback(errCode);\n            }\n            function done(errCode) {\n                if (errCode) {\n                    if (!done.errored) {\n                        done.errored = true;\n                        return doCallback(errCode);\n                    }\n                    return;\n                }\n                if (++completed >= mounts.length) {\n                    doCallback(null);\n                }\n            }\n            mounts.forEach((mount) => {\n                if (!mount.type.syncfs) {\n                    return done(null);\n                }\n                mount.type.syncfs(mount, populate, done);\n            });\n        },\n        mount(type, opts, mountpoint) {\n            if (typeof type == \"string\") {\n                throw type;\n            }\n            var root = mountpoint === \"/\";\n            var pseudo = !mountpoint;\n            var node;\n            if (root && FS.root) {\n                throw new FS.ErrnoError(10);\n            } else if (!root && !pseudo) {\n                var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n                mountpoint = lookup.path;\n                node = lookup.node;\n                if (FS.isMountpoint(node)) {\n                    throw new FS.ErrnoError(10);\n                }\n                if (!FS.isDir(node.mode)) {\n                    throw new FS.ErrnoError(54);\n                }\n            }\n            var mount = { type, opts, mountpoint, mounts: [] };\n            var mountRoot = type.mount(mount);\n            mountRoot.mount = mount;\n            mount.root = mountRoot;\n            if (root) {\n                FS.root = mountRoot;\n            } else if (node) {\n                node.mounted = mount;\n                if (node.mount) {\n                    node.mount.mounts.push(mount);\n                }\n            }\n            return mountRoot;\n        },\n        unmount(mountpoint) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            if (!FS.isMountpoint(lookup.node)) {\n                throw new FS.ErrnoError(28);\n            }\n            var node = lookup.node;\n            var mount = node.mounted;\n            var mounts = FS.getMounts(mount);\n            Object.keys(FS.nameTable).forEach((hash) => {\n                var current = FS.nameTable[hash];\n                while (current) {\n                    var next = current.name_next;\n                    if (mounts.includes(current.mount)) {\n                        FS.destroyNode(current);\n                    }\n                    current = next;\n                }\n            });\n            node.mounted = null;\n            var idx = node.mount.mounts.indexOf(mount);\n            assert(idx !== -1);\n            node.mount.mounts.splice(idx, 1);\n        },\n        lookup(parent, name) {\n            return parent.node_ops.lookup(parent, name);\n        },\n        mknod(path, mode, dev) {\n            var lookup = FS.lookupPath(path, { parent: true });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n            if (!name) {\n                throw new FS.ErrnoError(28);\n            }\n            if (name === \".\" || name === \"..\") {\n                throw new FS.ErrnoError(20);\n            }\n            var errCode = FS.mayCreate(parent, name);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            if (!parent.node_ops.mknod) {\n                throw new FS.ErrnoError(63);\n            }\n            return parent.node_ops.mknod(parent, name, mode, dev);\n        },\n        statfs(path) {\n            return FS.statfsNode(FS.lookupPath(path, { follow: true }).node);\n        },\n        statfsStream(stream) {\n            return FS.statfsNode(stream.node);\n        },\n        statfsNode(node) {\n            var rtn = {\n                bsize: 4096,\n                frsize: 4096,\n                blocks: 1e6,\n                bfree: 5e5,\n                bavail: 5e5,\n                files: FS.nextInode,\n                ffree: FS.nextInode - 1,\n                fsid: 42,\n                flags: 2,\n                namelen: 255,\n            };\n            if (node.node_ops.statfs) {\n                Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\n            }\n            return rtn;\n        },\n        create(path, mode = 438) {\n            mode &= 4095;\n            mode |= 32768;\n            return FS.mknod(path, mode, 0);\n        },\n        mkdir(path, mode = 511) {\n            mode &= 511 | 512;\n            mode |= 16384;\n            return FS.mknod(path, mode, 0);\n        },\n        mkdirTree(path, mode) {\n            var dirs = path.split(\"/\");\n            var d = \"\";\n            for (var dir of dirs) {\n                if (!dir) continue;\n                if (d || PATH.isAbs(path)) d += \"/\";\n                d += dir;\n                try {\n                    FS.mkdir(d, mode);\n                } catch (e) {\n                    if (e.errno != 20) throw e;\n                }\n            }\n        },\n        mkdev(path, mode, dev) {\n            if (typeof dev == \"undefined\") {\n                dev = mode;\n                mode = 438;\n            }\n            mode |= 8192;\n            return FS.mknod(path, mode, dev);\n        },\n        symlink(oldpath, newpath) {\n            if (!PATH_FS.resolve(oldpath)) {\n                throw new FS.ErrnoError(44);\n            }\n            var lookup = FS.lookupPath(newpath, { parent: true });\n            var parent = lookup.node;\n            if (!parent) {\n                throw new FS.ErrnoError(44);\n            }\n            var newname = PATH.basename(newpath);\n            var errCode = FS.mayCreate(parent, newname);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            if (!parent.node_ops.symlink) {\n                throw new FS.ErrnoError(63);\n            }\n            return parent.node_ops.symlink(parent, newname, oldpath);\n        },\n        rename(old_path, new_path) {\n            var old_dirname = PATH.dirname(old_path);\n            var new_dirname = PATH.dirname(new_path);\n            var old_name = PATH.basename(old_path);\n            var new_name = PATH.basename(new_path);\n            var lookup, old_dir, new_dir;\n            lookup = FS.lookupPath(old_path, { parent: true });\n            old_dir = lookup.node;\n            lookup = FS.lookupPath(new_path, { parent: true });\n            new_dir = lookup.node;\n            if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n            if (old_dir.mount !== new_dir.mount) {\n                throw new FS.ErrnoError(75);\n            }\n            var old_node = FS.lookupNode(old_dir, old_name);\n            var relative = PATH_FS.relative(old_path, new_dirname);\n            if (relative.charAt(0) !== \".\") {\n                throw new FS.ErrnoError(28);\n            }\n            relative = PATH_FS.relative(new_path, old_dirname);\n            if (relative.charAt(0) !== \".\") {\n                throw new FS.ErrnoError(55);\n            }\n            var new_node;\n            try {\n                new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (old_node === new_node) {\n                return;\n            }\n            var isdir = FS.isDir(old_node.mode);\n            var errCode = FS.mayDelete(old_dir, old_name, isdir);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            errCode = new_node\n                ? FS.mayDelete(new_dir, new_name, isdir)\n                : FS.mayCreate(new_dir, new_name);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            if (!old_dir.node_ops.rename) {\n                throw new FS.ErrnoError(63);\n            }\n            if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n                throw new FS.ErrnoError(10);\n            }\n            if (new_dir !== old_dir) {\n                errCode = FS.nodePermissions(old_dir, \"w\");\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n            }\n            FS.hashRemoveNode(old_node);\n            try {\n                old_dir.node_ops.rename(old_node, new_dir, new_name);\n                old_node.parent = new_dir;\n            } catch (e) {\n                throw e;\n            } finally {\n                FS.hashAddNode(old_node);\n            }\n        },\n        rmdir(path) {\n            var lookup = FS.lookupPath(path, { parent: true });\n            var parent = lookup.node;\n            var name = PATH.basename(path);\n            var node = FS.lookupNode(parent, name);\n            var errCode = FS.mayDelete(parent, name, true);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            if (!parent.node_ops.rmdir) {\n                throw new FS.ErrnoError(63);\n            }\n            if (FS.isMountpoint(node)) {\n                throw new FS.ErrnoError(10);\n            }\n            parent.node_ops.rmdir(parent, name);\n            FS.destroyNode(node);\n        },\n        readdir(path) {\n            var lookup = FS.lookupPath(path, { follow: true });\n            var node = lookup.node;\n            var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\n            return readdir(node);\n        },\n        unlink(path) {\n            var lookup = FS.lookupPath(path, { parent: true });\n            var parent = lookup.node;\n            if (!parent) {\n                throw new FS.ErrnoError(44);\n            }\n            var name = PATH.basename(path);\n            var node = FS.lookupNode(parent, name);\n            var errCode = FS.mayDelete(parent, name, false);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            if (!parent.node_ops.unlink) {\n                throw new FS.ErrnoError(63);\n            }\n            if (FS.isMountpoint(node)) {\n                throw new FS.ErrnoError(10);\n            }\n            parent.node_ops.unlink(parent, name);\n            FS.destroyNode(node);\n        },\n        readlink(path) {\n            var lookup = FS.lookupPath(path);\n            var link = lookup.node;\n            if (!link) {\n                throw new FS.ErrnoError(44);\n            }\n            if (!link.node_ops.readlink) {\n                throw new FS.ErrnoError(28);\n            }\n            return link.node_ops.readlink(link);\n        },\n        stat(path, dontFollow) {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            var node = lookup.node;\n            var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\n            return getattr(node);\n        },\n        fstat(fd) {\n            var stream = FS.getStreamChecked(fd);\n            var node = stream.node;\n            var getattr = stream.stream_ops.getattr;\n            var arg = getattr ? stream : node;\n            getattr ??= node.node_ops.getattr;\n            FS.checkOpExists(getattr, 63);\n            return getattr(arg);\n        },\n        lstat(path) {\n            return FS.stat(path, true);\n        },\n        doChmod(stream, node, mode, dontFollow) {\n            FS.doSetAttr(stream, node, {\n                mode: (mode & 4095) | (node.mode & ~4095),\n                ctime: Date.now(),\n                dontFollow,\n            });\n        },\n        chmod(path, mode, dontFollow) {\n            var node;\n            if (typeof path == \"string\") {\n                var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                node = lookup.node;\n            } else {\n                node = path;\n            }\n            FS.doChmod(null, node, mode, dontFollow);\n        },\n        lchmod(path, mode) {\n            FS.chmod(path, mode, true);\n        },\n        fchmod(fd, mode) {\n            var stream = FS.getStreamChecked(fd);\n            FS.doChmod(stream, stream.node, mode, false);\n        },\n        doChown(stream, node, dontFollow) {\n            FS.doSetAttr(stream, node, { timestamp: Date.now(), dontFollow });\n        },\n        chown(path, uid, gid, dontFollow) {\n            var node;\n            if (typeof path == \"string\") {\n                var lookup = FS.lookupPath(path, { follow: !dontFollow });\n                node = lookup.node;\n            } else {\n                node = path;\n            }\n            FS.doChown(null, node, dontFollow);\n        },\n        lchown(path, uid, gid) {\n            FS.chown(path, uid, gid, true);\n        },\n        fchown(fd, uid, gid) {\n            var stream = FS.getStreamChecked(fd);\n            FS.doChown(stream, stream.node, false);\n        },\n        doTruncate(stream, node, len) {\n            if (FS.isDir(node.mode)) {\n                throw new FS.ErrnoError(31);\n            }\n            if (!FS.isFile(node.mode)) {\n                throw new FS.ErrnoError(28);\n            }\n            var errCode = FS.nodePermissions(node, \"w\");\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            FS.doSetAttr(stream, node, { size: len, timestamp: Date.now() });\n        },\n        truncate(path, len) {\n            if (len < 0) {\n                throw new FS.ErrnoError(28);\n            }\n            var node;\n            if (typeof path == \"string\") {\n                var lookup = FS.lookupPath(path, { follow: true });\n                node = lookup.node;\n            } else {\n                node = path;\n            }\n            FS.doTruncate(null, node, len);\n        },\n        ftruncate(fd, len) {\n            var stream = FS.getStreamChecked(fd);\n            if (len < 0 || (stream.flags & 2097155) === 0) {\n                throw new FS.ErrnoError(28);\n            }\n            FS.doTruncate(stream, stream.node, len);\n        },\n        utime(path, atime, mtime) {\n            var lookup = FS.lookupPath(path, { follow: true });\n            var node = lookup.node;\n            var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\n            setattr(node, { atime, mtime });\n        },\n        open(path, flags, mode = 438) {\n            if (path === \"\") {\n                throw new FS.ErrnoError(44);\n            }\n            flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\n            if (flags & 64) {\n                mode = (mode & 4095) | 32768;\n            } else {\n                mode = 0;\n            }\n            var node;\n            var isDirPath;\n            if (typeof path == \"object\") {\n                node = path;\n            } else {\n                isDirPath = path.endsWith(\"/\");\n                var lookup = FS.lookupPath(path, { follow: !(flags & 131072), noent_okay: true });\n                node = lookup.node;\n                path = lookup.path;\n            }\n            var created = false;\n            if (flags & 64) {\n                if (node) {\n                    if (flags & 128) {\n                        throw new FS.ErrnoError(20);\n                    }\n                } else if (isDirPath) {\n                    throw new FS.ErrnoError(31);\n                } else {\n                    node = FS.mknod(path, mode | 511, 0);\n                    created = true;\n                }\n            }\n            if (!node) {\n                throw new FS.ErrnoError(44);\n            }\n            if (FS.isChrdev(node.mode)) {\n                flags &= ~512;\n            }\n            if (flags & 65536 && !FS.isDir(node.mode)) {\n                throw new FS.ErrnoError(54);\n            }\n            if (!created) {\n                var errCode = FS.mayOpen(node, flags);\n                if (errCode) {\n                    throw new FS.ErrnoError(errCode);\n                }\n            }\n            if (flags & 512 && !created) {\n                FS.truncate(node, 0);\n            }\n            flags &= ~(128 | 512 | 131072);\n            var stream = FS.createStream({\n                node,\n                path: FS.getPath(node),\n                flags,\n                seekable: true,\n                position: 0,\n                stream_ops: node.stream_ops,\n                ungotten: [],\n                error: false,\n            });\n            if (stream.stream_ops.open) {\n                stream.stream_ops.open(stream);\n            }\n            if (created) {\n                FS.chmod(node, mode & 511);\n            }\n            if (Module[\"logReadFiles\"] && !(flags & 1)) {\n                if (!(path in FS.readFiles)) {\n                    FS.readFiles[path] = 1;\n                }\n            }\n            return stream;\n        },\n        close(stream) {\n            if (FS.isClosed(stream)) {\n                throw new FS.ErrnoError(8);\n            }\n            if (stream.getdents) stream.getdents = null;\n            try {\n                if (stream.stream_ops.close) {\n                    stream.stream_ops.close(stream);\n                }\n            } catch (e) {\n                throw e;\n            } finally {\n                FS.closeStream(stream.fd);\n            }\n            stream.fd = null;\n        },\n        isClosed(stream) {\n            return stream.fd === null;\n        },\n        llseek(stream, offset, whence) {\n            if (FS.isClosed(stream)) {\n                throw new FS.ErrnoError(8);\n            }\n            if (!stream.seekable || !stream.stream_ops.llseek) {\n                throw new FS.ErrnoError(70);\n            }\n            if (whence != 0 && whence != 1 && whence != 2) {\n                throw new FS.ErrnoError(28);\n            }\n            stream.position = stream.stream_ops.llseek(stream, offset, whence);\n            stream.ungotten = [];\n            return stream.position;\n        },\n        read(stream, buffer, offset, length, position) {\n            assert(offset >= 0);\n            if (length < 0 || position < 0) {\n                throw new FS.ErrnoError(28);\n            }\n            if (FS.isClosed(stream)) {\n                throw new FS.ErrnoError(8);\n            }\n            if ((stream.flags & 2097155) === 1) {\n                throw new FS.ErrnoError(8);\n            }\n            if (FS.isDir(stream.node.mode)) {\n                throw new FS.ErrnoError(31);\n            }\n            if (!stream.stream_ops.read) {\n                throw new FS.ErrnoError(28);\n            }\n            var seeking = typeof position != \"undefined\";\n            if (!seeking) {\n                position = stream.position;\n            } else if (!stream.seekable) {\n                throw new FS.ErrnoError(70);\n            }\n            var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n            if (!seeking) stream.position += bytesRead;\n            return bytesRead;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n            assert(offset >= 0);\n            if (length < 0 || position < 0) {\n                throw new FS.ErrnoError(28);\n            }\n            if (FS.isClosed(stream)) {\n                throw new FS.ErrnoError(8);\n            }\n            if ((stream.flags & 2097155) === 0) {\n                throw new FS.ErrnoError(8);\n            }\n            if (FS.isDir(stream.node.mode)) {\n                throw new FS.ErrnoError(31);\n            }\n            if (!stream.stream_ops.write) {\n                throw new FS.ErrnoError(28);\n            }\n            if (stream.seekable && stream.flags & 1024) {\n                FS.llseek(stream, 0, 2);\n            }\n            var seeking = typeof position != \"undefined\";\n            if (!seeking) {\n                position = stream.position;\n            } else if (!stream.seekable) {\n                throw new FS.ErrnoError(70);\n            }\n            var bytesWritten = stream.stream_ops.write(\n                stream,\n                buffer,\n                offset,\n                length,\n                position,\n                canOwn,\n            );\n            if (!seeking) stream.position += bytesWritten;\n            return bytesWritten;\n        },\n        mmap(stream, length, position, prot, flags) {\n            if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n                throw new FS.ErrnoError(2);\n            }\n            if ((stream.flags & 2097155) === 1) {\n                throw new FS.ErrnoError(2);\n            }\n            if (!stream.stream_ops.mmap) {\n                throw new FS.ErrnoError(43);\n            }\n            if (!length) {\n                throw new FS.ErrnoError(28);\n            }\n            return stream.stream_ops.mmap(stream, length, position, prot, flags);\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n            assert(offset >= 0);\n            if (!stream.stream_ops.msync) {\n                return 0;\n            }\n            return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n        },\n        ioctl(stream, cmd, arg) {\n            if (!stream.stream_ops.ioctl) {\n                throw new FS.ErrnoError(59);\n            }\n            return stream.stream_ops.ioctl(stream, cmd, arg);\n        },\n        readFile(path, opts = {}) {\n            opts.flags = opts.flags || 0;\n            opts.encoding = opts.encoding || \"binary\";\n            if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n                throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n            }\n            var stream = FS.open(path, opts.flags);\n            var stat = FS.stat(path);\n            var length = stat.size;\n            var buf = new Uint8Array(length);\n            FS.read(stream, buf, 0, length, 0);\n            if (opts.encoding === \"utf8\") {\n                buf = UTF8ArrayToString(buf);\n            }\n            FS.close(stream);\n            return buf;\n        },\n        writeFile(path, data, opts = {}) {\n            opts.flags = opts.flags || 577;\n            var stream = FS.open(path, opts.flags, opts.mode);\n            if (typeof data == \"string\") {\n                data = new Uint8Array(intArrayFromString(data, true));\n            }\n            if (ArrayBuffer.isView(data)) {\n                FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n            } else {\n                throw new Error(\"Unsupported data type\");\n            }\n            FS.close(stream);\n        },\n        cwd: () => FS.currentPath,\n        chdir(path) {\n            var lookup = FS.lookupPath(path, { follow: true });\n            if (lookup.node === null) {\n                throw new FS.ErrnoError(44);\n            }\n            if (!FS.isDir(lookup.node.mode)) {\n                throw new FS.ErrnoError(54);\n            }\n            var errCode = FS.nodePermissions(lookup.node, \"x\");\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n            FS.currentPath = lookup.path;\n        },\n        createDefaultDirectories() {\n            FS.mkdir(\"/tmp\");\n            FS.mkdir(\"/home\");\n            FS.mkdir(\"/home/web_user\");\n        },\n        createDefaultDevices() {\n            FS.mkdir(\"/dev\");\n            FS.registerDevice(FS.makedev(1, 3), {\n                read: () => 0,\n                write: (stream, buffer, offset, length, pos) => length,\n                llseek: () => 0,\n            });\n            FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n            TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n            TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n            FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n            FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n            var randomBuffer = new Uint8Array(1024),\n                randomLeft = 0;\n            var randomByte = () => {\n                if (randomLeft === 0) {\n                    randomFill(randomBuffer);\n                    randomLeft = randomBuffer.byteLength;\n                }\n                return randomBuffer[--randomLeft];\n            };\n            FS.createDevice(\"/dev\", \"random\", randomByte);\n            FS.createDevice(\"/dev\", \"urandom\", randomByte);\n            FS.mkdir(\"/dev/shm\");\n            FS.mkdir(\"/dev/shm/tmp\");\n        },\n        createSpecialDirectories() {\n            FS.mkdir(\"/proc\");\n            var proc_self = FS.mkdir(\"/proc/self\");\n            FS.mkdir(\"/proc/self/fd\");\n            FS.mount(\n                {\n                    mount() {\n                        var node = FS.createNode(proc_self, \"fd\", 16895, 73);\n                        node.stream_ops = { llseek: MEMFS.stream_ops.llseek };\n                        node.node_ops = {\n                            lookup(parent, name) {\n                                var fd = +name;\n                                var stream = FS.getStreamChecked(fd);\n                                var ret = {\n                                    parent: null,\n                                    mount: { mountpoint: \"fake\" },\n                                    node_ops: { readlink: () => stream.path },\n                                    id: fd + 1,\n                                };\n                                ret.parent = ret;\n                                return ret;\n                            },\n                            readdir() {\n                                return Array.from(FS.streams.entries())\n                                    .filter(([k, v]) => v)\n                                    .map(([k, v]) => k.toString());\n                            },\n                        };\n                        return node;\n                    },\n                },\n                {},\n                \"/proc/self/fd\",\n            );\n        },\n        createStandardStreams(input, output, error) {\n            if (input) {\n                FS.createDevice(\"/dev\", \"stdin\", input);\n            } else {\n                FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n            }\n            if (output) {\n                FS.createDevice(\"/dev\", \"stdout\", null, output);\n            } else {\n                FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n            }\n            if (error) {\n                FS.createDevice(\"/dev\", \"stderr\", null, error);\n            } else {\n                FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n            }\n            var stdin = FS.open(\"/dev/stdin\", 0);\n            var stdout = FS.open(\"/dev/stdout\", 1);\n            var stderr = FS.open(\"/dev/stderr\", 1);\n            assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);\n            assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);\n            assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);\n        },\n        staticInit() {\n            FS.nameTable = new Array(4096);\n            FS.mount(MEMFS, {}, \"/\");\n            FS.createDefaultDirectories();\n            FS.createDefaultDevices();\n            FS.createSpecialDirectories();\n            FS.filesystems = { MEMFS };\n        },\n        init(input, output, error) {\n            assert(\n                !FS.initialized,\n                \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\",\n            );\n            FS.initialized = true;\n            input ??= Module[\"stdin\"];\n            output ??= Module[\"stdout\"];\n            error ??= Module[\"stderr\"];\n            FS.createStandardStreams(input, output, error);\n        },\n        quit() {\n            FS.initialized = false;\n            _fflush(0);\n            for (var stream of FS.streams) {\n                if (stream) {\n                    FS.close(stream);\n                }\n            }\n        },\n        findObject(path, dontResolveLastLink) {\n            var ret = FS.analyzePath(path, dontResolveLastLink);\n            if (!ret.exists) {\n                return null;\n            }\n            return ret.object;\n        },\n        analyzePath(path, dontResolveLastLink) {\n            try {\n                var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n                path = lookup.path;\n            } catch (e) {}\n            var ret = {\n                isRoot: false,\n                exists: false,\n                error: 0,\n                name: null,\n                path: null,\n                object: null,\n                parentExists: false,\n                parentPath: null,\n                parentObject: null,\n            };\n            try {\n                var lookup = FS.lookupPath(path, { parent: true });\n                ret.parentExists = true;\n                ret.parentPath = lookup.path;\n                ret.parentObject = lookup.node;\n                ret.name = PATH.basename(path);\n                lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n                ret.exists = true;\n                ret.path = lookup.path;\n                ret.object = lookup.node;\n                ret.name = lookup.node.name;\n                ret.isRoot = lookup.path === \"/\";\n            } catch (e) {\n                ret.error = e.errno;\n            }\n            return ret;\n        },\n        createPath(parent, path, canRead, canWrite) {\n            parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n            var parts = path.split(\"/\").reverse();\n            while (parts.length) {\n                var part = parts.pop();\n                if (!part) continue;\n                var current = PATH.join2(parent, part);\n                try {\n                    FS.mkdir(current);\n                } catch (e) {\n                    if (e.errno != 20) throw e;\n                }\n                parent = current;\n            }\n            return current;\n        },\n        createFile(parent, name, properties, canRead, canWrite) {\n            var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n            var mode = FS_getMode(canRead, canWrite);\n            return FS.create(path, mode);\n        },\n        createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n            var path = name;\n            if (parent) {\n                parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n                path = name ? PATH.join2(parent, name) : parent;\n            }\n            var mode = FS_getMode(canRead, canWrite);\n            var node = FS.create(path, mode);\n            if (data) {\n                if (typeof data == \"string\") {\n                    var arr = new Array(data.length);\n                    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n                    data = arr;\n                }\n                FS.chmod(node, mode | 146);\n                var stream = FS.open(node, 577);\n                FS.write(stream, data, 0, data.length, 0, canOwn);\n                FS.close(stream);\n                FS.chmod(node, mode);\n            }\n        },\n        createDevice(parent, name, input, output) {\n            var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n            var mode = FS_getMode(!!input, !!output);\n            FS.createDevice.major ??= 64;\n            var dev = FS.makedev(FS.createDevice.major++, 0);\n            FS.registerDevice(dev, {\n                open(stream) {\n                    stream.seekable = false;\n                },\n                close(stream) {\n                    if (output?.buffer?.length) {\n                        output(10);\n                    }\n                },\n                read(stream, buffer, offset, length, pos) {\n                    var bytesRead = 0;\n                    for (var i = 0; i < length; i++) {\n                        var result;\n                        try {\n                            result = input();\n                        } catch (e) {\n                            throw new FS.ErrnoError(29);\n                        }\n                        if (result === undefined && bytesRead === 0) {\n                            throw new FS.ErrnoError(6);\n                        }\n                        if (result === null || result === undefined) break;\n                        bytesRead++;\n                        buffer[offset + i] = result;\n                    }\n                    if (bytesRead) {\n                        stream.node.atime = Date.now();\n                    }\n                    return bytesRead;\n                },\n                write(stream, buffer, offset, length, pos) {\n                    for (var i = 0; i < length; i++) {\n                        try {\n                            output(buffer[offset + i]);\n                        } catch (e) {\n                            throw new FS.ErrnoError(29);\n                        }\n                    }\n                    if (length) {\n                        stream.node.mtime = stream.node.ctime = Date.now();\n                    }\n                    return i;\n                },\n            });\n            return FS.mkdev(path, mode, dev);\n        },\n        forceLoadFile(obj) {\n            if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n            if (typeof XMLHttpRequest != \"undefined\") {\n                throw new Error(\n                    \"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\",\n                );\n            } else {\n                try {\n                    obj.contents = readBinary(obj.url);\n                    obj.usedBytes = obj.contents.length;\n                } catch (e) {\n                    throw new FS.ErrnoError(29);\n                }\n            }\n        },\n        createLazyFile(parent, name, url, canRead, canWrite) {\n            class LazyUint8Array {\n                lengthKnown = false;\n                chunks = [];\n                get(idx) {\n                    if (idx > this.length - 1 || idx < 0) {\n                        return undefined;\n                    }\n                    var chunkOffset = idx % this.chunkSize;\n                    var chunkNum = (idx / this.chunkSize) | 0;\n                    return this.getter(chunkNum)[chunkOffset];\n                }\n                setDataGetter(getter) {\n                    this.getter = getter;\n                }\n                cacheLength() {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open(\"HEAD\", url, false);\n                    xhr.send(null);\n                    if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                        throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                    var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n                    var header;\n                    var hasByteServing =\n                        (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n                    var usesGzip =\n                        (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n                    var chunkSize = 1024 * 1024;\n                    if (!hasByteServing) chunkSize = datalength;\n                    var doXHR = (from, to) => {\n                        if (from > to)\n                            throw new Error(\n                                \"invalid range (\" + from + \", \" + to + \") or no bytes requested!\",\n                            );\n                        if (to > datalength - 1)\n                            throw new Error(\n                                \"only \" + datalength + \" bytes available! programmer error!\",\n                            );\n                        var xhr = new XMLHttpRequest();\n                        xhr.open(\"GET\", url, false);\n                        if (datalength !== chunkSize)\n                            xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                        xhr.responseType = \"arraybuffer\";\n                        if (xhr.overrideMimeType) {\n                            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n                        }\n                        xhr.send(null);\n                        if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                            throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                        if (xhr.response !== undefined) {\n                            return new Uint8Array(xhr.response || []);\n                        }\n                        return intArrayFromString(xhr.responseText || \"\", true);\n                    };\n                    var lazyArray = this;\n                    lazyArray.setDataGetter((chunkNum) => {\n                        var start = chunkNum * chunkSize;\n                        var end = (chunkNum + 1) * chunkSize - 1;\n                        end = Math.min(end, datalength - 1);\n                        if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\n                            lazyArray.chunks[chunkNum] = doXHR(start, end);\n                        }\n                        if (typeof lazyArray.chunks[chunkNum] == \"undefined\")\n                            throw new Error(\"doXHR failed!\");\n                        return lazyArray.chunks[chunkNum];\n                    });\n                    if (usesGzip || !datalength) {\n                        chunkSize = datalength = 1;\n                        datalength = this.getter(0).length;\n                        chunkSize = datalength;\n                        out(\n                            \"LazyFiles on gzip forces download of the whole file when length is accessed\",\n                        );\n                    }\n                    this._length = datalength;\n                    this._chunkSize = chunkSize;\n                    this.lengthKnown = true;\n                }\n                get length() {\n                    if (!this.lengthKnown) {\n                        this.cacheLength();\n                    }\n                    return this._length;\n                }\n                get chunkSize() {\n                    if (!this.lengthKnown) {\n                        this.cacheLength();\n                    }\n                    return this._chunkSize;\n                }\n            }\n            if (typeof XMLHttpRequest != \"undefined\") {\n                if (!ENVIRONMENT_IS_WORKER)\n                    throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n                var lazyArray = new LazyUint8Array();\n                var properties = { isDevice: false, contents: lazyArray };\n            } else {\n                var properties = { isDevice: false, url };\n            }\n            var node = FS.createFile(parent, name, properties, canRead, canWrite);\n            if (properties.contents) {\n                node.contents = properties.contents;\n            } else if (properties.url) {\n                node.contents = null;\n                node.url = properties.url;\n            }\n            Object.defineProperties(node, {\n                usedBytes: {\n                    get: function () {\n                        return this.contents.length;\n                    },\n                },\n            });\n            var stream_ops = {};\n            var keys = Object.keys(node.stream_ops);\n            keys.forEach((key) => {\n                var fn = node.stream_ops[key];\n                stream_ops[key] = (...args) => {\n                    FS.forceLoadFile(node);\n                    return fn(...args);\n                };\n            });\n            function writeChunks(stream, buffer, offset, length, position) {\n                var contents = stream.node.contents;\n                if (position >= contents.length) return 0;\n                var size = Math.min(contents.length - position, length);\n                assert(size >= 0);\n                if (contents.slice) {\n                    for (var i = 0; i < size; i++) {\n                        buffer[offset + i] = contents[position + i];\n                    }\n                } else {\n                    for (var i = 0; i < size; i++) {\n                        buffer[offset + i] = contents.get(position + i);\n                    }\n                }\n                return size;\n            }\n            stream_ops.read = (stream, buffer, offset, length, position) => {\n                FS.forceLoadFile(node);\n                return writeChunks(stream, buffer, offset, length, position);\n            };\n            stream_ops.mmap = (stream, length, position, prot, flags) => {\n                FS.forceLoadFile(node);\n                var ptr = mmapAlloc(length);\n                if (!ptr) {\n                    throw new FS.ErrnoError(48);\n                }\n                writeChunks(stream, HEAP8, ptr, length, position);\n                return { ptr, allocated: true };\n            };\n            node.stream_ops = stream_ops;\n            return node;\n        },\n        absolutePath() {\n            abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\");\n        },\n        createFolder() {\n            abort(\"FS.createFolder has been removed; use FS.mkdir instead\");\n        },\n        createLink() {\n            abort(\"FS.createLink has been removed; use FS.symlink instead\");\n        },\n        joinPath() {\n            abort(\"FS.joinPath has been removed; use PATH.join instead\");\n        },\n        mmapAlloc() {\n            abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\");\n        },\n        standardizePath() {\n            abort(\"FS.standardizePath has been removed; use PATH.normalize instead\");\n        },\n    };\n    var SYSCALLS = {\n        DEFAULT_POLLMASK: 5,\n        calculateAt(dirfd, path, allowEmpty) {\n            if (PATH.isAbs(path)) {\n                return path;\n            }\n            var dir;\n            if (dirfd === -100) {\n                dir = FS.cwd();\n            } else {\n                var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n                dir = dirstream.path;\n            }\n            if (path.length == 0) {\n                if (!allowEmpty) {\n                    throw new FS.ErrnoError(44);\n                }\n                return dir;\n            }\n            return dir + \"/\" + path;\n        },\n        writeStat(buf, stat) {\n            HEAP32[buf >> 2] = stat.dev;\n            HEAP32[(buf + 4) >> 2] = stat.mode;\n            HEAPU32[(buf + 8) >> 2] = stat.nlink;\n            HEAP32[(buf + 12) >> 2] = stat.uid;\n            HEAP32[(buf + 16) >> 2] = stat.gid;\n            HEAP32[(buf + 20) >> 2] = stat.rdev;\n            HEAP64[(buf + 24) >> 3] = BigInt(stat.size);\n            HEAP32[(buf + 32) >> 2] = 4096;\n            HEAP32[(buf + 36) >> 2] = stat.blocks;\n            var atime = stat.atime.getTime();\n            var mtime = stat.mtime.getTime();\n            var ctime = stat.ctime.getTime();\n            HEAP64[(buf + 40) >> 3] = BigInt(Math.floor(atime / 1e3));\n            HEAPU32[(buf + 48) >> 2] = (atime % 1e3) * 1e3 * 1e3;\n            HEAP64[(buf + 56) >> 3] = BigInt(Math.floor(mtime / 1e3));\n            HEAPU32[(buf + 64) >> 2] = (mtime % 1e3) * 1e3 * 1e3;\n            HEAP64[(buf + 72) >> 3] = BigInt(Math.floor(ctime / 1e3));\n            HEAPU32[(buf + 80) >> 2] = (ctime % 1e3) * 1e3 * 1e3;\n            HEAP64[(buf + 88) >> 3] = BigInt(stat.ino);\n            return 0;\n        },\n        writeStatFs(buf, stats) {\n            HEAP32[(buf + 4) >> 2] = stats.bsize;\n            HEAP32[(buf + 40) >> 2] = stats.bsize;\n            HEAP32[(buf + 8) >> 2] = stats.blocks;\n            HEAP32[(buf + 12) >> 2] = stats.bfree;\n            HEAP32[(buf + 16) >> 2] = stats.bavail;\n            HEAP32[(buf + 20) >> 2] = stats.files;\n            HEAP32[(buf + 24) >> 2] = stats.ffree;\n            HEAP32[(buf + 28) >> 2] = stats.fsid;\n            HEAP32[(buf + 44) >> 2] = stats.flags;\n            HEAP32[(buf + 36) >> 2] = stats.namelen;\n        },\n        doMsync(addr, stream, len, flags, offset) {\n            if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n            }\n            if (flags & 2) {\n                return 0;\n            }\n            var buffer = HEAPU8.slice(addr, addr + len);\n            FS.msync(stream, buffer, offset, len, flags);\n        },\n        getStreamFromFD(fd) {\n            var stream = FS.getStreamChecked(fd);\n            return stream;\n        },\n        varargs: undefined,\n        getStr(ptr) {\n            var ret = UTF8ToString(ptr);\n            return ret;\n        },\n    };\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n                case 0: {\n                    var arg = syscallGetVarargI();\n                    if (arg < 0) {\n                        return -28;\n                    }\n                    while (FS.streams[arg]) {\n                        arg++;\n                    }\n                    var newStream;\n                    newStream = FS.dupStream(stream, arg);\n                    return newStream.fd;\n                }\n                case 1:\n                case 2:\n                    return 0;\n                case 3:\n                    return stream.flags;\n                case 4: {\n                    var arg = syscallGetVarargI();\n                    stream.flags |= arg;\n                    return 0;\n                }\n                case 12: {\n                    var arg = syscallGetVarargP();\n                    var offset = 0;\n                    HEAP16[(arg + offset) >> 1] = 2;\n                    return 0;\n                }\n                case 13:\n                case 14:\n                    return 0;\n            }\n            return -28;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return -e.errno;\n        }\n    }\n    function ___syscall_fstat64(fd, buf) {\n        try {\n            return SYSCALLS.writeStat(buf, FS.fstat(fd));\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return -e.errno;\n        }\n    }\n    function ___syscall_ioctl(fd, op, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n                case 21509: {\n                    if (!stream.tty) return -59;\n                    return 0;\n                }\n                case 21505: {\n                    if (!stream.tty) return -59;\n                    if (stream.tty.ops.ioctl_tcgets) {\n                        var termios = stream.tty.ops.ioctl_tcgets(stream);\n                        var argp = syscallGetVarargP();\n                        HEAP32[argp >> 2] = termios.c_iflag || 0;\n                        HEAP32[(argp + 4) >> 2] = termios.c_oflag || 0;\n                        HEAP32[(argp + 8) >> 2] = termios.c_cflag || 0;\n                        HEAP32[(argp + 12) >> 2] = termios.c_lflag || 0;\n                        for (var i = 0; i < 32; i++) {\n                            HEAP8[argp + i + 17] = termios.c_cc[i] || 0;\n                        }\n                        return 0;\n                    }\n                    return 0;\n                }\n                case 21510:\n                case 21511:\n                case 21512: {\n                    if (!stream.tty) return -59;\n                    return 0;\n                }\n                case 21506:\n                case 21507:\n                case 21508: {\n                    if (!stream.tty) return -59;\n                    if (stream.tty.ops.ioctl_tcsets) {\n                        var argp = syscallGetVarargP();\n                        var c_iflag = HEAP32[argp >> 2];\n                        var c_oflag = HEAP32[(argp + 4) >> 2];\n                        var c_cflag = HEAP32[(argp + 8) >> 2];\n                        var c_lflag = HEAP32[(argp + 12) >> 2];\n                        var c_cc = [];\n                        for (var i = 0; i < 32; i++) {\n                            c_cc.push(HEAP8[argp + i + 17]);\n                        }\n                        return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\n                            c_iflag,\n                            c_oflag,\n                            c_cflag,\n                            c_lflag,\n                            c_cc,\n                        });\n                    }\n                    return 0;\n                }\n                case 21519: {\n                    if (!stream.tty) return -59;\n                    var argp = syscallGetVarargP();\n                    HEAP32[argp >> 2] = 0;\n                    return 0;\n                }\n                case 21520: {\n                    if (!stream.tty) return -59;\n                    return -28;\n                }\n                case 21537:\n                case 21531: {\n                    var argp = syscallGetVarargP();\n                    return FS.ioctl(stream, op, argp);\n                }\n                case 21523: {\n                    if (!stream.tty) return -59;\n                    if (stream.tty.ops.ioctl_tiocgwinsz) {\n                        var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n                        var argp = syscallGetVarargP();\n                        HEAP16[argp >> 1] = winsize[0];\n                        HEAP16[(argp + 2) >> 1] = winsize[1];\n                    }\n                    return 0;\n                }\n                case 21524: {\n                    if (!stream.tty) return -59;\n                    return 0;\n                }\n                case 21515: {\n                    if (!stream.tty) return -59;\n                    return 0;\n                }\n                default:\n                    return -28;\n            }\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return -e.errno;\n        }\n    }\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            path = SYSCALLS.getStr(path);\n            path = SYSCALLS.calculateAt(dirfd, path);\n            var mode = varargs ? syscallGetVarargI() : 0;\n            return FS.open(path, flags, mode).fd;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return -e.errno;\n        }\n    }\n    var __abort_js = () => abort(\"native code called abort()\");\n    var AsciiToString = (ptr) => {\n        var str = \"\";\n        while (1) {\n            var ch = HEAPU8[ptr++];\n            if (!ch) return str;\n            str += String.fromCharCode(ch);\n        }\n    };\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var BindingError = class BindingError extends Error {\n        constructor(message) {\n            super(message);\n            this.name = \"BindingError\";\n        }\n    };\n    var throwBindingError = (message) => {\n        throw new BindingError(message);\n    };\n    function sharedRegisterType(rawType, registeredInstance, options = {}) {\n        var name = registeredInstance.name;\n        if (!rawType) {\n            throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n        }\n        if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n                return;\n            } else {\n                throwBindingError(`Cannot register type '${name}' twice`);\n            }\n        }\n        registeredTypes[rawType] = registeredInstance;\n        delete typeDependencies[rawType];\n        if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach((cb) => cb());\n        }\n    }\n    function registerType(rawType, registeredInstance, options = {}) {\n        return sharedRegisterType(rawType, registeredInstance, options);\n    }\n    var integerReadValueFromPointer = (name, width, signed) => {\n        switch (width) {\n            case 1:\n                return signed ? (pointer) => HEAP8[pointer] : (pointer) => HEAPU8[pointer];\n            case 2:\n                return signed\n                    ? (pointer) => HEAP16[pointer >> 1]\n                    : (pointer) => HEAPU16[pointer >> 1];\n            case 4:\n                return signed\n                    ? (pointer) => HEAP32[pointer >> 2]\n                    : (pointer) => HEAPU32[pointer >> 2];\n            case 8:\n                return signed\n                    ? (pointer) => HEAP64[pointer >> 3]\n                    : (pointer) => HEAPU64[pointer >> 3];\n            default:\n                throw new TypeError(`invalid integer width (${width}): ${name}`);\n        }\n    };\n    var embindRepr = (v) => {\n        if (v === null) {\n            return \"null\";\n        }\n        var t = typeof v;\n        if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n        } else {\n            return \"\" + v;\n        }\n    };\n    var assertIntegerRange = (typeName, value, minRange, maxRange) => {\n        if (value < minRange || value > maxRange) {\n            throw new TypeError(\n                `Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${typeName}\", which is outside the valid range [${minRange}, ${maxRange}]!`,\n            );\n        }\n    };\n    var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {\n        name = AsciiToString(name);\n        const isUnsignedType = minRange === 0n;\n        let fromWireType = (value) => value;\n        if (isUnsignedType) {\n            const bitSize = size * 8;\n            fromWireType = (value) => BigInt.asUintN(bitSize, value);\n            maxRange = fromWireType(maxRange);\n        }\n        registerType(primitiveType, {\n            name,\n            fromWireType,\n            toWireType: (destructors, value) => {\n                if (typeof value == \"number\") {\n                    value = BigInt(value);\n                } else if (typeof value != \"bigint\") {\n                    throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${this.name}`);\n                }\n                assertIntegerRange(name, value, minRange, maxRange);\n                return value;\n            },\n            readValueFromPointer: integerReadValueFromPointer(name, size, !isUnsignedType),\n            destructorFunction: null,\n        });\n    };\n    var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n        name = AsciiToString(name);\n        registerType(rawType, {\n            name,\n            fromWireType: function (wt) {\n                return !!wt;\n            },\n            toWireType: function (destructors, o) {\n                return o ? trueValue : falseValue;\n            },\n            readValueFromPointer: function (pointer) {\n                return this.fromWireType(HEAPU8[pointer]);\n            },\n            destructorFunction: null,\n        });\n    };\n    var shallowCopyInternalPointer = (o) => ({\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType,\n    });\n    var throwInstanceAlreadyDeleted = (obj) => {\n        function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n        }\n        throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n    };\n    var finalizationRegistry = false;\n    var detachFinalizer = (handle) => {};\n    var runDestructor = ($$) => {\n        if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n        } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n        }\n    };\n    var releaseClassHandle = ($$) => {\n        $$.count.value -= 1;\n        var toDelete = 0 === $$.count.value;\n        if (toDelete) {\n            runDestructor($$);\n        }\n    };\n    var downcastPointer = (ptr, ptrClass, desiredClass) => {\n        if (ptrClass === desiredClass) {\n            return ptr;\n        }\n        if (undefined === desiredClass.baseClass) {\n            return null;\n        }\n        var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n        if (rv === null) {\n            return null;\n        }\n        return desiredClass.downcast(rv);\n    };\n    var registeredPointers = {};\n    var registeredInstances = {};\n    var getBasestPointer = (class_, ptr) => {\n        if (ptr === undefined) {\n            throwBindingError(\"ptr should not be undefined\");\n        }\n        while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n        }\n        return ptr;\n    };\n    var getInheritedInstance = (class_, ptr) => {\n        ptr = getBasestPointer(class_, ptr);\n        return registeredInstances[ptr];\n    };\n    var InternalError = class InternalError extends Error {\n        constructor(message) {\n            super(message);\n            this.name = \"InternalError\";\n        }\n    };\n    var throwInternalError = (message) => {\n        throw new InternalError(message);\n    };\n    var makeClassHandle = (prototype, record) => {\n        if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n        }\n        var hasSmartPtrType = !!record.smartPtrType;\n        var hasSmartPtr = !!record.smartPtr;\n        if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n        }\n        record.count = { value: 1 };\n        return attachFinalizer(Object.create(prototype, { $$: { value: record, writable: true } }));\n    };\n    function RegisteredPointer_fromWireType(ptr) {\n        var rawPointer = this.getPointee(ptr);\n        if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n        }\n        var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n        if (undefined !== registeredInstance) {\n            if (0 === registeredInstance.$$.count.value) {\n                registeredInstance.$$.ptr = rawPointer;\n                registeredInstance.$$.smartPtr = ptr;\n                return registeredInstance[\"clone\"]();\n            } else {\n                var rv = registeredInstance[\"clone\"]();\n                this.destructor(ptr);\n                return rv;\n            }\n        }\n        function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n                return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this.pointeeType,\n                    ptr: rawPointer,\n                    smartPtrType: this,\n                    smartPtr: ptr,\n                });\n            } else {\n                return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this,\n                    ptr,\n                });\n            }\n        }\n        var actualType = this.registeredClass.getActualType(rawPointer);\n        var registeredPointerRecord = registeredPointers[actualType];\n        if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n        }\n        var toType;\n        if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n        } else {\n            toType = registeredPointerRecord.pointerType;\n        }\n        var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n        if (dp === null) {\n            return makeDefaultHandle.call(this);\n        }\n        if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, {\n                ptrType: toType,\n                ptr: dp,\n                smartPtrType: this,\n                smartPtr: ptr,\n            });\n        } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, {\n                ptrType: toType,\n                ptr: dp,\n            });\n        }\n    }\n    var attachFinalizer = (handle) => {\n        if (\"undefined\" === typeof FinalizationRegistry) {\n            attachFinalizer = (handle) => handle;\n            return handle;\n        }\n        finalizationRegistry = new FinalizationRegistry((info) => {\n            console.warn(info.leakWarning);\n            releaseClassHandle(info.$$);\n        });\n        attachFinalizer = (handle) => {\n            var $$ = handle.$$;\n            var hasSmartPtr = !!$$.smartPtr;\n            if (hasSmartPtr) {\n                var info = { $$ };\n                var cls = $$.ptrType.registeredClass;\n                var err = new Error(\n                    `Embind found a leaked C++ instance ${cls.name} <${ptrToString($$.ptr)}>.\\n` +\n                        \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" +\n                        \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" +\n                        \"Originally allocated\",\n                );\n                if (\"captureStackTrace\" in Error) {\n                    Error.captureStackTrace(err, RegisteredPointer_fromWireType);\n                }\n                info.leakWarning = err.stack.replace(/^Error: /, \"\");\n                finalizationRegistry.register(handle, info, handle);\n            }\n            return handle;\n        };\n        detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n        return attachFinalizer(handle);\n    };\n    var deletionQueue = [];\n    var flushPendingDeletes = () => {\n        while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n        }\n    };\n    var delayFunction;\n    var init_ClassHandle = () => {\n        let proto = ClassHandle.prototype;\n        Object.assign(proto, {\n            isAliasOf(other) {\n                if (!(this instanceof ClassHandle)) {\n                    return false;\n                }\n                if (!(other instanceof ClassHandle)) {\n                    return false;\n                }\n                var leftClass = this.$$.ptrType.registeredClass;\n                var left = this.$$.ptr;\n                other.$$ = other.$$;\n                var rightClass = other.$$.ptrType.registeredClass;\n                var right = other.$$.ptr;\n                while (leftClass.baseClass) {\n                    left = leftClass.upcast(left);\n                    leftClass = leftClass.baseClass;\n                }\n                while (rightClass.baseClass) {\n                    right = rightClass.upcast(right);\n                    rightClass = rightClass.baseClass;\n                }\n                return leftClass === rightClass && left === right;\n            },\n            clone() {\n                if (!this.$$.ptr) {\n                    throwInstanceAlreadyDeleted(this);\n                }\n                if (this.$$.preservePointerOnDelete) {\n                    this.$$.count.value += 1;\n                    return this;\n                } else {\n                    var clone = attachFinalizer(\n                        Object.create(Object.getPrototypeOf(this), {\n                            $$: { value: shallowCopyInternalPointer(this.$$) },\n                        }),\n                    );\n                    clone.$$.count.value += 1;\n                    clone.$$.deleteScheduled = false;\n                    return clone;\n                }\n            },\n            delete() {\n                if (!this.$$.ptr) {\n                    throwInstanceAlreadyDeleted(this);\n                }\n                if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n                    throwBindingError(\"Object already scheduled for deletion\");\n                }\n                detachFinalizer(this);\n                releaseClassHandle(this.$$);\n                if (!this.$$.preservePointerOnDelete) {\n                    this.$$.smartPtr = undefined;\n                    this.$$.ptr = undefined;\n                }\n            },\n            isDeleted() {\n                return !this.$$.ptr;\n            },\n            deleteLater() {\n                if (!this.$$.ptr) {\n                    throwInstanceAlreadyDeleted(this);\n                }\n                if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n                    throwBindingError(\"Object already scheduled for deletion\");\n                }\n                deletionQueue.push(this);\n                if (deletionQueue.length === 1 && delayFunction) {\n                    delayFunction(flushPendingDeletes);\n                }\n                this.$$.deleteScheduled = true;\n                return this;\n            },\n        });\n        const symbolDispose = Symbol.dispose;\n        if (symbolDispose) {\n            proto[symbolDispose] = proto[\"delete\"];\n        }\n    };\n    function ClassHandle() {}\n    var createNamedFunction = (name, func) => Object.defineProperty(func, \"name\", { value: name });\n    var ensureOverloadTable = (proto, methodName, humanName) => {\n        if (undefined === proto[methodName].overloadTable) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function (...args) {\n                if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\n                    throwBindingError(\n                        `Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`,\n                    );\n                }\n                return proto[methodName].overloadTable[args.length].apply(this, args);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n        }\n    };\n    var exposePublicSymbol = (name, value, numArguments) => {\n        if (Module.hasOwnProperty(name)) {\n            if (\n                undefined === numArguments ||\n                (undefined !== Module[name].overloadTable &&\n                    undefined !== Module[name].overloadTable[numArguments])\n            ) {\n                throwBindingError(`Cannot register public name '${name}' twice`);\n            }\n            ensureOverloadTable(Module, name, name);\n            if (Module[name].overloadTable.hasOwnProperty(numArguments)) {\n                throwBindingError(\n                    `Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`,\n                );\n            }\n            Module[name].overloadTable[numArguments] = value;\n        } else {\n            Module[name] = value;\n            Module[name].argCount = numArguments;\n        }\n    };\n    var char_0 = 48;\n    var char_9 = 57;\n    var makeLegalFunctionName = (name) => {\n        assert(typeof name === \"string\");\n        name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n        var f = name.charCodeAt(0);\n        if (f >= char_0 && f <= char_9) {\n            return `_${name}`;\n        }\n        return name;\n    };\n    function RegisteredClass(\n        name,\n        constructor,\n        instancePrototype,\n        rawDestructor,\n        baseClass,\n        getActualType,\n        upcast,\n        downcast,\n    ) {\n        this.name = name;\n        this.constructor = constructor;\n        this.instancePrototype = instancePrototype;\n        this.rawDestructor = rawDestructor;\n        this.baseClass = baseClass;\n        this.getActualType = getActualType;\n        this.upcast = upcast;\n        this.downcast = downcast;\n        this.pureVirtualFunctions = [];\n    }\n    var upcastPointer = (ptr, ptrClass, desiredClass) => {\n        while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n                throwBindingError(\n                    `Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`,\n                );\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n        }\n        return ptr;\n    };\n    function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n        if (handle === null) {\n            if (this.isReference) {\n                throwBindingError(`null is not a valid ${this.name}`);\n            }\n            return 0;\n        }\n        if (!handle.$$) {\n            throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n        }\n        if (!handle.$$.ptr) {\n            throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n        }\n        var handleClass = handle.$$.ptrType.registeredClass;\n        var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n        return ptr;\n    }\n    function genericPointerToWireType(destructors, handle) {\n        var ptr;\n        if (handle === null) {\n            if (this.isReference) {\n                throwBindingError(`null is not a valid ${this.name}`);\n            }\n            if (this.isSmartPointer) {\n                ptr = this.rawConstructor();\n                if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                }\n                return ptr;\n            } else {\n                return 0;\n            }\n        }\n        if (!handle || !handle.$$) {\n            throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n        }\n        if (!handle.$$.ptr) {\n            throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n        }\n        if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\n                `Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`,\n            );\n        }\n        var handleClass = handle.$$.ptrType.registeredClass;\n        ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n        if (this.isSmartPointer) {\n            if (undefined === handle.$$.smartPtr) {\n                throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n                case 0:\n                    if (handle.$$.smartPtrType === this) {\n                        ptr = handle.$$.smartPtr;\n                    } else {\n                        throwBindingError(\n                            `Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`,\n                        );\n                    }\n                    break;\n                case 1:\n                    ptr = handle.$$.smartPtr;\n                    break;\n                case 2:\n                    if (handle.$$.smartPtrType === this) {\n                        ptr = handle.$$.smartPtr;\n                    } else {\n                        var clonedHandle = handle[\"clone\"]();\n                        ptr = this.rawShare(\n                            ptr,\n                            Emval.toHandle(() => clonedHandle[\"delete\"]()),\n                        );\n                        if (destructors !== null) {\n                            destructors.push(this.rawDestructor, ptr);\n                        }\n                    }\n                    break;\n                default:\n                    throwBindingError(\"Unsupporting sharing policy\");\n            }\n        }\n        return ptr;\n    }\n    function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n        if (handle === null) {\n            if (this.isReference) {\n                throwBindingError(`null is not a valid ${this.name}`);\n            }\n            return 0;\n        }\n        if (!handle.$$) {\n            throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n        }\n        if (!handle.$$.ptr) {\n            throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n        }\n        if (handle.$$.ptrType.isConst) {\n            throwBindingError(\n                `Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`,\n            );\n        }\n        var handleClass = handle.$$.ptrType.registeredClass;\n        var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n        return ptr;\n    }\n    function readPointer(pointer) {\n        return this.fromWireType(HEAPU32[pointer >> 2]);\n    }\n    var init_RegisteredPointer = () => {\n        Object.assign(RegisteredPointer.prototype, {\n            getPointee(ptr) {\n                if (this.rawGetPointee) {\n                    ptr = this.rawGetPointee(ptr);\n                }\n                return ptr;\n            },\n            destructor(ptr) {\n                this.rawDestructor?.(ptr);\n            },\n            readValueFromPointer: readPointer,\n            fromWireType: RegisteredPointer_fromWireType,\n        });\n    };\n    function RegisteredPointer(\n        name,\n        registeredClass,\n        isReference,\n        isConst,\n        isSmartPointer,\n        pointeeType,\n        sharingPolicy,\n        rawGetPointee,\n        rawConstructor,\n        rawShare,\n        rawDestructor,\n    ) {\n        this.name = name;\n        this.registeredClass = registeredClass;\n        this.isReference = isReference;\n        this.isConst = isConst;\n        this.isSmartPointer = isSmartPointer;\n        this.pointeeType = pointeeType;\n        this.sharingPolicy = sharingPolicy;\n        this.rawGetPointee = rawGetPointee;\n        this.rawConstructor = rawConstructor;\n        this.rawShare = rawShare;\n        this.rawDestructor = rawDestructor;\n        if (!isSmartPointer && registeredClass.baseClass === undefined) {\n            if (isConst) {\n                this.toWireType = constNoSmartPtrRawPointerToWireType;\n                this.destructorFunction = null;\n            } else {\n                this.toWireType = nonConstNoSmartPtrRawPointerToWireType;\n                this.destructorFunction = null;\n            }\n        } else {\n            this.toWireType = genericPointerToWireType;\n        }\n    }\n    var replacePublicSymbol = (name, value, numArguments) => {\n        if (!Module.hasOwnProperty(name)) {\n            throwInternalError(\"Replacing nonexistent public symbol\");\n        }\n        if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n            Module[name].overloadTable[numArguments] = value;\n        } else {\n            Module[name] = value;\n            Module[name].argCount = numArguments;\n        }\n    };\n    var wasmTable;\n    var getWasmTableEntry = (funcPtr) => wasmTable.get(funcPtr);\n    var embind__requireFunction = (signature, rawFunction, isAsync = false) => {\n        assert(!isAsync, \"Async bindings are only supported with JSPI.\");\n        signature = AsciiToString(signature);\n        function makeDynCaller() {\n            var rtn = getWasmTableEntry(rawFunction);\n            return rtn;\n        }\n        var fp = makeDynCaller();\n        if (typeof fp != \"function\") {\n            throwBindingError(\n                `unknown function pointer with signature ${signature}: ${rawFunction}`,\n            );\n        }\n        return fp;\n    };\n    class UnboundTypeError extends Error {}\n    var getTypeName = (type) => {\n        var ptr = ___getTypeName(type);\n        var rv = AsciiToString(ptr);\n        _free(ptr);\n        return rv;\n    };\n    var throwUnboundTypeError = (message, types) => {\n        var unboundTypes = [];\n        var seen = {};\n        function visit(type) {\n            if (seen[type]) {\n                return;\n            }\n            if (registeredTypes[type]) {\n                return;\n            }\n            if (typeDependencies[type]) {\n                typeDependencies[type].forEach(visit);\n                return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n        }\n        types.forEach(visit);\n        throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([\", \"]));\n    };\n    var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n        myTypes.forEach((type) => (typeDependencies[type] = dependentTypes));\n        function onComplete(typeConverters) {\n            var myTypeConverters = getTypeConverters(typeConverters);\n            if (myTypeConverters.length !== myTypes.length) {\n                throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n                registerType(myTypes[i], myTypeConverters[i]);\n            }\n        }\n        var typeConverters = new Array(dependentTypes.length);\n        var unregisteredTypes = [];\n        var registered = 0;\n        dependentTypes.forEach((dt, i) => {\n            if (registeredTypes.hasOwnProperty(dt)) {\n                typeConverters[i] = registeredTypes[dt];\n            } else {\n                unregisteredTypes.push(dt);\n                if (!awaitingDependencies.hasOwnProperty(dt)) {\n                    awaitingDependencies[dt] = [];\n                }\n                awaitingDependencies[dt].push(() => {\n                    typeConverters[i] = registeredTypes[dt];\n                    ++registered;\n                    if (registered === unregisteredTypes.length) {\n                        onComplete(typeConverters);\n                    }\n                });\n            }\n        });\n        if (0 === unregisteredTypes.length) {\n            onComplete(typeConverters);\n        }\n    };\n    var __embind_register_class = (\n        rawType,\n        rawPointerType,\n        rawConstPointerType,\n        baseClassRawType,\n        getActualTypeSignature,\n        getActualType,\n        upcastSignature,\n        upcast,\n        downcastSignature,\n        downcast,\n        name,\n        destructorSignature,\n        rawDestructor,\n    ) => {\n        name = AsciiToString(name);\n        getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n        upcast &&= embind__requireFunction(upcastSignature, upcast);\n        downcast &&= embind__requireFunction(downcastSignature, downcast);\n        rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n        var legalFunctionName = makeLegalFunctionName(name);\n        exposePublicSymbol(legalFunctionName, function () {\n            throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [\n                baseClassRawType,\n            ]);\n        });\n        whenDependentTypesAreResolved(\n            [rawType, rawPointerType, rawConstPointerType],\n            baseClassRawType ? [baseClassRawType] : [],\n            (base) => {\n                base = base[0];\n                var baseClass;\n                var basePrototype;\n                if (baseClassRawType) {\n                    baseClass = base.registeredClass;\n                    basePrototype = baseClass.instancePrototype;\n                } else {\n                    basePrototype = ClassHandle.prototype;\n                }\n                var constructor = createNamedFunction(name, function (...args) {\n                    if (Object.getPrototypeOf(this) !== instancePrototype) {\n                        throw new BindingError(`Use 'new' to construct ${name}`);\n                    }\n                    if (undefined === registeredClass.constructor_body) {\n                        throw new BindingError(`${name} has no accessible constructor`);\n                    }\n                    var body = registeredClass.constructor_body[args.length];\n                    if (undefined === body) {\n                        throw new BindingError(\n                            `Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`,\n                        );\n                    }\n                    return body.apply(this, args);\n                });\n                var instancePrototype = Object.create(basePrototype, {\n                    constructor: { value: constructor },\n                });\n                constructor.prototype = instancePrototype;\n                var registeredClass = new RegisteredClass(\n                    name,\n                    constructor,\n                    instancePrototype,\n                    rawDestructor,\n                    baseClass,\n                    getActualType,\n                    upcast,\n                    downcast,\n                );\n                if (registeredClass.baseClass) {\n                    registeredClass.baseClass.__derivedClasses ??= [];\n                    registeredClass.baseClass.__derivedClasses.push(registeredClass);\n                }\n                var referenceConverter = new RegisteredPointer(\n                    name,\n                    registeredClass,\n                    true,\n                    false,\n                    false,\n                );\n                var pointerConverter = new RegisteredPointer(\n                    name + \"*\",\n                    registeredClass,\n                    false,\n                    false,\n                    false,\n                );\n                var constPointerConverter = new RegisteredPointer(\n                    name + \" const*\",\n                    registeredClass,\n                    false,\n                    true,\n                    false,\n                );\n                registeredPointers[rawType] = {\n                    pointerType: pointerConverter,\n                    constPointerType: constPointerConverter,\n                };\n                replacePublicSymbol(legalFunctionName, constructor);\n                return [referenceConverter, pointerConverter, constPointerConverter];\n            },\n        );\n    };\n    var heap32VectorToArray = (count, firstElement) => {\n        var array = [];\n        for (var i = 0; i < count; i++) {\n            array.push(HEAPU32[(firstElement + i * 4) >> 2]);\n        }\n        return array;\n    };\n    var runDestructors = (destructors) => {\n        while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n        }\n    };\n    function usesDestructorStack(argTypes) {\n        for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function checkArgCount(numArgs, minArgs, maxArgs, humanName, throwBindingError) {\n        if (numArgs < minArgs || numArgs > maxArgs) {\n            var argCountMessage = minArgs == maxArgs ? minArgs : `${minArgs} to ${maxArgs}`;\n            throwBindingError(\n                `function ${humanName} called with ${numArgs} arguments, expected ${argCountMessage}`,\n            );\n        }\n    }\n    function createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\n        var needsDestructorStack = usesDestructorStack(argTypes);\n        var argCount = argTypes.length - 2;\n        var argsList = [];\n        var argsListWired = [\"fn\"];\n        if (isClassMethodFunc) {\n            argsListWired.push(\"thisWired\");\n        }\n        for (var i = 0; i < argCount; ++i) {\n            argsList.push(`arg${i}`);\n            argsListWired.push(`arg${i}Wired`);\n        }\n        argsList = argsList.join(\",\");\n        argsListWired = argsListWired.join(\",\");\n        var invokerFnBody = `return function (${argsList}) {\\n`;\n        invokerFnBody +=\n            \"checkArgCount(arguments.length, minArgs, maxArgs, humanName, throwBindingError);\\n\";\n        if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n        }\n        var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n        var args1 = [\n            \"humanName\",\n            \"throwBindingError\",\n            \"invoker\",\n            \"fn\",\n            \"runDestructors\",\n            \"fromRetWire\",\n            \"toClassParamWire\",\n        ];\n        if (isClassMethodFunc) {\n            invokerFnBody += `var thisWired = toClassParamWire(${dtorStack}, this);\\n`;\n        }\n        for (var i = 0; i < argCount; ++i) {\n            var argName = `toArg${i}Wire`;\n            invokerFnBody += `var arg${i}Wired = ${argName}(${dtorStack}, arg${i});\\n`;\n            args1.push(argName);\n        }\n        invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + `invoker(${argsListWired});\\n`;\n        if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n        } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n                var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n                if (argTypes[i].destructorFunction !== null) {\n                    invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\n                    args1.push(`${paramName}_dtor`);\n                }\n            }\n        }\n        if (returns) {\n            invokerFnBody += \"var ret = fromRetWire(rv);\\n\" + \"return ret;\\n\";\n        } else {\n        }\n        invokerFnBody += \"}\\n\";\n        args1.push(\"checkArgCount\", \"minArgs\", \"maxArgs\");\n        invokerFnBody = `if (arguments.length !== ${args1.length}){ throw new Error(humanName + \"Expected ${args1.length} closure arguments \" + arguments.length + \" given.\"); }\\n${invokerFnBody}`;\n        return new Function(args1, invokerFnBody);\n    }\n    function getRequiredArgCount(argTypes) {\n        var requiredArgCount = argTypes.length - 2;\n        for (var i = argTypes.length - 1; i >= 2; --i) {\n            if (!argTypes[i].optional) {\n                break;\n            }\n            requiredArgCount--;\n        }\n        return requiredArgCount;\n    }\n    function craftInvokerFunction(\n        humanName,\n        argTypes,\n        classType,\n        cppInvokerFunc,\n        cppTargetFunc,\n        isAsync,\n    ) {\n        var argCount = argTypes.length;\n        if (argCount < 2) {\n            throwBindingError(\n                \"argTypes array size mismatch! Must at least get return value and 'this' types!\",\n            );\n        }\n        assert(!isAsync, \"Async bindings are only supported with JSPI.\");\n        var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n        var needsDestructorStack = usesDestructorStack(argTypes);\n        var returns = !argTypes[0].isVoid;\n        var expectedArgCount = argCount - 2;\n        var minArgs = getRequiredArgCount(argTypes);\n        var retType = argTypes[0];\n        var instType = argTypes[1];\n        var closureArgs = [\n            humanName,\n            throwBindingError,\n            cppInvokerFunc,\n            cppTargetFunc,\n            runDestructors,\n            retType.fromWireType.bind(retType),\n            instType?.toWireType.bind(instType),\n        ];\n        for (var i = 2; i < argCount; ++i) {\n            var argType = argTypes[i];\n            closureArgs.push(argType.toWireType.bind(argType));\n        }\n        if (!needsDestructorStack) {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n                if (argTypes[i].destructorFunction !== null) {\n                    closureArgs.push(argTypes[i].destructorFunction);\n                }\n            }\n        }\n        closureArgs.push(checkArgCount, minArgs, expectedArgCount);\n        let invokerFactory = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\n        var invokerFn = invokerFactory(...closureArgs);\n        return createNamedFunction(humanName, invokerFn);\n    }\n    var __embind_register_class_constructor = (\n        rawClassType,\n        argCount,\n        rawArgTypesAddr,\n        invokerSignature,\n        invoker,\n        rawConstructor,\n    ) => {\n        assert(argCount > 0);\n        var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n        invoker = embind__requireFunction(invokerSignature, invoker);\n        whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n            classType = classType[0];\n            var humanName = `constructor ${classType.name}`;\n            if (undefined === classType.registeredClass.constructor_body) {\n                classType.registeredClass.constructor_body = [];\n            }\n            if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n                throw new BindingError(\n                    `Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`,\n                );\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = () => {\n                throwUnboundTypeError(\n                    `Cannot construct ${classType.name} due to unbound types`,\n                    rawArgTypes,\n                );\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n                argTypes.splice(1, 0, null);\n                classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(\n                    humanName,\n                    argTypes,\n                    null,\n                    invoker,\n                    rawConstructor,\n                );\n                return [];\n            });\n            return [];\n        });\n    };\n    var getFunctionName = (signature) => {\n        signature = signature.trim();\n        const argsIndex = signature.indexOf(\"(\");\n        if (argsIndex === -1) return signature;\n        assert(signature.endsWith(\")\"), \"Parentheses for argument names should match.\");\n        return signature.slice(0, argsIndex);\n    };\n    var __embind_register_class_function = (\n        rawClassType,\n        methodName,\n        argCount,\n        rawArgTypesAddr,\n        invokerSignature,\n        rawInvoker,\n        context,\n        isPureVirtual,\n        isAsync,\n        isNonnullReturn,\n    ) => {\n        var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n        methodName = AsciiToString(methodName);\n        methodName = getFunctionName(methodName);\n        rawInvoker = embind__requireFunction(invokerSignature, rawInvoker, isAsync);\n        whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n            classType = classType[0];\n            var humanName = `${classType.name}.${methodName}`;\n            if (methodName.startsWith(\"@@\")) {\n                methodName = Symbol[methodName.substring(2)];\n            }\n            if (isPureVirtual) {\n                classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n                throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (\n                undefined === method ||\n                (undefined === method.overloadTable &&\n                    method.className !== classType.name &&\n                    method.argCount === argCount - 2)\n            ) {\n                unboundTypesHandler.argCount = argCount - 2;\n                unboundTypesHandler.className = classType.name;\n                proto[methodName] = unboundTypesHandler;\n            } else {\n                ensureOverloadTable(proto, methodName, humanName);\n                proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n                var memberFunction = craftInvokerFunction(\n                    humanName,\n                    argTypes,\n                    classType,\n                    rawInvoker,\n                    context,\n                    isAsync,\n                );\n                if (undefined === proto[methodName].overloadTable) {\n                    memberFunction.argCount = argCount - 2;\n                    proto[methodName] = memberFunction;\n                } else {\n                    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n                }\n                return [];\n            });\n            return [];\n        });\n    };\n    var emval_freelist = [];\n    var emval_handles = [0, 1, , 1, null, 1, true, 1, false, 1];\n    var __emval_decref = (handle) => {\n        if (handle > 9 && 0 === --emval_handles[handle + 1]) {\n            assert(emval_handles[handle] !== undefined, `Decref for unallocated handle.`);\n            emval_handles[handle] = undefined;\n            emval_freelist.push(handle);\n        }\n    };\n    var Emval = {\n        toValue: (handle) => {\n            if (!handle) {\n                throwBindingError(`Cannot use deleted val. handle = ${handle}`);\n            }\n            assert(\n                handle === 2 || (emval_handles[handle] !== undefined && handle % 2 === 0),\n                `invalid handle: ${handle}`,\n            );\n            return emval_handles[handle];\n        },\n        toHandle: (value) => {\n            switch (value) {\n                case undefined:\n                    return 2;\n                case null:\n                    return 4;\n                case true:\n                    return 6;\n                case false:\n                    return 8;\n                default: {\n                    const handle = emval_freelist.pop() || emval_handles.length;\n                    emval_handles[handle] = value;\n                    emval_handles[handle + 1] = 1;\n                    return handle;\n                }\n            }\n        },\n    };\n    var EmValType = {\n        name: \"emscripten::val\",\n        fromWireType: (handle) => {\n            var rv = Emval.toValue(handle);\n            __emval_decref(handle);\n            return rv;\n        },\n        toWireType: (destructors, value) => Emval.toHandle(value),\n        readValueFromPointer: readPointer,\n        destructorFunction: null,\n    };\n    var __embind_register_emval = (rawType) => registerType(rawType, EmValType);\n    var floatReadValueFromPointer = (name, width) => {\n        switch (width) {\n            case 4:\n                return function (pointer) {\n                    return this.fromWireType(HEAPF32[pointer >> 2]);\n                };\n            case 8:\n                return function (pointer) {\n                    return this.fromWireType(HEAPF64[pointer >> 3]);\n                };\n            default:\n                throw new TypeError(`invalid float width (${width}): ${name}`);\n        }\n    };\n    var __embind_register_float = (rawType, name, size) => {\n        name = AsciiToString(name);\n        registerType(rawType, {\n            name,\n            fromWireType: (value) => value,\n            toWireType: (destructors, value) => {\n                if (typeof value != \"number\" && typeof value != \"boolean\") {\n                    throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`);\n                }\n                return value;\n            },\n            readValueFromPointer: floatReadValueFromPointer(name, size),\n            destructorFunction: null,\n        });\n    };\n    var __embind_register_function = (\n        name,\n        argCount,\n        rawArgTypesAddr,\n        signature,\n        rawInvoker,\n        fn,\n        isAsync,\n        isNonnullReturn,\n    ) => {\n        var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n        name = AsciiToString(name);\n        name = getFunctionName(name);\n        rawInvoker = embind__requireFunction(signature, rawInvoker, isAsync);\n        exposePublicSymbol(\n            name,\n            function () {\n                throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\n            },\n            argCount - 1,\n        );\n        whenDependentTypesAreResolved([], argTypes, (argTypes) => {\n            var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n            replacePublicSymbol(\n                name,\n                craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync),\n                argCount - 1,\n            );\n            return [];\n        });\n    };\n    var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n        name = AsciiToString(name);\n        const isUnsignedType = minRange === 0;\n        let fromWireType = (value) => value;\n        if (isUnsignedType) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = (value) => (value << bitshift) >>> bitshift;\n            maxRange = fromWireType(maxRange);\n        }\n        registerType(primitiveType, {\n            name,\n            fromWireType,\n            toWireType: (destructors, value) => {\n                if (typeof value != \"number\" && typeof value != \"boolean\") {\n                    throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${name}`);\n                }\n                assertIntegerRange(name, value, minRange, maxRange);\n                return value;\n            },\n            readValueFromPointer: integerReadValueFromPointer(name, size, minRange !== 0),\n            destructorFunction: null,\n        });\n    };\n    var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n        var typeMapping = [\n            Int8Array,\n            Uint8Array,\n            Int16Array,\n            Uint16Array,\n            Int32Array,\n            Uint32Array,\n            Float32Array,\n            Float64Array,\n            BigInt64Array,\n            BigUint64Array,\n        ];\n        var TA = typeMapping[dataTypeIndex];\n        function decodeMemoryView(handle) {\n            var size = HEAPU32[handle >> 2];\n            var data = HEAPU32[(handle + 4) >> 2];\n            return new TA(HEAP8.buffer, data, size);\n        }\n        name = AsciiToString(name);\n        registerType(\n            rawType,\n            { name, fromWireType: decodeMemoryView, readValueFromPointer: decodeMemoryView },\n            { ignoreDuplicateRegistrations: true },\n        );\n    };\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n        assert(\n            typeof maxBytesToWrite == \"number\",\n            \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\",\n        );\n        return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n    var __embind_register_std_string = (rawType, name) => {\n        name = AsciiToString(name);\n        var stdStringIsUTF8 = true;\n        registerType(rawType, {\n            name,\n            fromWireType(value) {\n                var length = HEAPU32[value >> 2];\n                var payload = value + 4;\n                var str;\n                if (stdStringIsUTF8) {\n                    str = UTF8ToString(payload, length, true);\n                } else {\n                    str = \"\";\n                    for (var i = 0; i < length; ++i) {\n                        str += String.fromCharCode(HEAPU8[payload + i]);\n                    }\n                }\n                _free(value);\n                return str;\n            },\n            toWireType(destructors, value) {\n                if (value instanceof ArrayBuffer) {\n                    value = new Uint8Array(value);\n                }\n                var length;\n                var valueIsOfTypeString = typeof value == \"string\";\n                if (\n                    !(\n                        valueIsOfTypeString ||\n                        (ArrayBuffer.isView(value) && value.BYTES_PER_ELEMENT == 1)\n                    )\n                ) {\n                    throwBindingError(\"Cannot pass non-string to std::string\");\n                }\n                if (stdStringIsUTF8 && valueIsOfTypeString) {\n                    length = lengthBytesUTF8(value);\n                } else {\n                    length = value.length;\n                }\n                var base = _malloc(4 + length + 1);\n                var ptr = base + 4;\n                HEAPU32[base >> 2] = length;\n                if (valueIsOfTypeString) {\n                    if (stdStringIsUTF8) {\n                        stringToUTF8(value, ptr, length + 1);\n                    } else {\n                        for (var i = 0; i < length; ++i) {\n                            var charCode = value.charCodeAt(i);\n                            if (charCode > 255) {\n                                _free(base);\n                                throwBindingError(\n                                    \"String has UTF-16 code units that do not fit in 8 bits\",\n                                );\n                            }\n                            HEAPU8[ptr + i] = charCode;\n                        }\n                    }\n                } else {\n                    HEAPU8.set(value, ptr);\n                }\n                if (destructors !== null) {\n                    destructors.push(_free, base);\n                }\n                return base;\n            },\n            readValueFromPointer: readPointer,\n            destructorFunction(ptr) {\n                _free(ptr);\n            },\n        });\n    };\n    var UTF16Decoder = new TextDecoder(\"utf-16le\");\n    var UTF16ToString = (ptr, maxBytesToRead, ignoreNul) => {\n        assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\n        var idx = ptr >> 1;\n        var endIdx = findStringEnd(HEAPU16, idx, maxBytesToRead / 2, ignoreNul);\n        return UTF16Decoder.decode(HEAPU16.subarray(idx, endIdx));\n    };\n    var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n        assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\n        assert(\n            typeof maxBytesToWrite == \"number\",\n            \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\",\n        );\n        maxBytesToWrite ??= 2147483647;\n        if (maxBytesToWrite < 2) return 0;\n        maxBytesToWrite -= 2;\n        var startPtr = outPtr;\n        var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n        for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >> 1] = codeUnit;\n            outPtr += 2;\n        }\n        HEAP16[outPtr >> 1] = 0;\n        return outPtr - startPtr;\n    };\n    var lengthBytesUTF16 = (str) => str.length * 2;\n    var UTF32ToString = (ptr, maxBytesToRead, ignoreNul) => {\n        assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\n        var str = \"\";\n        var startIdx = ptr >> 2;\n        for (var i = 0; !(i >= maxBytesToRead / 4); i++) {\n            var utf32 = HEAPU32[startIdx + i];\n            if (!utf32 && !ignoreNul) break;\n            str += String.fromCodePoint(utf32);\n        }\n        return str;\n    };\n    var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n        assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\n        assert(\n            typeof maxBytesToWrite == \"number\",\n            \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\",\n        );\n        maxBytesToWrite ??= 2147483647;\n        if (maxBytesToWrite < 4) return 0;\n        var startPtr = outPtr;\n        var endPtr = startPtr + maxBytesToWrite - 4;\n        for (var i = 0; i < str.length; ++i) {\n            var codePoint = str.codePointAt(i);\n            if (codePoint > 65535) {\n                i++;\n            }\n            HEAP32[outPtr >> 2] = codePoint;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr) break;\n        }\n        HEAP32[outPtr >> 2] = 0;\n        return outPtr - startPtr;\n    };\n    var lengthBytesUTF32 = (str) => {\n        var len = 0;\n        for (var i = 0; i < str.length; ++i) {\n            var codePoint = str.codePointAt(i);\n            if (codePoint > 65535) {\n                i++;\n            }\n            len += 4;\n        }\n        return len;\n    };\n    var __embind_register_std_wstring = (rawType, charSize, name) => {\n        name = AsciiToString(name);\n        var decodeString, encodeString, lengthBytesUTF;\n        if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n        } else {\n            assert(charSize === 4, \"only 2-byte and 4-byte strings are currently supported\");\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n        }\n        registerType(rawType, {\n            name,\n            fromWireType: (value) => {\n                var length = HEAPU32[value >> 2];\n                var str = decodeString(value + 4, length * charSize, true);\n                _free(value);\n                return str;\n            },\n            toWireType: (destructors, value) => {\n                if (!(typeof value == \"string\")) {\n                    throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n                }\n                var length = lengthBytesUTF(value);\n                var ptr = _malloc(4 + length + charSize);\n                HEAPU32[ptr >> 2] = length / charSize;\n                encodeString(value, ptr + 4, length + charSize);\n                if (destructors !== null) {\n                    destructors.push(_free, ptr);\n                }\n                return ptr;\n            },\n            readValueFromPointer: readPointer,\n            destructorFunction(ptr) {\n                _free(ptr);\n            },\n        });\n    };\n    var __embind_register_void = (rawType, name) => {\n        name = AsciiToString(name);\n        registerType(rawType, {\n            isVoid: true,\n            name,\n            fromWireType: () => undefined,\n            toWireType: (destructors, o) => undefined,\n        });\n    };\n    var runtimeKeepaliveCounter = 0;\n    var __emscripten_runtime_keepalive_clear = () => {\n        noExitRuntime = false;\n        runtimeKeepaliveCounter = 0;\n    };\n    var __emscripten_throw_longjmp = () => {\n        throw Infinity;\n    };\n    var emval_methodCallers = [];\n    var emval_addMethodCaller = (caller) => {\n        var id = emval_methodCallers.length;\n        emval_methodCallers.push(caller);\n        return id;\n    };\n    var requireRegisteredType = (rawType, humanName) => {\n        var impl = registeredTypes[rawType];\n        if (undefined === impl) {\n            throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\n        }\n        return impl;\n    };\n    var emval_lookupTypes = (argCount, argTypes) => {\n        var a = new Array(argCount);\n        for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAPU32[(argTypes + i * 4) >> 2], `parameter ${i}`);\n        }\n        return a;\n    };\n    var emval_returnValue = (toReturnWire, destructorsRef, handle) => {\n        var destructors = [];\n        var result = toReturnWire(destructors, handle);\n        if (destructors.length) {\n            HEAPU32[destructorsRef >> 2] = Emval.toHandle(destructors);\n        }\n        return result;\n    };\n    var emval_symbols = {};\n    var getStringOrSymbol = (address) => {\n        var symbol = emval_symbols[address];\n        if (symbol === undefined) {\n            return AsciiToString(address);\n        }\n        return symbol;\n    };\n    var __emval_create_invoker = (argCount, argTypesPtr, kind) => {\n        var GenericWireTypeSize = 8;\n        var [retType, ...argTypes] = emval_lookupTypes(argCount, argTypesPtr);\n        var toReturnWire = retType.toWireType.bind(retType);\n        var argFromPtr = argTypes.map((type) => type.readValueFromPointer.bind(type));\n        argCount--;\n        var captures = { toValue: Emval.toValue };\n        var args = argFromPtr.map((argFromPtr, i) => {\n            var captureName = `argFromPtr${i}`;\n            captures[captureName] = argFromPtr;\n            return `${captureName}(args${i ? \"+\" + i * GenericWireTypeSize : \"\"})`;\n        });\n        var functionBody;\n        switch (kind) {\n            case 0:\n                functionBody = \"toValue(handle)\";\n                break;\n            case 2:\n                functionBody = \"new (toValue(handle))\";\n                break;\n            case 3:\n                functionBody = \"\";\n                break;\n            case 1:\n                captures[\"getStringOrSymbol\"] = getStringOrSymbol;\n                functionBody = \"toValue(handle)[getStringOrSymbol(methodName)]\";\n                break;\n        }\n        functionBody += `(${args})`;\n        if (!retType.isVoid) {\n            captures[\"toReturnWire\"] = toReturnWire;\n            captures[\"emval_returnValue\"] = emval_returnValue;\n            functionBody = `return emval_returnValue(toReturnWire, destructorsRef, ${functionBody})`;\n        }\n        functionBody = `return function (handle, methodName, destructorsRef, args) {\\n  ${functionBody}\\n  }`;\n        var invokerFunction = new Function(Object.keys(captures), functionBody)(\n            ...Object.values(captures),\n        );\n        var functionName = `methodCaller<(${argTypes.map((t) => t.name)}) => ${retType.name}>`;\n        return emval_addMethodCaller(createNamedFunction(functionName, invokerFunction));\n    };\n    var emval_get_global = () => globalThis;\n    var __emval_get_global = (name) => {\n        if (name === 0) {\n            return Emval.toHandle(emval_get_global());\n        } else {\n            name = getStringOrSymbol(name);\n            return Emval.toHandle(emval_get_global()[name]);\n        }\n    };\n    var __emval_get_property = (handle, key) => {\n        handle = Emval.toValue(handle);\n        key = Emval.toValue(key);\n        return Emval.toHandle(handle[key]);\n    };\n    var __emval_incref = (handle) => {\n        if (handle > 9) {\n            emval_handles[handle + 1] += 1;\n        }\n    };\n    var __emval_instanceof = (object, constructor) => {\n        object = Emval.toValue(object);\n        constructor = Emval.toValue(constructor);\n        return object instanceof constructor;\n    };\n    var __emval_invoke = (caller, handle, methodName, destructorsRef, args) =>\n        emval_methodCallers[caller](handle, methodName, destructorsRef, args);\n    var __emval_new_cstring = (v) => Emval.toHandle(getStringOrSymbol(v));\n    var __emval_new_object = () => Emval.toHandle({});\n    var __emval_run_destructors = (handle) => {\n        var destructors = Emval.toValue(handle);\n        runDestructors(destructors);\n        __emval_decref(handle);\n    };\n    var __emval_set_property = (handle, key, value) => {\n        handle = Emval.toValue(handle);\n        key = Emval.toValue(key);\n        value = Emval.toValue(value);\n        handle[key] = value;\n    };\n    var INT53_MAX = 9007199254740992;\n    var INT53_MIN = -9007199254740992;\n    var bigintToI53Checked = (num) => (num < INT53_MIN || num > INT53_MAX ? NaN : Number(num));\n    function __mmap_js(len, prot, flags, fd, offset, allocated, addr) {\n        offset = bigintToI53Checked(offset);\n        try {\n            assert(!isNaN(offset));\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var res = FS.mmap(stream, len, offset, prot, flags);\n            var ptr = res.ptr;\n            HEAP32[allocated >> 2] = res.allocated;\n            HEAPU32[addr >> 2] = ptr;\n            return 0;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return -e.errno;\n        }\n    }\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n        offset = bigintToI53Checked(offset);\n        try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            if (prot & 2) {\n                SYSCALLS.doMsync(addr, stream, len, flags, offset);\n            }\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return -e.errno;\n        }\n    }\n    var timers = {};\n    var handleException = (e) => {\n        if (e instanceof ExitStatus || e == \"unwind\") {\n            return EXITSTATUS;\n        }\n        checkStackCookie();\n        if (e instanceof WebAssembly.RuntimeError) {\n            if (_emscripten_stack_get_current() <= 0) {\n                err(\n                    \"Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)\",\n                );\n            }\n        }\n        quit_(1, e);\n    };\n    var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n    var _proc_exit = (code) => {\n        EXITSTATUS = code;\n        if (!keepRuntimeAlive()) {\n            Module[\"onExit\"]?.(code);\n            ABORT = true;\n        }\n        quit_(code, new ExitStatus(code));\n    };\n    var exitJS = (status, implicit) => {\n        EXITSTATUS = status;\n        checkUnflushedContent();\n        if (keepRuntimeAlive() && !implicit) {\n            var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n            readyPromiseReject?.(msg);\n            err(msg);\n        }\n        _proc_exit(status);\n    };\n    var _exit = exitJS;\n    var maybeExit = () => {\n        if (!keepRuntimeAlive()) {\n            try {\n                _exit(EXITSTATUS);\n            } catch (e) {\n                handleException(e);\n            }\n        }\n    };\n    var callUserCallback = (func) => {\n        if (ABORT) {\n            err(\"user callback triggered after runtime exited or application aborted.  Ignoring.\");\n            return;\n        }\n        try {\n            func();\n            maybeExit();\n        } catch (e) {\n            handleException(e);\n        }\n    };\n    var _emscripten_get_now = () => performance.now();\n    var __setitimer_js = (which, timeout_ms) => {\n        if (timers[which]) {\n            clearTimeout(timers[which].id);\n            delete timers[which];\n        }\n        if (!timeout_ms) return 0;\n        var id = setTimeout(() => {\n            assert(which in timers);\n            delete timers[which];\n            callUserCallback(() => __emscripten_timeout(which, _emscripten_get_now()));\n        }, timeout_ms);\n        timers[which] = { id, timeout_ms };\n        return 0;\n    };\n    var getHeapMax = () => 2147483648;\n    var _emscripten_get_heap_max = () => getHeapMax();\n    var growMemory = (size) => {\n        var oldHeapSize = wasmMemory.buffer.byteLength;\n        var pages = ((size - oldHeapSize + 65535) / 65536) | 0;\n        try {\n            wasmMemory.grow(pages);\n            updateMemoryViews();\n            return 1;\n        } catch (e) {\n            err(\n                `growMemory: Attempted to grow heap from ${oldHeapSize} bytes to ${size} bytes, but got error: ${e}`,\n            );\n        }\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n        var oldSize = HEAPU8.length;\n        requestedSize >>>= 0;\n        assert(requestedSize > oldSize);\n        var maxHeapSize = getHeapMax();\n        if (requestedSize > maxHeapSize) {\n            err(\n                `Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`,\n            );\n            return false;\n        }\n        for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(\n                maxHeapSize,\n                alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\n            );\n            var replacement = growMemory(newSize);\n            if (replacement) {\n                return true;\n            }\n        }\n        err(\n            `Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`,\n        );\n        return false;\n    };\n    var stackAlloc = (sz) => __emscripten_stack_alloc(sz);\n    var stringToUTF8OnStack = (str) => {\n        var size = lengthBytesUTF8(str) + 1;\n        var ret = stackAlloc(size);\n        stringToUTF8(str, ret, size);\n        return ret;\n    };\n    var WebGPU = {\n        errorCallback: (callback, type, message, userdata) => {\n            var sp = stackSave();\n            var messagePtr = stringToUTF8OnStack(message);\n            getWasmTableEntry(callback)(type, messagePtr, userdata);\n            stackRestore(sp);\n        },\n        initManagers: () => {\n            assert(!WebGPU.mgrDevice, \"initManagers already called\");\n            function Manager() {\n                this.objects = {};\n                this.nextId = 1;\n                this.create = function (object, wrapper = {}) {\n                    var id = this.nextId++;\n                    assert(typeof this.objects[id] == \"undefined\");\n                    wrapper.refcount = 1;\n                    wrapper.object = object;\n                    this.objects[id] = wrapper;\n                    return id;\n                };\n                this.get = function (id) {\n                    if (!id) return undefined;\n                    var o = this.objects[id];\n                    assert(typeof o != \"undefined\");\n                    return o.object;\n                };\n                this.reference = function (id) {\n                    var o = this.objects[id];\n                    assert(typeof o != \"undefined\");\n                    o.refcount++;\n                };\n                this.release = function (id) {\n                    var o = this.objects[id];\n                    assert(typeof o != \"undefined\");\n                    assert(o.refcount > 0);\n                    o.refcount--;\n                    if (o.refcount <= 0) {\n                        delete this.objects[id];\n                    }\n                };\n            }\n            WebGPU.mgrSurface = new Manager();\n            WebGPU.mgrSwapChain = new Manager();\n            WebGPU.mgrAdapter = new Manager();\n            WebGPU.mgrDevice = new Manager();\n            WebGPU.mgrQueue = new Manager();\n            WebGPU.mgrCommandBuffer = new Manager();\n            WebGPU.mgrCommandEncoder = new Manager();\n            WebGPU.mgrRenderPassEncoder = new Manager();\n            WebGPU.mgrComputePassEncoder = new Manager();\n            WebGPU.mgrBindGroup = new Manager();\n            WebGPU.mgrBuffer = new Manager();\n            WebGPU.mgrSampler = new Manager();\n            WebGPU.mgrTexture = new Manager();\n            WebGPU.mgrTextureView = new Manager();\n            WebGPU.mgrQuerySet = new Manager();\n            WebGPU.mgrBindGroupLayout = new Manager();\n            WebGPU.mgrPipelineLayout = new Manager();\n            WebGPU.mgrRenderPipeline = new Manager();\n            WebGPU.mgrComputePipeline = new Manager();\n            WebGPU.mgrShaderModule = new Manager();\n            WebGPU.mgrRenderBundleEncoder = new Manager();\n            WebGPU.mgrRenderBundle = new Manager();\n        },\n        makeColor: (ptr) => ({\n            r: HEAPF64[ptr >> 3],\n            g: HEAPF64[(ptr + 8) >> 3],\n            b: HEAPF64[(ptr + 16) >> 3],\n            a: HEAPF64[(ptr + 24) >> 3],\n        }),\n        makeExtent3D: (ptr) => ({\n            width: HEAPU32[ptr >> 2],\n            height: HEAPU32[(ptr + 4) >> 2],\n            depthOrArrayLayers: HEAPU32[(ptr + 8) >> 2],\n        }),\n        makeOrigin3D: (ptr) => ({\n            x: HEAPU32[ptr >> 2],\n            y: HEAPU32[(ptr + 4) >> 2],\n            z: HEAPU32[(ptr + 8) >> 2],\n        }),\n        makeImageCopyTexture: (ptr) => {\n            assert(ptr);\n            assert(HEAPU32[ptr >> 2] === 0);\n            return {\n                texture: WebGPU.mgrTexture.get(HEAPU32[(ptr + 4) >> 2]),\n                mipLevel: HEAPU32[(ptr + 8) >> 2],\n                origin: WebGPU.makeOrigin3D(ptr + 12),\n                aspect: WebGPU.TextureAspect[HEAPU32[(ptr + 24) >> 2]],\n            };\n        },\n        makeTextureDataLayout: (ptr) => {\n            assert(ptr);\n            assert(HEAPU32[ptr >> 2] === 0);\n            var bytesPerRow = HEAPU32[(ptr + 16) >> 2];\n            var rowsPerImage = HEAPU32[(ptr + 20) >> 2];\n            return {\n                offset: HEAPU32[(ptr + 4 + 8) >> 2] * 4294967296 + HEAPU32[(ptr + 8) >> 2],\n                bytesPerRow: bytesPerRow === 4294967295 ? undefined : bytesPerRow,\n                rowsPerImage: rowsPerImage === 4294967295 ? undefined : rowsPerImage,\n            };\n        },\n        makeImageCopyBuffer: (ptr) => {\n            assert(ptr);\n            assert(HEAPU32[ptr >> 2] === 0);\n            var layoutPtr = ptr + 8;\n            var bufferCopyView = WebGPU.makeTextureDataLayout(layoutPtr);\n            bufferCopyView[\"buffer\"] = WebGPU.mgrBuffer.get(HEAPU32[(ptr + 32) >> 2]);\n            return bufferCopyView;\n        },\n        makePipelineConstants: (constantCount, constantsPtr) => {\n            if (!constantCount) return;\n            var constants = {};\n            for (var i = 0; i < constantCount; ++i) {\n                var entryPtr = constantsPtr + 16 * i;\n                var key = UTF8ToString(HEAPU32[(entryPtr + 4) >> 2]);\n                constants[key] = HEAPF64[(entryPtr + 8) >> 3];\n            }\n            return constants;\n        },\n        makePipelineLayout: (layoutPtr) => {\n            if (!layoutPtr) return \"auto\";\n            return WebGPU.mgrPipelineLayout.get(layoutPtr);\n        },\n        makeProgrammableStageDescriptor: (ptr) => {\n            if (!ptr) return undefined;\n            assert(ptr);\n            assert(HEAPU32[ptr >> 2] === 0);\n            var desc = {\n                module: WebGPU.mgrShaderModule.get(HEAPU32[(ptr + 4) >> 2]),\n                constants: WebGPU.makePipelineConstants(\n                    HEAPU32[(ptr + 12) >> 2],\n                    HEAPU32[(ptr + 16) >> 2],\n                ),\n            };\n            var entryPointPtr = HEAPU32[(ptr + 8) >> 2];\n            if (entryPointPtr) desc[\"entryPoint\"] = UTF8ToString(entryPointPtr);\n            return desc;\n        },\n        fillLimitStruct: (limits, supportedLimitsOutPtr) => {\n            var limitsOutPtr = supportedLimitsOutPtr + 8;\n            function setLimitValueU32(name, limitOffset) {\n                var limitValue = limits[name];\n                HEAP32[(limitsOutPtr + limitOffset) >> 2] = limitValue;\n            }\n            function setLimitValueU64(name, limitOffset) {\n                var limitValue = limits[name];\n                HEAP64[(limitsOutPtr + limitOffset) >> 3] = BigInt(limitValue);\n            }\n            setLimitValueU32(\"maxTextureDimension1D\", 0);\n            setLimitValueU32(\"maxTextureDimension2D\", 4);\n            setLimitValueU32(\"maxTextureDimension3D\", 8);\n            setLimitValueU32(\"maxTextureArrayLayers\", 12);\n            setLimitValueU32(\"maxBindGroups\", 16);\n            setLimitValueU32(\"maxBindGroupsPlusVertexBuffers\", 20);\n            setLimitValueU32(\"maxBindingsPerBindGroup\", 24);\n            setLimitValueU32(\"maxDynamicUniformBuffersPerPipelineLayout\", 28);\n            setLimitValueU32(\"maxDynamicStorageBuffersPerPipelineLayout\", 32);\n            setLimitValueU32(\"maxSampledTexturesPerShaderStage\", 36);\n            setLimitValueU32(\"maxSamplersPerShaderStage\", 40);\n            setLimitValueU32(\"maxStorageBuffersPerShaderStage\", 44);\n            setLimitValueU32(\"maxStorageTexturesPerShaderStage\", 48);\n            setLimitValueU32(\"maxUniformBuffersPerShaderStage\", 52);\n            setLimitValueU32(\"minUniformBufferOffsetAlignment\", 72);\n            setLimitValueU32(\"minStorageBufferOffsetAlignment\", 76);\n            setLimitValueU64(\"maxUniformBufferBindingSize\", 56);\n            setLimitValueU64(\"maxStorageBufferBindingSize\", 64);\n            setLimitValueU32(\"maxVertexBuffers\", 80);\n            setLimitValueU64(\"maxBufferSize\", 88);\n            setLimitValueU32(\"maxVertexAttributes\", 96);\n            setLimitValueU32(\"maxVertexBufferArrayStride\", 100);\n            setLimitValueU32(\"maxInterStageShaderComponents\", 104);\n            setLimitValueU32(\"maxInterStageShaderVariables\", 108);\n            setLimitValueU32(\"maxColorAttachments\", 112);\n            setLimitValueU32(\"maxColorAttachmentBytesPerSample\", 116);\n            setLimitValueU32(\"maxComputeWorkgroupStorageSize\", 120);\n            setLimitValueU32(\"maxComputeInvocationsPerWorkgroup\", 124);\n            setLimitValueU32(\"maxComputeWorkgroupSizeX\", 128);\n            setLimitValueU32(\"maxComputeWorkgroupSizeY\", 132);\n            setLimitValueU32(\"maxComputeWorkgroupSizeZ\", 136);\n            setLimitValueU32(\"maxComputeWorkgroupsPerDimension\", 140);\n        },\n        Int_BufferMapState: { unmapped: 1, pending: 2, mapped: 3 },\n        Int_CompilationMessageType: { error: 1, warning: 2, info: 3 },\n        Int_DeviceLostReason: { undefined: 1, unknown: 1, destroyed: 2 },\n        Int_PreferredFormat: { rgba8unorm: 18, bgra8unorm: 23 },\n        WGSLFeatureName: [\n            ,\n            \"readonly_and_readwrite_storage_textures\",\n            \"packed_4x8_integer_dot_product\",\n            \"unrestricted_pointer_parameters\",\n            \"pointer_composite_access\",\n        ],\n        AddressMode: [, \"clamp-to-edge\", \"repeat\", \"mirror-repeat\"],\n        AlphaMode: [, \"opaque\", \"premultiplied\"],\n        BlendFactor: [\n            ,\n            \"zero\",\n            \"one\",\n            \"src\",\n            \"one-minus-src\",\n            \"src-alpha\",\n            \"one-minus-src-alpha\",\n            \"dst\",\n            \"one-minus-dst\",\n            \"dst-alpha\",\n            \"one-minus-dst-alpha\",\n            \"src-alpha-saturated\",\n            \"constant\",\n            \"one-minus-constant\",\n        ],\n        BlendOperation: [, \"add\", \"subtract\", \"reverse-subtract\", \"min\", \"max\"],\n        BufferBindingType: [, \"uniform\", \"storage\", \"read-only-storage\"],\n        BufferMapState: { 1: \"unmapped\", 2: \"pending\", 3: \"mapped\" },\n        CompareFunction: [\n            ,\n            \"never\",\n            \"less\",\n            \"equal\",\n            \"less-equal\",\n            \"greater\",\n            \"not-equal\",\n            \"greater-equal\",\n            \"always\",\n        ],\n        CompilationInfoRequestStatus: [\"success\", \"error\", \"device-lost\", \"unknown\"],\n        CullMode: [, \"none\", \"front\", \"back\"],\n        ErrorFilter: { 1: \"validation\", 2: \"out-of-memory\", 3: \"internal\" },\n        FeatureName: [\n            ,\n            \"depth-clip-control\",\n            \"depth32float-stencil8\",\n            \"timestamp-query\",\n            \"texture-compression-bc\",\n            \"texture-compression-etc2\",\n            \"texture-compression-astc\",\n            \"indirect-first-instance\",\n            \"shader-f16\",\n            \"rg11b10ufloat-renderable\",\n            \"bgra8unorm-storage\",\n            \"float32-filterable\",\n        ],\n        FilterMode: [, \"nearest\", \"linear\"],\n        FrontFace: [, \"ccw\", \"cw\"],\n        IndexFormat: [, \"uint16\", \"uint32\"],\n        LoadOp: [, \"clear\", \"load\"],\n        MipmapFilterMode: [, \"nearest\", \"linear\"],\n        PowerPreference: [, \"low-power\", \"high-performance\"],\n        PrimitiveTopology: [\n            ,\n            \"point-list\",\n            \"line-list\",\n            \"line-strip\",\n            \"triangle-list\",\n            \"triangle-strip\",\n        ],\n        QueryType: { 1: \"occlusion\", 2: \"timestamp\" },\n        SamplerBindingType: [, \"filtering\", \"non-filtering\", \"comparison\"],\n        StencilOperation: [\n            ,\n            \"keep\",\n            \"zero\",\n            \"replace\",\n            \"invert\",\n            \"increment-clamp\",\n            \"decrement-clamp\",\n            \"increment-wrap\",\n            \"decrement-wrap\",\n        ],\n        StorageTextureAccess: [, \"write-only\", \"read-only\", \"read-write\"],\n        StoreOp: [, \"store\", \"discard\"],\n        TextureAspect: [, \"all\", \"stencil-only\", \"depth-only\"],\n        TextureDimension: [, \"1d\", \"2d\", \"3d\"],\n        TextureFormat: [\n            ,\n            \"r8unorm\",\n            \"r8snorm\",\n            \"r8uint\",\n            \"r8sint\",\n            \"r16uint\",\n            \"r16sint\",\n            \"r16float\",\n            \"rg8unorm\",\n            \"rg8snorm\",\n            \"rg8uint\",\n            \"rg8sint\",\n            \"r32float\",\n            \"r32uint\",\n            \"r32sint\",\n            \"rg16uint\",\n            \"rg16sint\",\n            \"rg16float\",\n            \"rgba8unorm\",\n            \"rgba8unorm-srgb\",\n            \"rgba8snorm\",\n            \"rgba8uint\",\n            \"rgba8sint\",\n            \"bgra8unorm\",\n            \"bgra8unorm-srgb\",\n            \"rgb10a2uint\",\n            \"rgb10a2unorm\",\n            \"rg11b10ufloat\",\n            \"rgb9e5ufloat\",\n            \"rg32float\",\n            \"rg32uint\",\n            \"rg32sint\",\n            \"rgba16uint\",\n            \"rgba16sint\",\n            \"rgba16float\",\n            \"rgba32float\",\n            \"rgba32uint\",\n            \"rgba32sint\",\n            \"stencil8\",\n            \"depth16unorm\",\n            \"depth24plus\",\n            \"depth24plus-stencil8\",\n            \"depth32float\",\n            \"depth32float-stencil8\",\n            \"bc1-rgba-unorm\",\n            \"bc1-rgba-unorm-srgb\",\n            \"bc2-rgba-unorm\",\n            \"bc2-rgba-unorm-srgb\",\n            \"bc3-rgba-unorm\",\n            \"bc3-rgba-unorm-srgb\",\n            \"bc4-r-unorm\",\n            \"bc4-r-snorm\",\n            \"bc5-rg-unorm\",\n            \"bc5-rg-snorm\",\n            \"bc6h-rgb-ufloat\",\n            \"bc6h-rgb-float\",\n            \"bc7-rgba-unorm\",\n            \"bc7-rgba-unorm-srgb\",\n            \"etc2-rgb8unorm\",\n            \"etc2-rgb8unorm-srgb\",\n            \"etc2-rgb8a1unorm\",\n            \"etc2-rgb8a1unorm-srgb\",\n            \"etc2-rgba8unorm\",\n            \"etc2-rgba8unorm-srgb\",\n            \"eac-r11unorm\",\n            \"eac-r11snorm\",\n            \"eac-rg11unorm\",\n            \"eac-rg11snorm\",\n            \"astc-4x4-unorm\",\n            \"astc-4x4-unorm-srgb\",\n            \"astc-5x4-unorm\",\n            \"astc-5x4-unorm-srgb\",\n            \"astc-5x5-unorm\",\n            \"astc-5x5-unorm-srgb\",\n            \"astc-6x5-unorm\",\n            \"astc-6x5-unorm-srgb\",\n            \"astc-6x6-unorm\",\n            \"astc-6x6-unorm-srgb\",\n            \"astc-8x5-unorm\",\n            \"astc-8x5-unorm-srgb\",\n            \"astc-8x6-unorm\",\n            \"astc-8x6-unorm-srgb\",\n            \"astc-8x8-unorm\",\n            \"astc-8x8-unorm-srgb\",\n            \"astc-10x5-unorm\",\n            \"astc-10x5-unorm-srgb\",\n            \"astc-10x6-unorm\",\n            \"astc-10x6-unorm-srgb\",\n            \"astc-10x8-unorm\",\n            \"astc-10x8-unorm-srgb\",\n            \"astc-10x10-unorm\",\n            \"astc-10x10-unorm-srgb\",\n            \"astc-12x10-unorm\",\n            \"astc-12x10-unorm-srgb\",\n            \"astc-12x12-unorm\",\n            \"astc-12x12-unorm-srgb\",\n        ],\n        TextureSampleType: [, \"float\", \"unfilterable-float\", \"depth\", \"sint\", \"uint\"],\n        TextureViewDimension: [, \"1d\", \"2d\", \"2d-array\", \"cube\", \"cube-array\", \"3d\"],\n        VertexFormat: [\n            ,\n            \"uint8x2\",\n            \"uint8x4\",\n            \"sint8x2\",\n            \"sint8x4\",\n            \"unorm8x2\",\n            \"unorm8x4\",\n            \"snorm8x2\",\n            \"snorm8x4\",\n            \"uint16x2\",\n            \"uint16x4\",\n            \"sint16x2\",\n            \"sint16x4\",\n            \"unorm16x2\",\n            \"unorm16x4\",\n            \"snorm16x2\",\n            \"snorm16x4\",\n            \"float16x2\",\n            \"float16x4\",\n            \"float32\",\n            \"float32x2\",\n            \"float32x3\",\n            \"float32x4\",\n            \"uint32\",\n            \"uint32x2\",\n            \"uint32x3\",\n            \"uint32x4\",\n            \"sint32\",\n            \"sint32x2\",\n            \"sint32x3\",\n            \"sint32x4\",\n            \"unorm10-10-10-2\",\n        ],\n        VertexStepMode: [, \"vertex-buffer-not-used\", \"vertex\", \"instance\"],\n        FeatureNameString2Enum: {\n            undefined: \"0\",\n            \"depth-clip-control\": \"1\",\n            \"depth32float-stencil8\": \"2\",\n            \"timestamp-query\": \"3\",\n            \"texture-compression-bc\": \"4\",\n            \"texture-compression-etc2\": \"5\",\n            \"texture-compression-astc\": \"6\",\n            \"indirect-first-instance\": \"7\",\n            \"shader-f16\": \"8\",\n            \"rg11b10ufloat-renderable\": \"9\",\n            \"bgra8unorm-storage\": \"10\",\n            \"float32-filterable\": \"11\",\n        },\n    };\n    var _emscripten_webgpu_get_device = () => {\n        assert(Module[\"preinitializedWebGPUDevice\"]);\n        if (WebGPU.preinitializedDeviceId === undefined) {\n            var device = Module[\"preinitializedWebGPUDevice\"];\n            var deviceWrapper = { queueId: WebGPU.mgrQueue.create(device[\"queue\"]) };\n            WebGPU.preinitializedDeviceId = WebGPU.mgrDevice.create(device, deviceWrapper);\n        }\n        WebGPU.mgrDevice.reference(WebGPU.preinitializedDeviceId);\n        return WebGPU.preinitializedDeviceId;\n    };\n    var JsValStore = {\n        values: {},\n        next_id: 1,\n        add(js_val) {\n            var id;\n            do {\n                id = JsValStore.next_id++;\n                if (JsValStore.next_id > 2147483647) JsValStore.next_id = 1;\n            } while (id in JsValStore.values);\n            JsValStore.values[id] = js_val;\n            return id;\n        },\n        remove(id) {\n            assert(id in JsValStore.values);\n            delete JsValStore.values[id];\n        },\n        get(id) {\n            assert(id === 0 || id in JsValStore.values);\n            return JsValStore.values[id];\n        },\n    };\n    var _emscripten_webgpu_import_render_pass_encoder = (handle) =>\n        WebGPU.mgrRenderPassEncoder.create(JsValStore.get(handle));\n    var ENV = {};\n    var getExecutableName = () => thisProgram || \"./this.program\";\n    var getEnvStrings = () => {\n        if (!getEnvStrings.strings) {\n            var lang =\n                ((typeof navigator == \"object\" && navigator.language) || \"C\").replace(\"-\", \"_\") +\n                \".UTF-8\";\n            var env = {\n                USER: \"web_user\",\n                LOGNAME: \"web_user\",\n                PATH: \"/\",\n                PWD: \"/\",\n                HOME: \"/home/web_user\",\n                LANG: lang,\n                _: getExecutableName(),\n            };\n            for (var x in ENV) {\n                if (ENV[x] === undefined) delete env[x];\n                else env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n                strings.push(`${x}=${env[x]}`);\n            }\n            getEnvStrings.strings = strings;\n        }\n        return getEnvStrings.strings;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n        var bufSize = 0;\n        var envp = 0;\n        for (var string of getEnvStrings()) {\n            var ptr = environ_buf + bufSize;\n            HEAPU32[(__environ + envp) >> 2] = ptr;\n            bufSize += stringToUTF8(string, ptr, Infinity) + 1;\n            envp += 4;\n        }\n        return 0;\n    };\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n        var strings = getEnvStrings();\n        HEAPU32[penviron_count >> 2] = strings.length;\n        var bufSize = 0;\n        for (var string of strings) {\n            bufSize += lengthBytesUTF8(string) + 1;\n        }\n        HEAPU32[penviron_buf_size >> 2] = bufSize;\n        return 0;\n    };\n    function _fd_close(fd) {\n        try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return e.errno;\n        }\n    }\n    var doReadv = (stream, iov, iovcnt, offset) => {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAPU32[iov >> 2];\n            var len = HEAPU32[(iov + 4) >> 2];\n            iov += 8;\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0) return -1;\n            ret += curr;\n            if (curr < len) break;\n            if (typeof offset != \"undefined\") {\n                offset += curr;\n            }\n        }\n        return ret;\n    };\n    function _fd_read(fd, iov, iovcnt, pnum) {\n        try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = doReadv(stream, iov, iovcnt);\n            HEAPU32[pnum >> 2] = num;\n            return 0;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return e.errno;\n        }\n    }\n    function _fd_seek(fd, offset, whence, newOffset) {\n        offset = bigintToI53Checked(offset);\n        try {\n            if (isNaN(offset)) return 61;\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.llseek(stream, offset, whence);\n            HEAP64[newOffset >> 3] = BigInt(stream.position);\n            if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n            return 0;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return e.errno;\n        }\n    }\n    var doWritev = (stream, iov, iovcnt, offset) => {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAPU32[iov >> 2];\n            var len = HEAPU32[(iov + 4) >> 2];\n            iov += 8;\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0) return -1;\n            ret += curr;\n            if (curr < len) {\n                break;\n            }\n            if (typeof offset != \"undefined\") {\n                offset += curr;\n            }\n        }\n        return ret;\n    };\n    function _fd_write(fd, iov, iovcnt, pnum) {\n        try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = doWritev(stream, iov, iovcnt);\n            HEAPU32[pnum >> 2] = num;\n            return 0;\n        } catch (e) {\n            if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n            return e.errno;\n        }\n    }\n    var _wgpuBindGroupLayoutRelease = (id) => WebGPU.mgrBindGroupLayout.release(id);\n    var _wgpuBindGroupRelease = (id) => WebGPU.mgrBindGroup.release(id);\n    var _wgpuBufferDestroy = (bufferId) => {\n        var bufferWrapper = WebGPU.mgrBuffer.objects[bufferId];\n        assert(typeof bufferWrapper != \"undefined\");\n        if (bufferWrapper.onUnmap) {\n            for (var f of bufferWrapper.onUnmap) {\n                f();\n            }\n            bufferWrapper.onUnmap = undefined;\n        }\n        WebGPU.mgrBuffer.get(bufferId).destroy();\n    };\n    var _wgpuBufferRelease = (id) => WebGPU.mgrBuffer.release(id);\n    var readI53FromI64 = (ptr) => HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    var _wgpuDeviceCreateBindGroup = (deviceId, descriptor) => {\n        assert(descriptor);\n        assert(HEAPU32[descriptor >> 2] === 0);\n        function makeEntry(entryPtr) {\n            assert(entryPtr);\n            var bufferId = HEAPU32[(entryPtr + 8) >> 2];\n            var samplerId = HEAPU32[(entryPtr + 32) >> 2];\n            var textureViewId = HEAPU32[(entryPtr + 36) >> 2];\n            assert((bufferId !== 0) + (samplerId !== 0) + (textureViewId !== 0) === 1);\n            var binding = HEAPU32[(entryPtr + 4) >> 2];\n            if (bufferId) {\n                var size = readI53FromI64(entryPtr + 24);\n                if (size == -1) size = undefined;\n                return {\n                    binding,\n                    resource: {\n                        buffer: WebGPU.mgrBuffer.get(bufferId),\n                        offset:\n                            HEAPU32[(entryPtr + 4 + 16) >> 2] * 4294967296 +\n                            HEAPU32[(entryPtr + 16) >> 2],\n                        size,\n                    },\n                };\n            } else if (samplerId) {\n                return { binding, resource: WebGPU.mgrSampler.get(samplerId) };\n            } else {\n                return { binding, resource: WebGPU.mgrTextureView.get(textureViewId) };\n            }\n        }\n        function makeEntries(count, entriesPtrs) {\n            var entries = [];\n            for (var i = 0; i < count; ++i) {\n                entries.push(makeEntry(entriesPtrs + 40 * i));\n            }\n            return entries;\n        }\n        var desc = {\n            label: undefined,\n            layout: WebGPU.mgrBindGroupLayout.get(HEAPU32[(descriptor + 8) >> 2]),\n            entries: makeEntries(HEAPU32[(descriptor + 12) >> 2], HEAPU32[(descriptor + 16) >> 2]),\n        };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrBindGroup.create(device.createBindGroup(desc));\n    };\n    var _wgpuDeviceCreateBindGroupLayout = (deviceId, descriptor) => {\n        assert(descriptor);\n        assert(HEAPU32[descriptor >> 2] === 0);\n        function makeBufferEntry(entryPtr) {\n            assert(entryPtr);\n            var typeInt = HEAPU32[(entryPtr + 4) >> 2];\n            if (!typeInt) return undefined;\n            return {\n                type: WebGPU.BufferBindingType[typeInt],\n                hasDynamicOffset: !!HEAPU32[(entryPtr + 8) >> 2],\n                minBindingSize:\n                    HEAPU32[(entryPtr + 4 + 16) >> 2] * 4294967296 + HEAPU32[(entryPtr + 16) >> 2],\n            };\n        }\n        function makeSamplerEntry(entryPtr) {\n            assert(entryPtr);\n            var typeInt = HEAPU32[(entryPtr + 4) >> 2];\n            if (!typeInt) return undefined;\n            return { type: WebGPU.SamplerBindingType[typeInt] };\n        }\n        function makeTextureEntry(entryPtr) {\n            assert(entryPtr);\n            var sampleTypeInt = HEAPU32[(entryPtr + 4) >> 2];\n            if (!sampleTypeInt) return undefined;\n            return {\n                sampleType: WebGPU.TextureSampleType[sampleTypeInt],\n                viewDimension: WebGPU.TextureViewDimension[HEAPU32[(entryPtr + 8) >> 2]],\n                multisampled: !!HEAPU32[(entryPtr + 12) >> 2],\n            };\n        }\n        function makeStorageTextureEntry(entryPtr) {\n            assert(entryPtr);\n            var accessInt = HEAPU32[(entryPtr + 4) >> 2];\n            if (!accessInt) return undefined;\n            return {\n                access: WebGPU.StorageTextureAccess[accessInt],\n                format: WebGPU.TextureFormat[HEAPU32[(entryPtr + 8) >> 2]],\n                viewDimension: WebGPU.TextureViewDimension[HEAPU32[(entryPtr + 12) >> 2]],\n            };\n        }\n        function makeEntry(entryPtr) {\n            assert(entryPtr);\n            return {\n                binding: HEAPU32[(entryPtr + 4) >> 2],\n                visibility: HEAPU32[(entryPtr + 8) >> 2],\n                buffer: makeBufferEntry(entryPtr + 16),\n                sampler: makeSamplerEntry(entryPtr + 40),\n                texture: makeTextureEntry(entryPtr + 48),\n                storageTexture: makeStorageTextureEntry(entryPtr + 64),\n            };\n        }\n        function makeEntries(count, entriesPtrs) {\n            var entries = [];\n            for (var i = 0; i < count; ++i) {\n                entries.push(makeEntry(entriesPtrs + 80 * i));\n            }\n            return entries;\n        }\n        var desc = {\n            entries: makeEntries(HEAPU32[(descriptor + 8) >> 2], HEAPU32[(descriptor + 12) >> 2]),\n        };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrBindGroupLayout.create(device.createBindGroupLayout(desc));\n    };\n    var _wgpuDeviceCreateBuffer = (deviceId, descriptor) => {\n        assert(descriptor);\n        assert(HEAPU32[descriptor >> 2] === 0);\n        var mappedAtCreation = !!HEAPU32[(descriptor + 24) >> 2];\n        var desc = {\n            label: undefined,\n            usage: HEAPU32[(descriptor + 8) >> 2],\n            size:\n                HEAPU32[(descriptor + 4 + 16) >> 2] * 4294967296 + HEAPU32[(descriptor + 16) >> 2],\n            mappedAtCreation,\n        };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        var device = WebGPU.mgrDevice.get(deviceId);\n        var bufferWrapper = {};\n        var id = WebGPU.mgrBuffer.create(device.createBuffer(desc), bufferWrapper);\n        if (mappedAtCreation) {\n            bufferWrapper.mapMode = 2;\n            bufferWrapper.onUnmap = [];\n        }\n        return id;\n    };\n    var _wgpuDeviceCreatePipelineLayout = (deviceId, descriptor) => {\n        assert(descriptor);\n        assert(HEAPU32[descriptor >> 2] === 0);\n        var bglCount = HEAPU32[(descriptor + 8) >> 2];\n        var bglPtr = HEAPU32[(descriptor + 12) >> 2];\n        var bgls = [];\n        for (var i = 0; i < bglCount; ++i) {\n            bgls.push(WebGPU.mgrBindGroupLayout.get(HEAPU32[(bglPtr + 4 * i) >> 2]));\n        }\n        var desc = { label: undefined, bindGroupLayouts: bgls };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrPipelineLayout.create(device.createPipelineLayout(desc));\n    };\n    var generateRenderPipelineDesc = (descriptor) => {\n        assert(descriptor);\n        assert(HEAPU32[descriptor >> 2] === 0);\n        function makePrimitiveState(rsPtr) {\n            if (!rsPtr) return undefined;\n            assert(rsPtr);\n            var nextInChainPtr = HEAPU32[rsPtr >> 2];\n            var sType = nextInChainPtr ? HEAPU32[(nextInChainPtr + 4) >> 2] : 0;\n            return {\n                topology: WebGPU.PrimitiveTopology[HEAPU32[(rsPtr + 4) >> 2]],\n                stripIndexFormat: WebGPU.IndexFormat[HEAPU32[(rsPtr + 8) >> 2]],\n                frontFace: WebGPU.FrontFace[HEAPU32[(rsPtr + 12) >> 2]],\n                cullMode: WebGPU.CullMode[HEAPU32[(rsPtr + 16) >> 2]],\n                unclippedDepth: sType === 7 && !!HEAPU32[(nextInChainPtr + 8) >> 2],\n            };\n        }\n        function makeBlendComponent(bdPtr) {\n            if (!bdPtr) return undefined;\n            return {\n                operation: WebGPU.BlendOperation[HEAPU32[bdPtr >> 2]],\n                srcFactor: WebGPU.BlendFactor[HEAPU32[(bdPtr + 4) >> 2]],\n                dstFactor: WebGPU.BlendFactor[HEAPU32[(bdPtr + 8) >> 2]],\n            };\n        }\n        function makeBlendState(bsPtr) {\n            if (!bsPtr) return undefined;\n            return { alpha: makeBlendComponent(bsPtr + 12), color: makeBlendComponent(bsPtr + 0) };\n        }\n        function makeColorState(csPtr) {\n            assert(csPtr);\n            assert(HEAPU32[csPtr >> 2] === 0);\n            var formatInt = HEAPU32[(csPtr + 4) >> 2];\n            return formatInt === 0\n                ? undefined\n                : {\n                      format: WebGPU.TextureFormat[formatInt],\n                      blend: makeBlendState(HEAPU32[(csPtr + 8) >> 2]),\n                      writeMask: HEAPU32[(csPtr + 12) >> 2],\n                  };\n        }\n        function makeColorStates(count, csArrayPtr) {\n            var states = [];\n            for (var i = 0; i < count; ++i) {\n                states.push(makeColorState(csArrayPtr + 16 * i));\n            }\n            return states;\n        }\n        function makeStencilStateFace(ssfPtr) {\n            assert(ssfPtr);\n            return {\n                compare: WebGPU.CompareFunction[HEAPU32[ssfPtr >> 2]],\n                failOp: WebGPU.StencilOperation[HEAPU32[(ssfPtr + 4) >> 2]],\n                depthFailOp: WebGPU.StencilOperation[HEAPU32[(ssfPtr + 8) >> 2]],\n                passOp: WebGPU.StencilOperation[HEAPU32[(ssfPtr + 12) >> 2]],\n            };\n        }\n        function makeDepthStencilState(dssPtr) {\n            if (!dssPtr) return undefined;\n            assert(dssPtr);\n            return {\n                format: WebGPU.TextureFormat[HEAPU32[(dssPtr + 4) >> 2]],\n                depthWriteEnabled: !!HEAPU32[(dssPtr + 8) >> 2],\n                depthCompare: WebGPU.CompareFunction[HEAPU32[(dssPtr + 12) >> 2]],\n                stencilFront: makeStencilStateFace(dssPtr + 16),\n                stencilBack: makeStencilStateFace(dssPtr + 32),\n                stencilReadMask: HEAPU32[(dssPtr + 48) >> 2],\n                stencilWriteMask: HEAPU32[(dssPtr + 52) >> 2],\n                depthBias: HEAP32[(dssPtr + 56) >> 2],\n                depthBiasSlopeScale: HEAPF32[(dssPtr + 60) >> 2],\n                depthBiasClamp: HEAPF32[(dssPtr + 64) >> 2],\n            };\n        }\n        function makeVertexAttribute(vaPtr) {\n            assert(vaPtr);\n            return {\n                format: WebGPU.VertexFormat[HEAPU32[vaPtr >> 2]],\n                offset: HEAPU32[(vaPtr + 4 + 8) >> 2] * 4294967296 + HEAPU32[(vaPtr + 8) >> 2],\n                shaderLocation: HEAPU32[(vaPtr + 16) >> 2],\n            };\n        }\n        function makeVertexAttributes(count, vaArrayPtr) {\n            var vas = [];\n            for (var i = 0; i < count; ++i) {\n                vas.push(makeVertexAttribute(vaArrayPtr + i * 24));\n            }\n            return vas;\n        }\n        function makeVertexBuffer(vbPtr) {\n            if (!vbPtr) return undefined;\n            var stepModeInt = HEAPU32[(vbPtr + 8) >> 2];\n            return stepModeInt === 1\n                ? null\n                : {\n                      arrayStride: HEAPU32[(vbPtr + 4) >> 2] * 4294967296 + HEAPU32[vbPtr >> 2],\n                      stepMode: WebGPU.VertexStepMode[stepModeInt],\n                      attributes: makeVertexAttributes(\n                          HEAPU32[(vbPtr + 12) >> 2],\n                          HEAPU32[(vbPtr + 16) >> 2],\n                      ),\n                  };\n        }\n        function makeVertexBuffers(count, vbArrayPtr) {\n            if (!count) return undefined;\n            var vbs = [];\n            for (var i = 0; i < count; ++i) {\n                vbs.push(makeVertexBuffer(vbArrayPtr + i * 24));\n            }\n            return vbs;\n        }\n        function makeVertexState(viPtr) {\n            if (!viPtr) return undefined;\n            assert(viPtr);\n            assert(HEAPU32[viPtr >> 2] === 0);\n            var desc = {\n                module: WebGPU.mgrShaderModule.get(HEAPU32[(viPtr + 4) >> 2]),\n                constants: WebGPU.makePipelineConstants(\n                    HEAPU32[(viPtr + 12) >> 2],\n                    HEAPU32[(viPtr + 16) >> 2],\n                ),\n                buffers: makeVertexBuffers(HEAPU32[(viPtr + 20) >> 2], HEAPU32[(viPtr + 24) >> 2]),\n            };\n            var entryPointPtr = HEAPU32[(viPtr + 8) >> 2];\n            if (entryPointPtr) desc[\"entryPoint\"] = UTF8ToString(entryPointPtr);\n            return desc;\n        }\n        function makeMultisampleState(msPtr) {\n            if (!msPtr) return undefined;\n            assert(msPtr);\n            assert(HEAPU32[msPtr >> 2] === 0);\n            return {\n                count: HEAPU32[(msPtr + 4) >> 2],\n                mask: HEAPU32[(msPtr + 8) >> 2],\n                alphaToCoverageEnabled: !!HEAPU32[(msPtr + 12) >> 2],\n            };\n        }\n        function makeFragmentState(fsPtr) {\n            if (!fsPtr) return undefined;\n            assert(fsPtr);\n            assert(HEAPU32[fsPtr >> 2] === 0);\n            var desc = {\n                module: WebGPU.mgrShaderModule.get(HEAPU32[(fsPtr + 4) >> 2]),\n                constants: WebGPU.makePipelineConstants(\n                    HEAPU32[(fsPtr + 12) >> 2],\n                    HEAPU32[(fsPtr + 16) >> 2],\n                ),\n                targets: makeColorStates(HEAPU32[(fsPtr + 20) >> 2], HEAPU32[(fsPtr + 24) >> 2]),\n            };\n            var entryPointPtr = HEAPU32[(fsPtr + 8) >> 2];\n            if (entryPointPtr) desc[\"entryPoint\"] = UTF8ToString(entryPointPtr);\n            return desc;\n        }\n        var desc = {\n            label: undefined,\n            layout: WebGPU.makePipelineLayout(HEAPU32[(descriptor + 8) >> 2]),\n            vertex: makeVertexState(descriptor + 12),\n            primitive: makePrimitiveState(descriptor + 40),\n            depthStencil: makeDepthStencilState(HEAPU32[(descriptor + 60) >> 2]),\n            multisample: makeMultisampleState(descriptor + 64),\n            fragment: makeFragmentState(HEAPU32[(descriptor + 80) >> 2]),\n        };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        return desc;\n    };\n    var _wgpuDeviceCreateRenderPipeline = (deviceId, descriptor) => {\n        var desc = generateRenderPipelineDesc(descriptor);\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrRenderPipeline.create(device.createRenderPipeline(desc));\n    };\n    var _wgpuDeviceCreateSampler = (deviceId, descriptor) => {\n        var desc;\n        if (descriptor) {\n            assert(descriptor);\n            assert(HEAPU32[descriptor >> 2] === 0);\n            desc = {\n                label: undefined,\n                addressModeU: WebGPU.AddressMode[HEAPU32[(descriptor + 8) >> 2]],\n                addressModeV: WebGPU.AddressMode[HEAPU32[(descriptor + 12) >> 2]],\n                addressModeW: WebGPU.AddressMode[HEAPU32[(descriptor + 16) >> 2]],\n                magFilter: WebGPU.FilterMode[HEAPU32[(descriptor + 20) >> 2]],\n                minFilter: WebGPU.FilterMode[HEAPU32[(descriptor + 24) >> 2]],\n                mipmapFilter: WebGPU.MipmapFilterMode[HEAPU32[(descriptor + 28) >> 2]],\n                lodMinClamp: HEAPF32[(descriptor + 32) >> 2],\n                lodMaxClamp: HEAPF32[(descriptor + 36) >> 2],\n                compare: WebGPU.CompareFunction[HEAPU32[(descriptor + 40) >> 2]],\n            };\n            var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n            if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        }\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrSampler.create(device.createSampler(desc));\n    };\n    var _wgpuDeviceCreateShaderModule = (deviceId, descriptor) => {\n        assert(descriptor);\n        var nextInChainPtr = HEAPU32[descriptor >> 2];\n        assert(nextInChainPtr !== 0);\n        var sType = HEAPU32[(nextInChainPtr + 4) >> 2];\n        var desc = { label: undefined, code: \"\" };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        switch (sType) {\n            case 5: {\n                var count = HEAPU32[(nextInChainPtr + 8) >> 2];\n                var start = HEAPU32[(nextInChainPtr + 12) >> 2];\n                var offset = start >> 2;\n                desc[\"code\"] = HEAPU32.subarray(offset, offset + count);\n                break;\n            }\n            case 6: {\n                var sourcePtr = HEAPU32[(nextInChainPtr + 8) >> 2];\n                if (sourcePtr) {\n                    desc[\"code\"] = UTF8ToString(sourcePtr);\n                }\n                break;\n            }\n            default:\n                abort(\"unrecognized ShaderModule sType\");\n        }\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrShaderModule.create(device.createShaderModule(desc));\n    };\n    var _wgpuDeviceCreateTexture = (deviceId, descriptor) => {\n        assert(descriptor);\n        assert(HEAPU32[descriptor >> 2] === 0);\n        var desc = {\n            label: undefined,\n            size: WebGPU.makeExtent3D(descriptor + 16),\n            mipLevelCount: HEAPU32[(descriptor + 32) >> 2],\n            sampleCount: HEAPU32[(descriptor + 36) >> 2],\n            dimension: WebGPU.TextureDimension[HEAPU32[(descriptor + 12) >> 2]],\n            format: WebGPU.TextureFormat[HEAPU32[(descriptor + 28) >> 2]],\n            usage: HEAPU32[(descriptor + 8) >> 2],\n        };\n        var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n        if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        var viewFormatCount = HEAPU32[(descriptor + 40) >> 2];\n        if (viewFormatCount) {\n            var viewFormatsPtr = HEAPU32[(descriptor + 44) >> 2];\n            desc[\"viewFormats\"] = Array.from(\n                HEAP32.subarray(viewFormatsPtr >> 2, (viewFormatsPtr + viewFormatCount * 4) >> 2),\n                (format) => WebGPU.TextureFormat[format],\n            );\n        }\n        var device = WebGPU.mgrDevice.get(deviceId);\n        return WebGPU.mgrTexture.create(device.createTexture(desc));\n    };\n    var _wgpuDeviceGetQueue = (deviceId) => {\n        var queueId = WebGPU.mgrDevice.objects[deviceId].queueId;\n        assert(queueId, \"wgpuDeviceGetQueue: queue was missing or null\");\n        WebGPU.mgrQueue.reference(queueId);\n        return queueId;\n    };\n    var _wgpuPipelineLayoutRelease = (id) => WebGPU.mgrPipelineLayout.release(id);\n    var _wgpuQueueRelease = (id) => WebGPU.mgrQueue.release(id);\n    function _wgpuQueueWriteBuffer(queueId, bufferId, bufferOffset, data, size) {\n        bufferOffset = bigintToI53Checked(bufferOffset);\n        var queue = WebGPU.mgrQueue.get(queueId);\n        var buffer = WebGPU.mgrBuffer.get(bufferId);\n        var subarray = HEAPU8.subarray(data, data + size);\n        queue.writeBuffer(buffer, bufferOffset, subarray, 0, size);\n    }\n    var _wgpuQueueWriteTexture = (\n        queueId,\n        destinationPtr,\n        data,\n        dataSize,\n        dataLayoutPtr,\n        writeSizePtr,\n    ) => {\n        var queue = WebGPU.mgrQueue.get(queueId);\n        var destination = WebGPU.makeImageCopyTexture(destinationPtr);\n        var dataLayout = WebGPU.makeTextureDataLayout(dataLayoutPtr);\n        var writeSize = WebGPU.makeExtent3D(writeSizePtr);\n        var subarray = HEAPU8.subarray(data, data + dataSize);\n        queue.writeTexture(destination, subarray, dataLayout, writeSize);\n    };\n    var _wgpuRenderPassEncoderDrawIndexed = (\n        passId,\n        indexCount,\n        instanceCount,\n        firstIndex,\n        baseVertex,\n        firstInstance,\n    ) => {\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        pass.drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);\n    };\n    var _wgpuRenderPassEncoderSetBindGroup = (\n        passId,\n        groupIndex,\n        groupId,\n        dynamicOffsetCount,\n        dynamicOffsetsPtr,\n    ) => {\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        var group = WebGPU.mgrBindGroup.get(groupId);\n        if (dynamicOffsetCount == 0) {\n            pass.setBindGroup(groupIndex, group);\n        } else {\n            var offsets = [];\n            for (var i = 0; i < dynamicOffsetCount; i++, dynamicOffsetsPtr += 4) {\n                offsets.push(HEAPU32[dynamicOffsetsPtr >> 2]);\n            }\n            pass.setBindGroup(groupIndex, group, offsets);\n        }\n    };\n    var _wgpuRenderPassEncoderSetBlendConstant = (passId, colorPtr) => {\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        var color = WebGPU.makeColor(colorPtr);\n        pass.setBlendConstant(color);\n    };\n    function _wgpuRenderPassEncoderSetIndexBuffer(passId, bufferId, format, offset, size) {\n        offset = bigintToI53Checked(offset);\n        size = bigintToI53Checked(size);\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        var buffer = WebGPU.mgrBuffer.get(bufferId);\n        if (size == -1) size = undefined;\n        pass.setIndexBuffer(buffer, WebGPU.IndexFormat[format], offset, size);\n    }\n    var _wgpuRenderPassEncoderSetPipeline = (passId, pipelineId) => {\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        var pipeline = WebGPU.mgrRenderPipeline.get(pipelineId);\n        pass.setPipeline(pipeline);\n    };\n    var _wgpuRenderPassEncoderSetScissorRect = (passId, x, y, w, h) => {\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        pass.setScissorRect(x, y, w, h);\n    };\n    function _wgpuRenderPassEncoderSetVertexBuffer(passId, slot, bufferId, offset, size) {\n        offset = bigintToI53Checked(offset);\n        size = bigintToI53Checked(size);\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        var buffer = WebGPU.mgrBuffer.get(bufferId);\n        if (size == -1) size = undefined;\n        pass.setVertexBuffer(slot, buffer, offset, size);\n    }\n    var _wgpuRenderPassEncoderSetViewport = (passId, x, y, w, h, minDepth, maxDepth) => {\n        var pass = WebGPU.mgrRenderPassEncoder.get(passId);\n        pass.setViewport(x, y, w, h, minDepth, maxDepth);\n    };\n    var _wgpuRenderPipelineRelease = (id) => WebGPU.mgrRenderPipeline.release(id);\n    var _wgpuSamplerRelease = (id) => WebGPU.mgrSampler.release(id);\n    var _wgpuShaderModuleRelease = (id) => WebGPU.mgrShaderModule.release(id);\n    var _wgpuTextureCreateView = (textureId, descriptor) => {\n        var desc;\n        if (descriptor) {\n            assert(descriptor);\n            assert(HEAPU32[descriptor >> 2] === 0);\n            var mipLevelCount = HEAPU32[(descriptor + 20) >> 2];\n            var arrayLayerCount = HEAPU32[(descriptor + 28) >> 2];\n            desc = {\n                format: WebGPU.TextureFormat[HEAPU32[(descriptor + 8) >> 2]],\n                dimension: WebGPU.TextureViewDimension[HEAPU32[(descriptor + 12) >> 2]],\n                baseMipLevel: HEAPU32[(descriptor + 16) >> 2],\n                mipLevelCount: mipLevelCount === 4294967295 ? undefined : mipLevelCount,\n                baseArrayLayer: HEAPU32[(descriptor + 24) >> 2],\n                arrayLayerCount: arrayLayerCount === 4294967295 ? undefined : arrayLayerCount,\n                aspect: WebGPU.TextureAspect[HEAPU32[(descriptor + 32) >> 2]],\n            };\n            var labelPtr = HEAPU32[(descriptor + 4) >> 2];\n            if (labelPtr) desc[\"label\"] = UTF8ToString(labelPtr);\n        }\n        var texture = WebGPU.mgrTexture.get(textureId);\n        return WebGPU.mgrTextureView.create(texture.createView(desc));\n    };\n    var _wgpuTextureRelease = (id) => WebGPU.mgrTexture.release(id);\n    var _wgpuTextureViewRelease = (id) => WebGPU.mgrTextureView.release(id);\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n    init_ClassHandle();\n    init_RegisteredPointer();\n    assert(emval_handles.length === 5 * 2);\n    WebGPU.initManagers();\n    {\n        if (Module[\"noExitRuntime\"]) noExitRuntime = Module[\"noExitRuntime\"];\n        if (Module[\"preloadPlugins\"]) preloadPlugins = Module[\"preloadPlugins\"];\n        if (Module[\"print\"]) out = Module[\"print\"];\n        if (Module[\"printErr\"]) err = Module[\"printErr\"];\n        if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n        checkIncomingModuleAPI();\n        if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        assert(\n            typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\",\n            \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\",\n        );\n        assert(\n            typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\",\n            \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\",\n        );\n        assert(\n            typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\",\n            \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\",\n        );\n        assert(\n            typeof Module[\"filePackagePrefixURL\"] == \"undefined\",\n            \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\",\n        );\n        assert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed\");\n        assert(\n            typeof Module[\"readAsync\"] == \"undefined\",\n            \"Module.readAsync option was removed (modify readAsync in JS)\",\n        );\n        assert(\n            typeof Module[\"readBinary\"] == \"undefined\",\n            \"Module.readBinary option was removed (modify readBinary in JS)\",\n        );\n        assert(\n            typeof Module[\"setWindowTitle\"] == \"undefined\",\n            \"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)\",\n        );\n        assert(\n            typeof Module[\"TOTAL_MEMORY\"] == \"undefined\",\n            \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\",\n        );\n        assert(\n            typeof Module[\"ENVIRONMENT\"] == \"undefined\",\n            \"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\",\n        );\n        assert(\n            typeof Module[\"STACK_SIZE\"] == \"undefined\",\n            \"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\",\n        );\n        assert(\n            typeof Module[\"wasmMemory\"] == \"undefined\",\n            \"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\",\n        );\n        assert(\n            typeof Module[\"INITIAL_MEMORY\"] == \"undefined\",\n            \"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\",\n        );\n    }\n    Module[\"FS\"] = FS;\n    Module[\"MEMFS\"] = MEMFS;\n    Module[\"WebGPU\"] = WebGPU;\n    Module[\"JsValStore\"] = JsValStore;\n    var missingLibrarySymbols = [\n        \"writeI53ToI64\",\n        \"writeI53ToI64Clamped\",\n        \"writeI53ToI64Signaling\",\n        \"writeI53ToU64Clamped\",\n        \"writeI53ToU64Signaling\",\n        \"readI53FromU64\",\n        \"convertI32PairToI53\",\n        \"convertI32PairToI53Checked\",\n        \"convertU32PairToI53\",\n        \"getTempRet0\",\n        \"setTempRet0\",\n        \"withStackSave\",\n        \"inetPton4\",\n        \"inetNtop4\",\n        \"inetPton6\",\n        \"inetNtop6\",\n        \"readSockaddr\",\n        \"writeSockaddr\",\n        \"readEmAsmArgs\",\n        \"jstoi_q\",\n        \"autoResumeAudioContext\",\n        \"getDynCaller\",\n        \"dynCall\",\n        \"setWasmTableEntry\",\n        \"runtimeKeepalivePush\",\n        \"runtimeKeepalivePop\",\n        \"asmjsMangle\",\n        \"HandleAllocator\",\n        \"getNativeTypeSize\",\n        \"addOnInit\",\n        \"addOnPostCtor\",\n        \"addOnPreMain\",\n        \"addOnExit\",\n        \"STACK_SIZE\",\n        \"STACK_ALIGN\",\n        \"POINTER_SIZE\",\n        \"ASSERTIONS\",\n        \"ccall\",\n        \"cwrap\",\n        \"convertJsFunctionToWasm\",\n        \"getEmptyTableSlot\",\n        \"updateTableMap\",\n        \"getFunctionAddress\",\n        \"addFunction\",\n        \"removeFunction\",\n        \"intArrayToString\",\n        \"stringToAscii\",\n        \"stringToNewUTF8\",\n        \"writeArrayToMemory\",\n        \"registerKeyEventCallback\",\n        \"maybeCStringToJsString\",\n        \"findEventTarget\",\n        \"getBoundingClientRect\",\n        \"fillMouseEventData\",\n        \"registerMouseEventCallback\",\n        \"registerWheelEventCallback\",\n        \"registerUiEventCallback\",\n        \"registerFocusEventCallback\",\n        \"fillDeviceOrientationEventData\",\n        \"registerDeviceOrientationEventCallback\",\n        \"fillDeviceMotionEventData\",\n        \"registerDeviceMotionEventCallback\",\n        \"screenOrientation\",\n        \"fillOrientationChangeEventData\",\n        \"registerOrientationChangeEventCallback\",\n        \"fillFullscreenChangeEventData\",\n        \"registerFullscreenChangeEventCallback\",\n        \"JSEvents_requestFullscreen\",\n        \"JSEvents_resizeCanvasForFullscreen\",\n        \"registerRestoreOldStyle\",\n        \"hideEverythingExceptGivenElement\",\n        \"restoreHiddenElements\",\n        \"setLetterbox\",\n        \"softFullscreenResizeWebGLRenderTarget\",\n        \"doRequestFullscreen\",\n        \"fillPointerlockChangeEventData\",\n        \"registerPointerlockChangeEventCallback\",\n        \"registerPointerlockErrorEventCallback\",\n        \"requestPointerLock\",\n        \"fillVisibilityChangeEventData\",\n        \"registerVisibilityChangeEventCallback\",\n        \"registerTouchEventCallback\",\n        \"fillGamepadEventData\",\n        \"registerGamepadEventCallback\",\n        \"registerBeforeUnloadEventCallback\",\n        \"fillBatteryEventData\",\n        \"registerBatteryEventCallback\",\n        \"setCanvasElementSize\",\n        \"getCanvasElementSize\",\n        \"jsStackTrace\",\n        \"getCallstack\",\n        \"convertPCtoSourceLocation\",\n        \"checkWasiClock\",\n        \"wasiRightsToMuslOFlags\",\n        \"wasiOFlagsToMuslOFlags\",\n        \"safeSetTimeout\",\n        \"setImmediateWrapped\",\n        \"safeRequestAnimationFrame\",\n        \"clearImmediateWrapped\",\n        \"registerPostMainLoop\",\n        \"registerPreMainLoop\",\n        \"getPromise\",\n        \"makePromise\",\n        \"idsToPromises\",\n        \"makePromiseCallback\",\n        \"findMatchingCatch\",\n        \"Browser_asyncPrepareDataCounter\",\n        \"isLeapYear\",\n        \"ydayFromDate\",\n        \"arraySum\",\n        \"addDays\",\n        \"getSocketFromFD\",\n        \"getSocketAddress\",\n        \"FS_mkdirTree\",\n        \"_setNetworkCallback\",\n        \"heapObjectForWebGLType\",\n        \"toTypedArrayIndex\",\n        \"webgl_enable_ANGLE_instanced_arrays\",\n        \"webgl_enable_OES_vertex_array_object\",\n        \"webgl_enable_WEBGL_draw_buffers\",\n        \"webgl_enable_WEBGL_multi_draw\",\n        \"webgl_enable_EXT_polygon_offset_clamp\",\n        \"webgl_enable_EXT_clip_control\",\n        \"webgl_enable_WEBGL_polygon_mode\",\n        \"emscriptenWebGLGet\",\n        \"computeUnpackAlignedImageSize\",\n        \"colorChannelsInGlTextureFormat\",\n        \"emscriptenWebGLGetTexPixelData\",\n        \"emscriptenWebGLGetUniform\",\n        \"webglGetUniformLocation\",\n        \"webglPrepareUniformLocationsBeforeFirstUse\",\n        \"webglGetLeftBracePos\",\n        \"emscriptenWebGLGetVertexAttrib\",\n        \"__glGetActiveAttribOrUniform\",\n        \"writeGLArray\",\n        \"registerWebGlEventCallback\",\n        \"runAndAbortIfError\",\n        \"ALLOC_NORMAL\",\n        \"ALLOC_STACK\",\n        \"allocate\",\n        \"writeStringToMemory\",\n        \"writeAsciiToMemory\",\n        \"demangle\",\n        \"stackTrace\",\n        \"getFunctionArgsName\",\n        \"createJsInvokerSignature\",\n        \"PureVirtualError\",\n        \"registerInheritedInstance\",\n        \"unregisterInheritedInstance\",\n        \"getInheritedInstanceCount\",\n        \"getLiveInheritedInstances\",\n        \"enumReadValueFromPointer\",\n        \"setDelayFunction\",\n        \"validateThis\",\n        \"count_emval_handles\",\n    ];\n    missingLibrarySymbols.forEach(missingLibrarySymbol);\n    var unexportedSymbols = [\n        \"run\",\n        \"addRunDependency\",\n        \"removeRunDependency\",\n        \"out\",\n        \"err\",\n        \"callMain\",\n        \"abort\",\n        \"wasmMemory\",\n        \"wasmExports\",\n        \"HEAPF32\",\n        \"HEAPF64\",\n        \"HEAP8\",\n        \"HEAPU8\",\n        \"HEAP16\",\n        \"HEAPU16\",\n        \"HEAP32\",\n        \"HEAPU32\",\n        \"HEAP64\",\n        \"HEAPU64\",\n        \"writeStackCookie\",\n        \"checkStackCookie\",\n        \"readI53FromI64\",\n        \"INT53_MAX\",\n        \"INT53_MIN\",\n        \"bigintToI53Checked\",\n        \"stackSave\",\n        \"stackRestore\",\n        \"stackAlloc\",\n        \"ptrToString\",\n        \"zeroMemory\",\n        \"exitJS\",\n        \"getHeapMax\",\n        \"growMemory\",\n        \"ENV\",\n        \"ERRNO_CODES\",\n        \"strError\",\n        \"DNS\",\n        \"Protocols\",\n        \"Sockets\",\n        \"timers\",\n        \"warnOnce\",\n        \"readEmAsmArgsArray\",\n        \"getExecutableName\",\n        \"getWasmTableEntry\",\n        \"handleException\",\n        \"keepRuntimeAlive\",\n        \"callUserCallback\",\n        \"maybeExit\",\n        \"asyncLoad\",\n        \"alignMemory\",\n        \"mmapAlloc\",\n        \"wasmTable\",\n        \"getUniqueRunDependency\",\n        \"noExitRuntime\",\n        \"addOnPreRun\",\n        \"addOnPostRun\",\n        \"freeTableIndexes\",\n        \"functionsInTableMap\",\n        \"setValue\",\n        \"getValue\",\n        \"PATH\",\n        \"PATH_FS\",\n        \"UTF8Decoder\",\n        \"UTF8ArrayToString\",\n        \"UTF8ToString\",\n        \"stringToUTF8Array\",\n        \"stringToUTF8\",\n        \"lengthBytesUTF8\",\n        \"intArrayFromString\",\n        \"AsciiToString\",\n        \"UTF16Decoder\",\n        \"UTF16ToString\",\n        \"stringToUTF16\",\n        \"lengthBytesUTF16\",\n        \"UTF32ToString\",\n        \"stringToUTF32\",\n        \"lengthBytesUTF32\",\n        \"stringToUTF8OnStack\",\n        \"JSEvents\",\n        \"specialHTMLTargets\",\n        \"findCanvasEventTarget\",\n        \"currentFullscreenStrategy\",\n        \"restoreOldWindowedStyle\",\n        \"UNWIND_CACHE\",\n        \"ExitStatus\",\n        \"getEnvStrings\",\n        \"doReadv\",\n        \"doWritev\",\n        \"initRandomFill\",\n        \"randomFill\",\n        \"emSetImmediate\",\n        \"emClearImmediate_deps\",\n        \"emClearImmediate\",\n        \"promiseMap\",\n        \"uncaughtExceptionCount\",\n        \"exceptionLast\",\n        \"exceptionCaught\",\n        \"ExceptionInfo\",\n        \"Browser\",\n        \"requestFullscreen\",\n        \"requestFullScreen\",\n        \"setCanvasSize\",\n        \"getUserMedia\",\n        \"createContext\",\n        \"getPreloadedImageData__data\",\n        \"wget\",\n        \"MONTH_DAYS_REGULAR\",\n        \"MONTH_DAYS_LEAP\",\n        \"MONTH_DAYS_REGULAR_CUMULATIVE\",\n        \"MONTH_DAYS_LEAP_CUMULATIVE\",\n        \"SYSCALLS\",\n        \"preloadPlugins\",\n        \"FS_createPreloadedFile\",\n        \"FS_modeStringToFlags\",\n        \"FS_getMode\",\n        \"FS_stdin_getChar_buffer\",\n        \"FS_stdin_getChar\",\n        \"FS_unlink\",\n        \"FS_createPath\",\n        \"FS_createDevice\",\n        \"FS_readFile\",\n        \"FS_root\",\n        \"FS_mounts\",\n        \"FS_devices\",\n        \"FS_streams\",\n        \"FS_nextInode\",\n        \"FS_nameTable\",\n        \"FS_currentPath\",\n        \"FS_initialized\",\n        \"FS_ignorePermissions\",\n        \"FS_filesystems\",\n        \"FS_syncFSRequests\",\n        \"FS_readFiles\",\n        \"FS_lookupPath\",\n        \"FS_getPath\",\n        \"FS_hashName\",\n        \"FS_hashAddNode\",\n        \"FS_hashRemoveNode\",\n        \"FS_lookupNode\",\n        \"FS_createNode\",\n        \"FS_destroyNode\",\n        \"FS_isRoot\",\n        \"FS_isMountpoint\",\n        \"FS_isFile\",\n        \"FS_isDir\",\n        \"FS_isLink\",\n        \"FS_isChrdev\",\n        \"FS_isBlkdev\",\n        \"FS_isFIFO\",\n        \"FS_isSocket\",\n        \"FS_flagsToPermissionString\",\n        \"FS_nodePermissions\",\n        \"FS_mayLookup\",\n        \"FS_mayCreate\",\n        \"FS_mayDelete\",\n        \"FS_mayOpen\",\n        \"FS_checkOpExists\",\n        \"FS_nextfd\",\n        \"FS_getStreamChecked\",\n        \"FS_getStream\",\n        \"FS_createStream\",\n        \"FS_closeStream\",\n        \"FS_dupStream\",\n        \"FS_doSetAttr\",\n        \"FS_chrdev_stream_ops\",\n        \"FS_major\",\n        \"FS_minor\",\n        \"FS_makedev\",\n        \"FS_registerDevice\",\n        \"FS_getDevice\",\n        \"FS_getMounts\",\n        \"FS_syncfs\",\n        \"FS_mount\",\n        \"FS_unmount\",\n        \"FS_lookup\",\n        \"FS_mknod\",\n        \"FS_statfs\",\n        \"FS_statfsStream\",\n        \"FS_statfsNode\",\n        \"FS_create\",\n        \"FS_mkdir\",\n        \"FS_mkdev\",\n        \"FS_symlink\",\n        \"FS_rename\",\n        \"FS_rmdir\",\n        \"FS_readdir\",\n        \"FS_readlink\",\n        \"FS_stat\",\n        \"FS_fstat\",\n        \"FS_lstat\",\n        \"FS_doChmod\",\n        \"FS_chmod\",\n        \"FS_lchmod\",\n        \"FS_fchmod\",\n        \"FS_doChown\",\n        \"FS_chown\",\n        \"FS_lchown\",\n        \"FS_fchown\",\n        \"FS_doTruncate\",\n        \"FS_truncate\",\n        \"FS_ftruncate\",\n        \"FS_utime\",\n        \"FS_open\",\n        \"FS_close\",\n        \"FS_isClosed\",\n        \"FS_llseek\",\n        \"FS_read\",\n        \"FS_write\",\n        \"FS_mmap\",\n        \"FS_msync\",\n        \"FS_ioctl\",\n        \"FS_writeFile\",\n        \"FS_cwd\",\n        \"FS_chdir\",\n        \"FS_createDefaultDirectories\",\n        \"FS_createDefaultDevices\",\n        \"FS_createSpecialDirectories\",\n        \"FS_createStandardStreams\",\n        \"FS_staticInit\",\n        \"FS_init\",\n        \"FS_quit\",\n        \"FS_findObject\",\n        \"FS_analyzePath\",\n        \"FS_createFile\",\n        \"FS_createDataFile\",\n        \"FS_forceLoadFile\",\n        \"FS_createLazyFile\",\n        \"FS_absolutePath\",\n        \"FS_createFolder\",\n        \"FS_createLink\",\n        \"FS_joinPath\",\n        \"FS_mmapAlloc\",\n        \"FS_standardizePath\",\n        \"TTY\",\n        \"PIPEFS\",\n        \"SOCKFS\",\n        \"tempFixedLengthArray\",\n        \"miniTempWebGLFloatBuffers\",\n        \"miniTempWebGLIntBuffers\",\n        \"GL\",\n        \"AL\",\n        \"GLUT\",\n        \"EGL\",\n        \"GLEW\",\n        \"IDBStore\",\n        \"SDL\",\n        \"SDL_gfx\",\n        \"allocateUTF8\",\n        \"allocateUTF8OnStack\",\n        \"print\",\n        \"printErr\",\n        \"jstoi_s\",\n        \"InternalError\",\n        \"BindingError\",\n        \"throwInternalError\",\n        \"throwBindingError\",\n        \"registeredTypes\",\n        \"awaitingDependencies\",\n        \"typeDependencies\",\n        \"tupleRegistrations\",\n        \"structRegistrations\",\n        \"sharedRegisterType\",\n        \"whenDependentTypesAreResolved\",\n        \"getTypeName\",\n        \"getFunctionName\",\n        \"heap32VectorToArray\",\n        \"requireRegisteredType\",\n        \"usesDestructorStack\",\n        \"checkArgCount\",\n        \"getRequiredArgCount\",\n        \"createJsInvoker\",\n        \"UnboundTypeError\",\n        \"EmValType\",\n        \"EmValOptionalType\",\n        \"throwUnboundTypeError\",\n        \"ensureOverloadTable\",\n        \"exposePublicSymbol\",\n        \"replacePublicSymbol\",\n        \"createNamedFunction\",\n        \"embindRepr\",\n        \"registeredInstances\",\n        \"getBasestPointer\",\n        \"getInheritedInstance\",\n        \"registeredPointers\",\n        \"registerType\",\n        \"integerReadValueFromPointer\",\n        \"floatReadValueFromPointer\",\n        \"assertIntegerRange\",\n        \"readPointer\",\n        \"runDestructors\",\n        \"craftInvokerFunction\",\n        \"embind__requireFunction\",\n        \"genericPointerToWireType\",\n        \"constNoSmartPtrRawPointerToWireType\",\n        \"nonConstNoSmartPtrRawPointerToWireType\",\n        \"init_RegisteredPointer\",\n        \"RegisteredPointer\",\n        \"RegisteredPointer_fromWireType\",\n        \"runDestructor\",\n        \"releaseClassHandle\",\n        \"finalizationRegistry\",\n        \"detachFinalizer_deps\",\n        \"detachFinalizer\",\n        \"attachFinalizer\",\n        \"makeClassHandle\",\n        \"init_ClassHandle\",\n        \"ClassHandle\",\n        \"throwInstanceAlreadyDeleted\",\n        \"deletionQueue\",\n        \"flushPendingDeletes\",\n        \"delayFunction\",\n        \"RegisteredClass\",\n        \"shallowCopyInternalPointer\",\n        \"downcastPointer\",\n        \"upcastPointer\",\n        \"char_0\",\n        \"char_9\",\n        \"makeLegalFunctionName\",\n        \"emval_freelist\",\n        \"emval_handles\",\n        \"emval_symbols\",\n        \"getStringOrSymbol\",\n        \"Emval\",\n        \"emval_get_global\",\n        \"emval_returnValue\",\n        \"emval_lookupTypes\",\n        \"emval_methodCallers\",\n        \"emval_addMethodCaller\",\n    ];\n    unexportedSymbols.forEach(unexportedRuntimeSymbol);\n    function checkIncomingModuleAPI() {\n        ignoredModuleProp(\"fetchSettings\");\n    }\n    var _emscripten_stack_get_base = makeInvalidEarlyAccess(\"_emscripten_stack_get_base\");\n    var _emscripten_stack_get_end = makeInvalidEarlyAccess(\"_emscripten_stack_get_end\");\n    var _emscripten_stack_get_current = makeInvalidEarlyAccess(\"_emscripten_stack_get_current\");\n    var _emscripten_stack_get_free = makeInvalidEarlyAccess(\"_emscripten_stack_get_free\");\n    var _malloc = makeInvalidEarlyAccess(\"_malloc\");\n    var _fflush = makeInvalidEarlyAccess(\"_fflush\");\n    var _free = makeInvalidEarlyAccess(\"_free\");\n    var ___getTypeName = makeInvalidEarlyAccess(\"___getTypeName\");\n    var _emscripten_builtin_memalign = makeInvalidEarlyAccess(\"_emscripten_builtin_memalign\");\n    var __emscripten_timeout = makeInvalidEarlyAccess(\"__emscripten_timeout\");\n    var _strerror = makeInvalidEarlyAccess(\"_strerror\");\n    var _memalign = makeInvalidEarlyAccess(\"_memalign\");\n    var _setThrew = makeInvalidEarlyAccess(\"_setThrew\");\n    var _emscripten_stack_init = makeInvalidEarlyAccess(\"_emscripten_stack_init\");\n    var __emscripten_stack_restore = makeInvalidEarlyAccess(\"__emscripten_stack_restore\");\n    var __emscripten_stack_alloc = makeInvalidEarlyAccess(\"__emscripten_stack_alloc\");\n    var ___cxa_increment_exception_refcount = makeInvalidEarlyAccess(\n        \"___cxa_increment_exception_refcount\",\n    );\n    function assignWasmExports(wasmExports) {\n        _emscripten_stack_get_base = wasmExports[\"emscripten_stack_get_base\"];\n        _emscripten_stack_get_end = wasmExports[\"emscripten_stack_get_end\"];\n        _emscripten_stack_get_current = wasmExports[\"emscripten_stack_get_current\"];\n        _emscripten_stack_get_free = wasmExports[\"emscripten_stack_get_free\"];\n        _malloc = createExportWrapper(\"malloc\", 1);\n        _fflush = createExportWrapper(\"fflush\", 1);\n        _free = createExportWrapper(\"free\", 1);\n        ___getTypeName = createExportWrapper(\"__getTypeName\", 1);\n        _emscripten_builtin_memalign = createExportWrapper(\"emscripten_builtin_memalign\", 2);\n        __emscripten_timeout = createExportWrapper(\"_emscripten_timeout\", 2);\n        _strerror = createExportWrapper(\"strerror\", 1);\n        _memalign = createExportWrapper(\"memalign\", 2);\n        _setThrew = createExportWrapper(\"setThrew\", 2);\n        _emscripten_stack_init = wasmExports[\"emscripten_stack_init\"];\n        __emscripten_stack_restore = wasmExports[\"_emscripten_stack_restore\"];\n        __emscripten_stack_alloc = wasmExports[\"_emscripten_stack_alloc\"];\n        ___cxa_increment_exception_refcount = createExportWrapper(\n            \"__cxa_increment_exception_refcount\",\n            1,\n        );\n    }\n    var wasmImports = {\n        __assert_fail: ___assert_fail,\n        __cxa_throw: ___cxa_throw,\n        __syscall_fcntl64: ___syscall_fcntl64,\n        __syscall_fstat64: ___syscall_fstat64,\n        __syscall_ioctl: ___syscall_ioctl,\n        __syscall_openat: ___syscall_openat,\n        _abort_js: __abort_js,\n        _embind_register_bigint: __embind_register_bigint,\n        _embind_register_bool: __embind_register_bool,\n        _embind_register_class: __embind_register_class,\n        _embind_register_class_constructor: __embind_register_class_constructor,\n        _embind_register_class_function: __embind_register_class_function,\n        _embind_register_emval: __embind_register_emval,\n        _embind_register_float: __embind_register_float,\n        _embind_register_function: __embind_register_function,\n        _embind_register_integer: __embind_register_integer,\n        _embind_register_memory_view: __embind_register_memory_view,\n        _embind_register_std_string: __embind_register_std_string,\n        _embind_register_std_wstring: __embind_register_std_wstring,\n        _embind_register_void: __embind_register_void,\n        _emscripten_runtime_keepalive_clear: __emscripten_runtime_keepalive_clear,\n        _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n        _emval_create_invoker: __emval_create_invoker,\n        _emval_decref: __emval_decref,\n        _emval_get_global: __emval_get_global,\n        _emval_get_property: __emval_get_property,\n        _emval_incref: __emval_incref,\n        _emval_instanceof: __emval_instanceof,\n        _emval_invoke: __emval_invoke,\n        _emval_new_cstring: __emval_new_cstring,\n        _emval_new_object: __emval_new_object,\n        _emval_run_destructors: __emval_run_destructors,\n        _emval_set_property: __emval_set_property,\n        _mmap_js: __mmap_js,\n        _munmap_js: __munmap_js,\n        _setitimer_js: __setitimer_js,\n        emscripten_get_heap_max: _emscripten_get_heap_max,\n        emscripten_resize_heap: _emscripten_resize_heap,\n        emscripten_webgpu_get_device: _emscripten_webgpu_get_device,\n        emscripten_webgpu_import_render_pass_encoder: _emscripten_webgpu_import_render_pass_encoder,\n        environ_get: _environ_get,\n        environ_sizes_get: _environ_sizes_get,\n        fd_close: _fd_close,\n        fd_read: _fd_read,\n        fd_seek: _fd_seek,\n        fd_write: _fd_write,\n        invoke_iii,\n        invoke_iiii,\n        invoke_iiiii,\n        proc_exit: _proc_exit,\n        wgpuBindGroupLayoutRelease: _wgpuBindGroupLayoutRelease,\n        wgpuBindGroupRelease: _wgpuBindGroupRelease,\n        wgpuBufferDestroy: _wgpuBufferDestroy,\n        wgpuBufferRelease: _wgpuBufferRelease,\n        wgpuDeviceCreateBindGroup: _wgpuDeviceCreateBindGroup,\n        wgpuDeviceCreateBindGroupLayout: _wgpuDeviceCreateBindGroupLayout,\n        wgpuDeviceCreateBuffer: _wgpuDeviceCreateBuffer,\n        wgpuDeviceCreatePipelineLayout: _wgpuDeviceCreatePipelineLayout,\n        wgpuDeviceCreateRenderPipeline: _wgpuDeviceCreateRenderPipeline,\n        wgpuDeviceCreateSampler: _wgpuDeviceCreateSampler,\n        wgpuDeviceCreateShaderModule: _wgpuDeviceCreateShaderModule,\n        wgpuDeviceCreateTexture: _wgpuDeviceCreateTexture,\n        wgpuDeviceGetQueue: _wgpuDeviceGetQueue,\n        wgpuPipelineLayoutRelease: _wgpuPipelineLayoutRelease,\n        wgpuQueueRelease: _wgpuQueueRelease,\n        wgpuQueueWriteBuffer: _wgpuQueueWriteBuffer,\n        wgpuQueueWriteTexture: _wgpuQueueWriteTexture,\n        wgpuRenderPassEncoderDrawIndexed: _wgpuRenderPassEncoderDrawIndexed,\n        wgpuRenderPassEncoderSetBindGroup: _wgpuRenderPassEncoderSetBindGroup,\n        wgpuRenderPassEncoderSetBlendConstant: _wgpuRenderPassEncoderSetBlendConstant,\n        wgpuRenderPassEncoderSetIndexBuffer: _wgpuRenderPassEncoderSetIndexBuffer,\n        wgpuRenderPassEncoderSetPipeline: _wgpuRenderPassEncoderSetPipeline,\n        wgpuRenderPassEncoderSetScissorRect: _wgpuRenderPassEncoderSetScissorRect,\n        wgpuRenderPassEncoderSetVertexBuffer: _wgpuRenderPassEncoderSetVertexBuffer,\n        wgpuRenderPassEncoderSetViewport: _wgpuRenderPassEncoderSetViewport,\n        wgpuRenderPipelineRelease: _wgpuRenderPipelineRelease,\n        wgpuSamplerRelease: _wgpuSamplerRelease,\n        wgpuShaderModuleRelease: _wgpuShaderModuleRelease,\n        wgpuTextureCreateView: _wgpuTextureCreateView,\n        wgpuTextureRelease: _wgpuTextureRelease,\n        wgpuTextureViewRelease: _wgpuTextureViewRelease,\n    };\n    var wasmExports = await createWasm();\n    function invoke_iii(index, a1, a2) {\n        var sp = stackSave();\n        try {\n            return getWasmTableEntry(index)(a1, a2);\n        } catch (e) {\n            stackRestore(sp);\n            if (e !== e + 0) throw e;\n            _setThrew(1, 0);\n        }\n    }\n    function invoke_iiiii(index, a1, a2, a3, a4) {\n        var sp = stackSave();\n        try {\n            return getWasmTableEntry(index)(a1, a2, a3, a4);\n        } catch (e) {\n            stackRestore(sp);\n            if (e !== e + 0) throw e;\n            _setThrew(1, 0);\n        }\n    }\n    function invoke_iiii(index, a1, a2, a3) {\n        var sp = stackSave();\n        try {\n            return getWasmTableEntry(index)(a1, a2, a3);\n        } catch (e) {\n            stackRestore(sp);\n            if (e !== e + 0) throw e;\n            _setThrew(1, 0);\n        }\n    }\n    var calledRun;\n    function stackCheckInit() {\n        _emscripten_stack_init();\n        writeStackCookie();\n    }\n    function run() {\n        if (runDependencies > 0) {\n            dependenciesFulfilled = run;\n            return;\n        }\n        stackCheckInit();\n        preRun();\n        if (runDependencies > 0) {\n            dependenciesFulfilled = run;\n            return;\n        }\n        function doRun() {\n            assert(!calledRun);\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT) return;\n            initRuntime();\n            readyPromiseResolve?.(Module);\n            Module[\"onRuntimeInitialized\"]?.();\n            consumedModuleProp(\"onRuntimeInitialized\");\n            assert(\n                !Module[\"_main\"],\n                'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]',\n            );\n            postRun();\n        }\n        if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(() => {\n                setTimeout(() => Module[\"setStatus\"](\"\"), 1);\n                doRun();\n            }, 1);\n        } else {\n            doRun();\n        }\n        checkStackCookie();\n    }\n    function checkUnflushedContent() {\n        var oldOut = out;\n        var oldErr = err;\n        var has = false;\n        out = err = (x) => {\n            has = true;\n        };\n        try {\n            _fflush(0);\n            [\"stdout\", \"stderr\"].forEach((name) => {\n                var info = FS.analyzePath(\"/dev/\" + name);\n                if (!info) return;\n                var stream = info.object;\n                var rdev = stream.rdev;\n                var tty = TTY.ttys[rdev];\n                if (tty?.output?.length) {\n                    has = true;\n                }\n            });\n        } catch (e) {}\n        out = oldOut;\n        err = oldErr;\n        if (has) {\n            warnOnce(\n                \"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.\",\n            );\n        }\n    }\n    function preInit() {\n        if (Module[\"preInit\"]) {\n            if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n            while (Module[\"preInit\"].length > 0) {\n                Module[\"preInit\"].shift()();\n            }\n        }\n        consumedModuleProp(\"preInit\");\n    }\n    preInit();\n    run();\n    if (runtimeInitialized) {\n        moduleRtn = Module;\n    } else {\n        moduleRtn = new Promise((resolve, reject) => {\n            readyPromiseResolve = resolve;\n            readyPromiseReject = reject;\n        });\n    }\n    for (const prop of Object.keys(Module)) {\n        if (!(prop in moduleArg)) {\n            Object.defineProperty(moduleArg, prop, {\n                configurable: true,\n                get() {\n                    abort(\n                        `Access to module property ('${prop}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`,\n                    );\n                },\n            });\n        }\n    }\n    return moduleRtn;\n}\nexport default MainExport;\n"],
  "mappings": "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",
  "names": ["result", "byteArray", "err", "xhr", "lazyArray", "handle", "typeConverters", "throwBindingError", "argTypes", "argFromPtr", "desc", "wasmExports"]
}
